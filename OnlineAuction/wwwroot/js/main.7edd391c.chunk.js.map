{"version":3,"sources":["components/api-authorization/ApiAuthorizationConstants.js","components/api-authorization/AuthorizeService.js","components/Loader/Loader.js","components/LoadingPage/LoadingPage.js","components/api-authorization/Login.js","components/CustomMessagePage/CustomMessagePage.js","components/api-authorization/Logout.js","components/api-authorization/ApiAuthorizationRoutes.js","components/api-authorization/LoginMenu.js","components/NavMenu/NavMenu.js","components/LotConstants.js","components/Footer/Footer.js","components/Layout.js","components/api-authorization/AuthorizeRoute.js","redux/types.js","redux/actions.js","components/Timer/getTime.js","components/Timer/openHubConnection.js","components/Timer/Timer.js","components/IncreaseRateButtons/IncreaseRateButtons.js","components/Lot/classes.js","components/Lot/Lot.js","components/LotPreview/LotPreview.js","components/Pagination/Pagination.js","components/Lots/lotTypes.js","components/Lots/multiselectStyles.js","components/Lots/selectedValues.js","components/Lots/Lots.js","components/AdminLotPreview/classes.js","components/AdminLotPreview/deleteLot.js","components/DropDownLots/fetchDropDrownLots.js","components/DropDownPagination/DropDownPagination.js","components/AdminLotPreview/startAfter.js","components/DropDownLots/DropDownLots.js","components/AdminLotPreview/AdminLotPreview.js","components/ResultTextBlock/ResultTextBlock.js","components/Lots/AdminPanel.js","components/LotsPlug/LotsPlug.js","components/FormErrors/FormErrors.js","components/AddLotTextInput/AddLotTextInput.js","components/AddLot/inputCheckingFunctions.js","components/AddLot/tryAddLot.js","components/AddLot/addLotClasses.js","components/AddLot/fileSelectedHandler.js","components/AddLot/checkImageSize.js","components/AddLot/checkParametersValidity.js","components/AddLot/AddLot.js","components/AddLotPage/AddLotPage.js","components/Winners/Winners.js","components/UserPage/UserPage.js","App.js","redux/lotsReducer.js","redux/appReducer.js","redux/rootReducer.js","index.js"],"names":["ApplicationName","QueryParameterNames","LogoutActions","LoginActions","prefix","ApplicationPaths","DefaultLoginRedirectPath","ApiAuthorizationClientConfigurationUrl","ApiAuthorizationPrefix","Login","LoginFailed","LoginCallback","Register","Profile","LogOut","LoggedOut","LogOutCallback","IdentityRegisterPath","IdentityManagePath","UserRoles","authService","_callbacks","_nextSubscriptionId","_user","_isAuthenticated","_popUpDisabled","this","getUser","user","profile","ensureUserManagerInitialized","userManager","access_token","state","signinRedirect","createArguments","redirect","console","log","error","url","signinCallback","updateState","success","Error","signoutPopup","undefined","signoutRedirect","signoutCallback","response","data","notifySubscribers","callback","push","subscription","subscriptionId","subscriptionIndex","map","element","index","found","filter","length","splice","i","useReplaceToNavigate","message","status","AuthenticationResultStatus","Fail","Success","Redirect","fetch","ok","json","settings","automaticSilentRenew","includeIdTokenInSilentRenew","userStore","WebStorageStateStore","UserManager","events","addUserSignedOut","a","removeUser","role","Array","includes","Loader","className","LoadingPage","classes","classNames","props","action","login","processLoginCallback","URLSearchParams","window","location","search","get","setState","redirectToProfile","redirectToRegister","returnUrl","signIn","result","navigateToReturnUrl","href","completeSignIn","getReturnUrl","fromQuery","startsWith","origin","redirectToApiAuthorizationPath","encodeURI","apiAuthorizationPath","redirectUrl","replace","Component","CustomMessagePage","pageClasses","useMemo","Logout","isReady","authenticated","history","local","logout","processLogoutCallback","populateAuthenticationState","isAuthenticated","signOut","completeSignOut","ApiAuthorizationRoutes","path","render","loginAction","logoutAction","name","LoginMenu","userName","_subscription","subscribe","populateState","unsubscribe","Promise","all","profilePath","logoutPath","pathname","authenticatedView","registerPath","loginPath","anonymousView","NavItem","NavLink","tag","Link","to","NavMenu","collapsed","isAdmin","titleClasses","headerClasses","toggleNavbar","bind","subsctibeId","hasRole","buttonsWrapperClasses","Navbar","Container","NavbarBrand","onClick","displayName","lotControllerPath","lotHubPath","iconsPath","Footer","footerClasses","cardNameClasses","snInfoClasses","src","alt","Layout","children","AuthorizeRoute","ready","authenticationChanged","link","document","createElement","protocol","host","hash","component","rest","FETCH_LOTS","FETCH_LOT","UPDATE_LOT","UPDATE_LOT_PRICE","UPDATE_LOT_ACTIVITY","CLOSE_LOT","DELETE_LOT","SHOW_LOT_LOADER","HIDE_LOT_LOADER","SHOW_WINNERS_LOADER","HIDE_WINNERS_LOADER","SHOW_USER_LOADER","HIDE_USER_LOADER","fetchLots","page","showSold","showUnsold","dispatch","showLoader","type","payload","activePage","hideLoader","updateLotPrice","id","price","renderTime","dimension","time","timerItemClasses","getTimeMinutes","openHubConnection","lot","hubConnection","signalR","withUrl","build","on","parseInt","updateLot","isActive","start","Timer","useState","remainSeconds","setSeconds","useRef","isMountedRef","useDispatch","timerClasses","useEffect","current","seconds","updateLotActivity","priceUsd","closeLot","isSold","lotMessage","IncreaseRateButtons","useSelector","lotsInfo","lots","find","isUser","setUser","setConnection","useCallback","getAccessToken","token","accessTokenFactory","info","JSON","parse","lotId","successed","alert","updatePrice","percentage","invoke","minPriceUsd","buttonClasses","getNewPrice","Math","trunc","disabled","lotClasses","soldLotClasses","notActiveClasses","Lot","loading","app","lotLoading","fetchLot","lotInfoClasses","imagePath","description","LotPreview","lotPreviewClasses","lotPreviewInfo","lotNameClasses","Pagination","pageCount","items","abs","totalPages","multiselectStyles","multiselectContainer","chips","background","color","option","getSelectedValues","selectedValues","onSelect","resetPages","selectedLotTypes","setSelectedLotTypes","some","item","getMultiSelect","options","onRemove","displayValue","style","Lots","lotsWrapperClasses","multiselect","adminLotPreviewClasses","minorButtonClasses","majorButtonClasses","buttonSetNexLotClasses","buttonWarningClasses","inputClasses","setNextLotInputClasses","titleWrapperClasses","descriptionClasses","deleteLot","setOperationResult","method","headers","text","deleteLotAction","e","fetchDropDownLots","setDropDown","DropDownPagination","startAfter","prevLot","dropDown","body","stringify","previousLotId","selected","isOpen","DropDownLots","currentLot","buttonNextLotClasses","dropDownContentClasses","buttonWrapperClasses","then","pagesCount","dropDownContent","dropDownTitle","AdminLotPreview","connection","startLotCallback","startLotConnection","deleteLotCallback","ResultTextBlock","AdminPanel","operationResult","setResult","LotsPlug","admin","setAdminRights","match","params","pageParams","CheckAdminRights","subscribeId","isNaN","FormErrors","errors","AddLotTextInput","labelText","checkingFunctions","formClasses","handleChangeText","event","func","target","value","onChange","onBlur","required","descriptionCheckingFunctions","functions","nameCheckingFunctions","minPriceCheckingFunctions","durationCheckingFunctions","TryAddLot","formData","setAddingResult","mainClasses","fileSelectedHandler","setFile","setFileErrors","file","reader","FileReader","readAsDataURL","onload","image","Image","height","width","checkImageSize","files","checkParametersValidity","fields","field","AddLot","addingResult","lotName","setLotName","lotDescription","setDescription","lotMinPrice","setMinPrice","lotDuration","setDuration","fileErrors","uploadDataCallback","FormData","append","onSubmit","preventDefault","htmlFor","AddLotPage","setAdmin","isAdminCallback","Winners","winners","setWinners","winnersLoading","getWinners","tableClasses","winner","userId","ownerName","UserPage","setError","userLoading","fetchUser","firstName","lastName","email","winningLots","App","containerClasses","exact","initialState","rootReducer","combineReducers","concat","baseUrl","getElementsByTagName","getAttribute","rootElement","getElementById","store","createStore","compose","applyMiddleware","thunk","ReactDOM","basename"],"mappings":"ySAAaA,EAAkB,gBAElBC,EACA,YADAA,EAEF,UAGEC,EACK,kBADLA,EAEH,SAFGA,EAGA,aAGAC,EACJ,QADIA,EAEI,iBAFJA,EAGE,eAHFA,EAIF,UAJEA,EAKD,WAGNC,EAAS,kBAEFC,EAAmB,CAC9BC,yBAA0B,IAC1BC,uCAAuC,mBAAD,OAAqBP,GAC3DQ,uBAAwBJ,EACxBK,MAAM,GAAD,OAAKL,EAAL,YAAeD,GACpBO,YAAY,GAAD,OAAKN,EAAL,YAAeD,GAC1BQ,cAAc,GAAD,OAAKP,EAAL,YAAeD,GAC5BS,SAAS,GAAD,OAAKR,EAAL,YAAeD,GACvBU,QAAQ,GAAD,OAAKT,EAAL,YAAeD,GACtBW,OAAO,GAAD,OAAKV,EAAL,YAAeF,GACrBa,UAAU,GAAD,OAAKX,EAAL,YAAeF,GACxBc,eAAe,GAAD,OAAKZ,EAAL,YAAeF,GAC7Be,qBAAsB,6BACtBC,mBAAoB,4BAGTC,EACI,QADJA,EAEL,OC6IFC,EAAc,IAnLpB,iDACIC,WAAa,GADjB,KAEIC,oBAAsB,EAF1B,KAGIC,MAAQ,KAHZ,KAIIC,kBAAmB,EAJvB,KAQIC,gBAAiB,EARrB,8LAW2BC,KAAKC,UAXhC,cAWcC,EAXd,2BAYiBA,GAZjB,0PAgBYF,KAAKH,QAASG,KAAKH,MAAMM,QAhBrC,yCAiBmBH,KAAKH,MAAMM,SAjB9B,uBAoBcH,KAAKI,+BApBnB,uBAqB2BJ,KAAKK,YAAYJ,UArB5C,cAqBcC,EArBd,yBAsBeA,GAAQA,EAAKC,SAtB5B,6QA0BcH,KAAKI,+BA1BnB,uBA2B2BJ,KAAKK,YAAYJ,UA3B5C,cA2BcC,EA3Bd,yBA4BeA,GAAQA,EAAKI,cA5B5B,4KA+BiBC,GA/BjB,iFAgCcP,KAAKI,+BAhCnB,gCAkCkBJ,KAAKK,YAAYG,eAAeR,KAAKS,gBAAgBF,IAlCvE,gCAmCmBP,KAAKU,YAnCxB,uCAqCYC,QAAQC,IAAI,kCAAZ,MArCZ,kBAsCmBZ,KAAKa,MAAL,OAtCnB,8LA0CyBC,GA1CzB,gGA4CkBd,KAAKI,+BA5CvB,uBA6C+BJ,KAAKK,YAAYU,eAAeD,GA7C/D,cA6CkBZ,EA7ClB,OA8CYF,KAAKgB,YAAYd,GA9C7B,kBA+CmBF,KAAKiB,QAAQf,GAAQA,EAAKK,QA/C7C,yCAiDYI,QAAQC,IAAI,kCAAZ,MAjDZ,kBAkDmBZ,KAAKa,MAAM,mCAlD9B,wLA2DkBN,GA3DlB,iFA4DcP,KAAKI,+BA5DnB,oBA8DgBJ,KAAKD,eA9DrB,sBA+DsB,IAAImB,MAAM,uGA/DhC,uBAkEkBlB,KAAKK,YAAYc,aAAanB,KAAKS,mBAlErD,cAmEYT,KAAKgB,iBAAYI,GAnE7B,kBAoEmBpB,KAAKiB,QAAQV,IApEhC,yCAsEYI,QAAQC,IAAI,wBAAZ,MAtEZ,oBAwEsBZ,KAAKK,YAAYgB,gBAAgBrB,KAAKS,gBAAgBF,IAxE5E,iCAyEuBP,KAAKU,YAzE5B,0CA2EgBC,QAAQC,IAAI,2BAAZ,MA3EhB,kBA4EuBZ,KAAKa,MAAL,OA5EvB,wMAiF0BC,GAjF1B,uFAkFcd,KAAKI,+BAlFnB,gCAoFmCJ,KAAKK,YAAYiB,gBAAgBR,GApFpE,cAoFkBS,EApFlB,OAqFYvB,KAAKgB,YAAY,MArF7B,kBAsFmBhB,KAAKiB,QAAQM,GAAYA,EAASC,OAtFrD,yCAwFYb,QAAQC,IAAR,4DAxFZ,kBAyFmBZ,KAAKa,MAAL,OAzFnB,mJA6FgBX,GACRF,KAAKH,MAAQK,EACbF,KAAKF,mBAAqBE,KAAKH,MAC/BG,KAAKyB,sBAhGb,gCAmGcC,GAEN,OADA1B,KAAKL,WAAWgC,KAAK,CAAED,WAAUE,aAAc5B,KAAKJ,wBAC7CI,KAAKJ,oBAAsB,IArG1C,kCAwGgBiC,GACR,IAAMC,EAAoB9B,KAAKL,WAC1BoC,KAAI,SAACC,EAASC,GAAV,OAAoBD,EAAQJ,eAAiBC,EAAiB,CAAEK,OAAO,EAAMD,SAAU,CAAEC,OAAO,MACpGC,QAAO,SAAAH,GAAO,OAAsB,IAAlBA,EAAQE,SAC/B,GAAiC,IAA7BJ,EAAkBM,OAClB,MAAM,IAAIlB,MAAJ,mDAAsDY,EAAkBM,SAGlFpC,KAAKL,WAAW0C,OAAOP,EAAkB,GAAGG,MAAO,KAhH3D,0CAoHQ,IAAK,IAAIK,EAAI,EAAGA,EAAItC,KAAKL,WAAWyC,OAAQE,IAAK,EAE7CZ,EADiB1B,KAAKL,WAAW2C,GAAGZ,eArHhD,sCA0HoBnB,GACZ,MAAO,CAAEgC,sBAAsB,EAAMf,KAAMjB,KA3HnD,4BA8HUiC,GACF,MAAO,CAAEC,OAAQC,EAA2BC,KAAMH,aA/H1D,8BAkIYjC,GACJ,MAAO,CAAEkC,OAAQC,EAA2BE,QAASrC,WAnI7D,iCAuIQ,MAAO,CAAEkC,OAAQC,EAA2BG,YAvIpD,sLA2IiCzB,IAArBpB,KAAKK,YA3IjB,iEA+I6ByC,MAAMnE,EAAiBE,wCA/IpD,WA+IY0C,EA/IZ,QAgJsBwB,GAhJtB,sBAiJkB,IAAI7B,MAAJ,uCAA0C5C,EAA1C,MAjJlB,uBAoJ6BiD,EAASyB,OApJtC,QAoJYC,EApJZ,QAqJiBC,sBAAuB,EAChCD,EAASE,6BAA8B,EACvCF,EAASG,UAAY,IAAIC,uBAAqB,CAC1C3E,OAAQJ,IAGZ0B,KAAKK,YAAc,IAAIiD,cAAYL,GAEnCjD,KAAKK,YAAYkD,OAAOC,iBAAxB,sBAAyC,sBAAAC,EAAA,sEAC/B,EAAKpD,YAAYqD,aADc,OAErC,EAAK1C,iBAAYI,GAFoB,4CA7JjD,8KAmKkBuC,GAnKlB,uFAoK2B3D,KAAKC,UApKhC,YAoKcC,EApKd,8BAuKgBA,EAAKyD,gBAAgBC,OAvKrC,yCAwKuB1D,EAAKyD,KAAKE,SAASF,IAxK1C,gCA0KuBzD,EAAKyD,OAASA,GA1KrC,yDA6KmB,GA7KnB,yIAgL4B,OAAOjE,MAhLnC,MAqLeA,IAEFgD,EAA6B,CACtCG,SAAU,WACVD,QAAS,UACTD,KAAM,QC3LK,SAASmB,IACpB,OAAQ,qBAAKC,UAAU,W,oBCCZ,SAASC,IACpB,IAAMC,EAAUC,IAAW,OAAQ,qBAAsB,eAAgB,oBACzE,OACI,qBAAKH,UAAWE,EAAhB,SACI,cAACH,EAAD,MCGL,IAAM/E,EAAb,kDACI,WAAYoF,GAAQ,IAAD,8BACf,cAAMA,IAED5D,MAAQ,CACTiC,aAASpB,GAJE,EADvB,gEAUQ,IAAMgD,EAASpE,KAAKmE,MAAMC,OAC1B,OAAQA,GACJ,KAAK3F,EAEDuB,KAAKqE,MAAM,KACX,MACJ,KAAK5F,EACDuB,KAAKsE,uBACL,MACJ,KAAK7F,EACD,IACMoC,EADS,IAAI0D,gBAAgBC,OAAOC,SAASC,QAC9BC,IAAIpG,GACzByB,KAAK4E,SAAS,CAAEpC,QAAS3B,IACzB,MACJ,KAAKpC,EACDuB,KAAK6E,oBACL,MACJ,KAAKpG,EACDuB,KAAK8E,qBACL,MACJ,QACI,MAAM,IAAI5D,MAAJ,0BAA6BkD,EAA7B,SA/BtB,+BAoCQ,IAAMA,EAASpE,KAAKmE,MAAMC,OAClB5B,EAAYxC,KAAKO,MAAjBiC,QAER,GAAMA,EACF,OAAO,8BAAMA,IAEb,OAAQ4B,GACJ,KAAK3F,EAEL,KAAKA,EACD,OAAQ,cAACuF,EAAD,IACZ,KAAKvF,EACL,KAAKA,EACD,OAAQ,cAACuF,EAAD,IACZ,QACI,MAAM,IAAI9C,MAAJ,0BAA6BkD,EAA7B,SAnD1B,qEAwDgBW,GAxDhB,gFAyDcxE,EAAQ,CAAEwE,aAzDxB,SA0D6BrF,EAAYsF,OAAOzE,GA1DhD,OA0Dc0E,EA1Dd,YA2DgBA,EAAOxC,OA3DvB,cA4DiBC,EAA2BG,SA5D5C,SA8DiBH,EAA2BE,QA9D5C,SAiEiBF,EAA2BC,KAjE5C,uEA+DsB3C,KAAKkF,oBAAoBH,GA/D/C,mDAkEgB/E,KAAK4E,SAAS,CAAEpC,QAASyC,EAAOzC,UAlEhD,mCAqEsB,IAAItB,MAAJ,gCAAmC+D,EAAOxC,OAA1C,MArEtB,8QA0Ec3B,EAAM0D,OAAOC,SAASU,KA1EpC,SA2E6BzF,EAAY0F,eAAetE,GA3ExD,OA2EcmE,EA3Ed,YA4EgBA,EAAOxC,OA5EvB,cA6EiBC,EAA2BG,SA7E5C,SAiFiBH,EAA2BE,QAjF5C,SAoFiBF,EAA2BC,KApF5C,yBAgFsB,IAAIzB,MAAM,wBAhFhC,wBAkFsBlB,KAAKkF,oBAAoBlF,KAAKqF,aAAaJ,EAAO1E,QAlFxE,mDAqFgBP,KAAK4E,SAAS,CAAEpC,QAASyC,EAAOzC,UArFhD,mCAwFsB,IAAItB,MAAJ,gDAAmD+D,EAAOxC,OAA1D,OAxFtB,0IA4FiBlC,GACT,IACM+E,EADS,IAAIf,gBAAgBC,OAAOC,SAASC,QAC1BC,IAAIpG,GAC7B,GAAI+G,IAAcA,EAAUC,WAAV,UAAwBf,OAAOC,SAASe,OAAxC,MAEd,MAAM,IAAItE,MAAM,yFAEpB,OAAQX,GAASA,EAAMwE,WAAcO,GAA9B,UAA8Cd,OAAOC,SAASe,OAA9D,OAnGf,2CAuGQxF,KAAKyF,+BAAL,UAAuC9G,EAAiBY,qBAAxD,YAAgFhB,EAAhF,YAAiHmH,UAAU/G,EAAiBI,WAvGpJ,0CA2GQiB,KAAKyF,+BAA+B9G,EAAiBa,sBA3G7D,qDA8GmCmG,GAC3B,IAAMC,EAAW,UAAMpB,OAAOC,SAASe,QAAtB,OAA+BG,GAIhDnB,OAAOC,SAASoB,QAAQD,KAnHhC,0CAsHwBb,GAGhBP,OAAOC,SAASoB,QAAQd,OAzHhC,GAA2Be,aCRZ,SAASC,EAAT,GAAsC,IAAVvD,EAAS,EAATA,QACjCwD,EAAcC,mBAAQ,WACxB,OAAO/B,IAAW,OAAQ,4BAA4B,sBACvD,IAEH,OACI,qBAAKH,UAAWiC,EAAhB,SACKxD,ICCN,IAAM0D,EAAb,kDACI,WAAY/B,GAAQ,IAAD,8BACf,cAAMA,IAED5D,MAAQ,CACTiC,aAASpB,EACT+E,SAAS,EACTC,eAAe,GANJ,EADvB,gEAYQ,IAAMhC,EAASpE,KAAKmE,MAAMC,OAC1B,OAAQA,GACJ,KAAK5F,EACKgG,OAAO6B,QAAQ9F,MAAMA,MAAM+F,MAC7BtG,KAAKuG,OAAOvG,KAAKqF,gBAGjBrF,KAAK4E,SAAS,CAAEuB,SAAS,EAAM3D,QAAS,uDAE5C,MACJ,KAAKhE,EACDwB,KAAKwG,wBACL,MACJ,KAAKhI,EACDwB,KAAK4E,SAAS,CAAEuB,SAAS,EAAM3D,QAAS,iCACxC,MACJ,QACI,MAAM,IAAItB,MAAJ,0BAA6BkD,EAA7B,MAGdpE,KAAKyG,gCAhCb,+BAmCc,IAAD,EACwBzG,KAAKO,MAA1B4F,EADH,EACGA,QAAS3D,EADZ,EACYA,QACjB,IAAK2D,EACD,OAAO,wBAEX,GAAM3D,EACF,OAAQ,cAACuD,EAAD,CAAmBvD,QAASA,IAEpC,IAAM4B,EAASpE,KAAKmE,MAAMC,OAC1B,OAAQA,GACJ,KAAK5F,EAEL,KAAKA,EACD,OAAQ,cAACwF,EAAD,IACZ,KAAKxF,EACD,OAAQ,8BAAMgE,IAClB,QACI,MAAM,IAAItB,MAAJ,0BAA6BkD,EAA7B,SApD1B,sEAyDiBW,GAzDjB,gFA0DcxE,EAAQ,CAAEwE,aA1DxB,SA2DsCrF,EAAYgH,kBA3DlD,mDA6DiChH,EAAYiH,QAAQpG,GA7DrD,OA6DkB0E,EA7DlB,YA8DoBA,EAAOxC,OA9D3B,cA+DqBC,EAA2BG,SA/DhD,UAiEqBH,EAA2BE,QAjEhD,UAoEqBF,EAA2BC,KApEhD,yEAkE0B3C,KAAKkF,oBAAoBH,GAlEnD,mDAqEoB/E,KAAK4E,SAAS,CAAEpC,QAASyC,EAAOzC,UArEpD,mCAwE0B,IAAItB,MAAM,yCAxEpC,gCA2EYlB,KAAK4E,SAAS,CAAEpC,QAAS,iCA3ErC,+QAgFc1B,EAAM0D,OAAOC,SAASU,KAhFpC,SAiF6BzF,EAAYkH,gBAAgB9F,GAjFzD,OAiFcmE,EAjFd,YAkFgBA,EAAOxC,OAlFvB,cAmFiBC,EAA2BG,SAnF5C,SAuFiBH,EAA2BE,QAvF5C,SA0FiBF,EAA2BC,KA1F5C,yBAsFsB,IAAIzB,MAAM,wBAtFhC,wBAwFsBlB,KAAKkF,oBAAoBlF,KAAKqF,aAAaJ,EAAO1E,QAxFxE,mDA2FgBP,KAAK4E,SAAS,CAAEpC,QAASyC,EAAOzC,UA3FhD,mCA8FsB,IAAItB,MAAM,yCA9FhC,2RAmGoCxB,EAAYgH,kBAnGhD,OAmGcN,EAnGd,OAoGQpG,KAAK4E,SAAS,CAAEuB,SAAS,EAAMC,kBApGvC,yIAuGiB7F,GACT,IACM+E,EADS,IAAIf,gBAAgBC,OAAOC,SAASC,QAC1BC,IAAIpG,GAC7B,GAAI+G,IAAcA,EAAUC,WAAV,UAAwBf,OAAOC,SAASe,OAAxC,MAEd,MAAM,IAAItE,MAAM,yFAEpB,OAAQX,GAASA,EAAMwE,WACnBO,GADG,UAEAd,OAAOC,SAASe,QAFhB,OAEyB7G,EAAiBU,aAhHzD,0CAmHwB0F,GAChB,OAAOP,OAAOC,SAASoB,QAAQd,OApHvC,GAA4Be,aCLPe,E,uKAGjB,OACE,eAAC,WAAD,WACI,cAAC,IAAD,CAAOC,KAAMnI,EAAiBI,MAAOgI,OAAQ,kBAAMC,EAAYvI,MAC/D,cAAC,IAAD,CAAOqI,KAAMnI,EAAiBK,YAAa+H,OAAQ,kBAAMC,EAAYvI,MACrE,cAAC,IAAD,CAAOqI,KAAMnI,EAAiBM,cAAe8H,OAAQ,kBAAMC,EAAYvI,MACvE,cAAC,IAAD,CAAOqI,KAAMnI,EAAiBQ,QAAS4H,OAAQ,kBAAMC,EAAYvI,MACjE,cAAC,IAAD,CAAOqI,KAAMnI,EAAiBO,SAAU6H,OAAQ,kBAAMC,EAAYvI,MAClE,cAAC,IAAD,CAAOqI,KAAMnI,EAAiBS,OAAQ2H,OAAQ,kBAAME,EAAazI,MACjE,cAAC,IAAD,CAAOsI,KAAMnI,EAAiBW,eAAgByH,OAAQ,kBAAME,EAAazI,MACzE,cAAC,IAAD,CAAOsI,KAAMnI,EAAiBU,UAAW0H,OAAQ,kBAAME,EAAazI,a,GAZ1BsH,aAiBpD,SAASkB,EAAYE,GACjB,OAAQ,cAAC,EAAD,CAAO9C,OAAQ8C,IAG3B,SAASD,EAAaC,GAClB,OAAQ,cAAC,EAAD,CAAQ9C,OAAQ8C,I,6DCtBfC,GAAb,kDACI,WAAYhD,GAAQ,IAAD,8BACf,cAAMA,IAED5D,MAAQ,CACTmG,iBAAiB,EACjBU,SAAU,MALC,EADvB,gEAUyB,IAAD,OAChBpH,KAAKqH,cAAgB3H,EAAY4H,WAAU,kBAAM,EAAKC,mBACtDvH,KAAKuH,kBAZb,6CAgBQ7H,EAAY8H,YAAYxH,KAAKqH,iBAhBrC,4KAoB8CI,QAAQC,IAAI,CAAChI,EAAYgH,kBAAmBhH,EAAYO,YApBtG,oCAoBeyG,EApBf,KAoBgCxG,EApBhC,KAqBQF,KAAK4E,SAAS,CACV8B,kBACAU,SAAUlH,GAAQA,EAAKgH,OAvBnC,qIA2Bc,IAAD,EACiClH,KAAKO,MAAnCmG,EADH,EACGA,gBAAiBU,EADpB,EACoBA,SACzB,GAAKV,EAIE,CACH,IAAMiB,EAAW,UAAMhJ,EAAiBQ,SAClCyI,EAAa,CAAEC,SAAS,GAAD,OAAKlJ,EAAiBS,QAAUmB,MAAO,CAAE+F,OAAO,IAC7E,OAAOtG,KAAK8H,kBAAkBV,EAAUO,EAAaC,GANrD,IAAMG,EAAY,UAAMpJ,EAAiBO,UACnC8I,EAAS,UAAMrJ,EAAiBI,OACtC,OAAOiB,KAAKiI,cAAcF,EAAcC,KAhCpD,wCAwCsBZ,EAAUO,EAAaC,GACrC,OAAQ,eAAC,WAAD,WACJ,cAACM,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAASpE,UAAU,iBAAiBqE,IAAKC,IAAMC,GAAIX,EAAnD,uBAEJ,cAACO,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAASpE,UAAU,iBAAiBqE,IAAKC,IAAMC,GAAIV,EAAnD,2BA9ChB,oCAoDkBG,EAAcC,GACxB,OAAQ,eAAC,WAAD,WACJ,cAACE,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAASC,IAAKC,IAAMtE,UAAU,iBAAiBuE,GAAIP,EAAnD,wBAEJ,cAACG,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAASC,IAAKC,IAAMtE,UAAU,iBAAiBuE,GAAIN,EAAnD,4BA1DhB,GAA+BlC,aCKlByC,I,YAAb,kDAGI,WAAapE,GAAQ,IAAD,8BAChB,cAAMA,IACD5D,MAAQ,CACTiI,WAAW,EACXC,SAAU,EACV9E,KAAO,QAEX,EAAK+E,aAAexE,IAAW,QAAS,QACxC,EAAKyE,cAAgBzE,IAAW,iBAAkB,SAAU,oBAC5D,EAAK0E,aAAe,EAAKA,aAAaC,KAAlB,gBATJ,EAHxB,2DAgBQ7I,KAAK4E,SAAS,CACV4D,WAAYxI,KAAKO,MAAMiI,cAjBnC,0CAqByB,IAAD,OAChBxI,KAAK8I,YAAcpJ,EAAY4H,WAAU,kBAAM,EAAKmB,aACpDzI,KAAKyI,YAvBb,6CA2BQ/I,EAAY8H,YAAYxH,KAAK8I,eA3BrC,gKA+B8BpJ,EAAYqJ,QAAQtJ,GA/BlD,OA+BcgJ,EA/Bd,OAgCQzI,KAAK4E,SAAS,CACV6D,YAjCZ,qIAqCe,IAAD,OAEN,OADAzI,KAAKgJ,sBAAwB9E,IAAW,0BAA2B,CAAC,iCAAmClE,KAAKO,MAAMiI,YAE9G,iCACI,cAACS,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAWnF,UAAW/D,KAAK2I,cAA3B,UACI,sBAAK5E,UAAU,eAAf,UACI,oBAAIA,UAAU,gBAAd,SACI,cAACoF,EAAA,EAAD,CAAapF,UAAW/D,KAAK0I,aAAcN,IAAKC,IAAMC,GAAG,IAAzD,8BAEJ,qBAAKvE,UAAU,2BAAf,qEAIJ,oBAAGA,UAAU,kDAAkDqF,QAAS,kBAAM,EAAKR,gBAAnF,UACI,qBAAK7E,UAAU,kBACf,qBAAKA,UAAU,kBACf,qBAAKA,UAAU,qBAEnB,qBAAIA,UAAW/D,KAAKgJ,sBAApB,UACI,cAACd,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAASpE,UAAU,iBAAiBqE,IAAKC,IAAMC,GAAG,IAAlD,oBAGAtI,KAAKO,MAAMkI,SACP,cAACP,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAASpE,UAAU,iBAAiBqE,IAAKC,IAAMC,GAAG,WAAlD,uBAGZ,cAACJ,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAASpE,UAAU,iBAAiBqE,IAAKC,IAAMC,GAAG,WAAlD,uBAEJ,cAAC,GAAD,kBArE5B,GAA6BxC,cAAhByC,GACFc,YAAcd,GAAQrB,KCZ1B,IAAMoC,GAAoB,WAIpBC,GAAa,WAYbC,GAAY,2CCZV,SAASC,KACpB,IAAMxF,EAAUgC,mBAAQ,WACpB,MAAO,CACHyD,cAAgBxF,IAAW,iBAAkB,SAAU,oBACvDyF,gBAAkBzF,IAAW,oBAAqB,SAClD0F,cAAgB1F,IAAW,oBAAqB,sBAErD,IAGH,OACI,yBAAQH,UAAWE,EAAQyF,cAA3B,UACI,sBAAK3F,UAAU,eAAf,UACI,qBAAKA,UAAWE,EAAQ0F,gBAAxB,wBACA,qBAAK5F,UAAU,oBAAf,2DAEJ,sBAAKA,UAAU,eAAf,UACI,qBAAKA,UAAWE,EAAQ0F,gBAAxB,wBACA,qBAAI5F,UAAU,qBAAd,UACI,oBAAIA,UAAU,aAAd,SACI,oBAAGA,UAAU,kBAAkBoB,KAAK,6CAApC,UACI,qBAAKpB,UAAU,kBAAkB8F,IAAG,UAAKL,GAAL,qBAAmCM,IAAI,YAC3E,sBAAM/F,UAAWE,EAAQ2F,cAAzB,0BAGR,oBAAI7F,UAAU,aAAd,SACI,oBAAGA,UAAU,kBAAkBoB,KAAK,+BAApC,UACI,qBAAKpB,UAAU,kBAAkB8F,IAAG,UAAKL,GAAL,oBAAkCM,IAAI,WAC1E,sBAAM/F,UAAWE,EAAQ2F,cAAzB,yBAGR,oBAAI7F,UAAU,aAAd,SACI,oBAAGA,UAAU,kBAAkBoB,KAAK,6CAApC,UACI,qBAAKpB,UAAU,kBAAkB8F,IAAG,UAAKL,GAAL,mBAAiCM,IAAI,UACzE,sBAAM/F,UAAWE,EAAQ2F,cAAzB,iCCjCrB,SAASG,GAAO5F,GACnB,OACI,gCACI,cAAC,GAAD,IACA,cAAC+E,EAAA,EAAD,UACG/E,EAAM6F,WAET,cAACP,GAAD,O,qBCNSQ,G,kDACjB,WAAY9F,GAAQ,IAAD,8BACf,cAAMA,IAED5D,MAAQ,CACT2J,OAAO,EACP9D,eAAe,GALJ,E,gEASE,IAAD,OAChBpG,KAAKqH,cAAgB3H,EAAY4H,WAAU,kBAAM,EAAK6C,2BACtDnK,KAAKyG,gC,6CAIL/G,EAAY8H,YAAYxH,KAAKqH,iB,+BAGvB,IAAD,EAC4BrH,KAAKO,MAA9B2J,EADH,EACGA,MAAO9D,EADV,EACUA,cACXgE,EAAOC,SAASC,cAAc,KAClCF,EAAKjF,KAAOnF,KAAKmE,MAAM2C,KACvB,IAAM/B,EAAS,UAAMqF,EAAKG,SAAX,aAAwBH,EAAKI,MAA7B,OAAoCJ,EAAKvC,UAAzC,OAAoDuC,EAAK1F,QAAzD,OAAkE0F,EAAKK,MAChF7E,EAAW,UAAMjH,EAAiBI,MAAvB,YAAgCR,EAAhC,YAAiEmH,UAAUX,IAC5F,GAAKmF,EAEE,CAAC,IAAD,EACuClK,KAAKmE,MAA5B2B,EADhB,EACK4E,UAAyBC,EAD9B,8BAEH,OAAO,cAAC,IAAD,6BAAWA,GAAX,IACH5D,OAAQ,SAAC5C,GACL,OAAIiC,EACO,cAAC,EAAD,gBAAejC,IAEf,cAAC,IAAD,CAAUmE,GAAI1C,QARjC,OAAO,0B,oLAeiBlG,EAAYgH,kB,OAAlCN,E,OACNpG,KAAK4E,SAAS,CAAEsF,OAAO,EAAM9D,kB,qQAI7BpG,KAAK4E,SAAS,CAAEsF,OAAO,EAAO9D,eAAe,I,SACvCpG,KAAKyG,8B,2GA/CyBX,aCN/B8E,GAAa,aACbC,GAAY,YACZC,GAAa,aACbC,GAAmB,mBACnBC,GAAsB,sBACtBC,GAAY,YACZC,GAAa,aACbC,GAAkB,kBAClBC,GAAkB,kBAClBC,GAAsB,sBACtBC,GAAsB,sBACtBC,GAAmB,mBACnBC,GAAmB,mBCEzB,SAASC,GAAUC,EAAMC,EAAUC,GACtC,8CAAO,WAAMC,GAAN,iBAAApI,EAAA,6DACHoI,EAASC,MADN,SAEoBhJ,MAAM,GAAD,OAAIwG,GAAJ,iBAA8BoC,EAA9B,qBAA+CC,EAA/C,uBAAsEC,IAF/F,cAEGrK,EAFH,gBAGgBA,EAASyB,OAHzB,OAGGA,EAHH,OAIH6I,EAAS,CAACE,KAAOnB,GAAYoB,QAAQ,6BAAKhJ,GAAN,IAAYiJ,WAAaP,EAAMC,WAAUC,iBAC7EC,EAASK,MALN,2CAAP,sDA4BG,SAASC,GAAeC,EAAIC,GAC/B,OAAO,SAAAR,GACHA,EAAS,CAACE,KAAOhB,GAAkBiB,QAAS,CAACI,KAAIC,YAmClD,SAASP,KACZ,MAAO,CACHC,KAAMZ,IAIP,SAASe,KACZ,MAAO,CACHH,KAAMX,ICxFP,IAGMkB,GAAa,SAACC,EAAWC,EAAMC,GACxC,OACI,sBAAK1I,UAAW0I,EAAhB,UACI,qBAAK1I,UAAU,cAAf,SAA8ByI,IAC9B,8BAAMD,QAKLG,GAAiB,SAAAF,GAAI,OAAMA,EAXb,KADE,GAYkD,G,SCRlEG,GAAoB,SAASd,EAAUe,GAChD,IAAMC,GAAgB,IAAIC,MACrBC,QAAQxD,IACRyD,QASL,OAPAH,EAAcI,GPHgB,eOGO,SAAUzK,EAAS4J,GACjDQ,EAAIR,KAAOc,SAASd,IACnBP,EFyBL,SAAmBe,GACtB,OAAO,SAAAf,GACHA,EAAS,CAACE,KAAOjB,GAAYkB,QAASY,KE3BzBO,CAAU,6BAAIP,GAAL,IAAUQ,SPJN,WOIgB5K,SAG9CqK,EAAcQ,QAEPR,GCLI,SAASS,GAAT,GAAuB,IFEVd,EEFGI,EAAM,EAANA,IAAM,EACGW,mBAAS,GADZ,oBAC1BC,EAD0B,KACXC,EADW,KAE3BZ,EAAgBa,iBAAO,MACvBC,EAAeD,iBAAO,MACtBN,EAAWM,kBAAO,GAClB7B,EAAW+B,cACXnB,EAAmBvI,IAAW,cAAe,CAAC,4BAA8B0I,EAAIQ,WAChFS,EAAe3J,IAAW,cAAc,SAgC9C,OA7BA4J,qBAAU,WA0BN,OAzBAH,EAAaI,SAAU,EACpBnB,IAAQC,EAAckB,UACrBlB,EAAckB,QAAUpB,GAAkBd,EAAUe,GAEpDC,EAAckB,QAAQd,GRjBC,gBQiBuB,SAAUe,EAAS3B,EAAOD,GACjEuB,EAAaI,SAAW3B,IAAOQ,EAAIR,KAC9BgB,EAASW,UACTX,EAASW,SAAU,EACnBlC,EHmBjB,SAA2BO,EAAIgB,GAClC,OAAO,SAAAvB,GACHA,EAAS,CAACE,KAAOf,GAAqBgB,QAAS,CAACI,KAAIgB,eGrB3Ba,CAAkBrB,EAAIR,IAAI,KAEvCqB,EAAWO,GAERpB,EAAIsB,WAAa7B,GAChBR,EAASM,GAAeS,EAAIR,GAAIC,QAK5CQ,EAAckB,QAAQd,GR1BP,QQ0BuB,SAASb,GACxCQ,EAAIR,KAAOA,GACVP,EHab,SAAkBO,GACrB,OAAO,SAAAP,GACHA,EAAS,CAACE,KAAOd,GAAWe,QAAS,CAACI,SGfjB+B,CAASvB,EAAIR,SAK3B,kBAAMuB,EAAaI,SAAU,KACrC,CAACnB,EAAKC,IAEND,EAAIwB,SAAWxB,EAAIQ,SACX,KAKP,sBAAKrJ,UAAU,sBAAf,UArCAsK,UAuCI,sBAAKtK,UAAW8J,EAAhB,UACKvB,GAAW,SF9CAE,EE8CsBgB,EF9CbhB,EAZV,KAYgC,GE8COC,GACjDH,GAAW,UAAWI,GAAec,GAAgBf,GACrDH,GAAW,UAAWkB,EF7DV,GE6D0C,EAAGf,SChD3D,SAAS6B,GAAT,GAAmC,IAALlC,EAAI,EAAJA,GACnCP,EAAW+B,cACXhB,EAAM2B,aAAY,SAAAhO,GAAK,OAAIA,EAAMiO,SAASC,KAAKC,MAAK,SAAA9B,GAAG,OAAIA,EAAIR,KAAOc,SAASd,SAC/ES,EAAgBa,iBAAO,MAHgB,EAInBH,oBAAS,GAJU,oBAItCoB,EAJsC,KAI9BC,EAJ8B,KAMvCC,EAAgBC,sBAAW,uCAAC,WAAOlC,GAAP,iBAAAnJ,EAAA,+EAEN/D,EAAYqP,iBAFN,UAGb,QADPC,EAFoB,gCAItBnC,EAAckB,SAAU,IAAIjB,MACvBC,QTde,kBSce,CAACkC,mBAAoB,kBAAMD,KACzDhC,QAELH,EAAckB,QAAQd,GTfJ,eSe2B,SAAUiC,GACnD,IAAMlM,EAAOmM,KAAKC,MAAMF,GACpBlM,EAAKqM,QAAUzC,EAAIR,IAAMpJ,EAAKsM,WAC9BzD,EAASM,GAAenJ,EAAKqM,MAAOrM,EAAKkL,cAX3B,SAchBrB,EAAckB,QAAQV,QAdN,wBAeD3N,EAAYqJ,QAAQtJ,GAfnB,QAehBkP,EAfgB,OAgBtBC,EAAQD,GAhBc,0DAoB1BY,MAAM,SApBoB,0DAAD,sDAsB9B,CAAC1D,IAEJiC,qBAAU,WACNe,EAAcjC,KACf,CAACiC,IAEJ,IAAMW,EAAcV,uBAAY,SAACW,EAAY7C,GACtCC,EAAckB,SACblB,EAAckB,QAAQ2B,OTtCC,gBSsC2B9C,EAAIR,GAAIc,SAASN,EAAIsB,WAAahB,SAASN,EAAI+C,aAAcF,KAEpH,IAEGG,EAAgB3J,mBAAQ,WAC1B,OAAO/B,IAAW,SAAU,sBAC7B,IAEG2L,EAAcf,uBAAY,SAACzC,EAAOoD,GACpC,OAAOK,KAAKC,MAAM1D,EAAQA,EAAQoD,EAAa,OAChD,IAEH,OAAG7C,EAAIwB,SAAWxB,EAAIQ,SACX,KAGP,iCAESuB,GAAU,mBAAG5K,UAAU,kBAAb,yDAEf,sBAAKA,UAAU,oBAAf,UACI,yBAAQA,UAAW6L,EAAeI,UAAWpD,EAAIQ,WAAauB,EAAQvF,QAAS,kBAAMoG,EAAY,EAAG5C,IAApG,kBAAgHiD,EAAYjD,EAAIsB,UAAYtB,EAAI+C,YAAY,GAA5J,OACA,yBAAQ5L,UAAW6L,EAAeI,UAAWpD,EAAIQ,WAAauB,EAAQvF,QAAS,kBAAMoG,EAAY,GAAI5C,IAArG,mBAAkHiD,EAAYjD,EAAIsB,UAAYtB,EAAI+C,YAAY,IAA9J,OACA,yBAAQ5L,UAAW6L,EAAeI,UAAWpD,EAAIQ,WAAauB,EAAQvF,QAAS,kBAAMoG,EAAY,GAAI5C,IAArG,mBAAkHiD,EAAYjD,EAAIsB,UAAYtB,EAAI+C,YAAY,IAA9J,aCtET,IAAMM,GAAa,CACtBC,eAAiBhM,IAAW,oBAAoB,2BAChDiM,iBAAmBjM,IAAW,oBAAoB,kCCMvC,SAASkM,GAAT,GAAmB,IAALhE,EAAI,EAAJA,GACnBP,EAAW+B,cACXhB,EAAM2B,aAAY,SAAAhO,GAAK,OAAIA,EAAMiO,SAASC,KAAKC,MAAK,SAAA9B,GAAG,OAAIA,EAAIR,KAAOc,SAASd,SAC/EiE,EAAU9B,aAAY,SAAAhO,GAAK,OAAIA,EAAM+P,IAAIC,cAE/CzC,qBAAU,WACFlB,GACAf,ENOL,SAAkBO,GACrB,8CAAO,WAAMP,GAAN,iBAAApI,EAAA,6DACHoI,EAASC,MADN,SAEoBhJ,MAAM,GAAD,OAAIwG,GAAJ,YAAyB8C,IAFlD,YAEG7K,EAFH,QAGSwB,GAHT,gCAIoBxB,EAASyB,OAJ7B,OAIOA,EAJP,OAKC6I,EAAS,CAACE,KAAMlB,GAAWmB,QAAShJ,IALrC,OAOH6I,EAASK,MAPN,4CAAP,sDMRiBsE,CAASpE,MAEvB,IAEH,IAAMnI,EAAUgC,mBAAQ,WACpB,MAAO,CACHyC,aAAexE,IAAW,cAAc,SACxCuM,eAAiBvM,IAAW,iBAAkB,WAAY,WAE/D,IAEH,OAAGmM,EACQ,cAACrM,EAAD,IAEP4I,EAKA,qBAAK7I,UAAU,wBAAf,SACI,sBAAKA,UAAU,yBAAf,UACI,sBAAKA,UAAWE,EAAQyE,aAAxB,UACKkE,EAAI1F,KACJ0F,EAAIwB,QAAU,qBAAKrK,UAAWkM,GAAWC,eAA3B,2BACbtD,EAAIwB,SAAWxB,EAAIQ,UAAY,qBAAKrJ,UAAWkM,GAAWE,iBAA3B,mCAErC,qBAAKpM,UAAU,cAAc8F,IAAK+C,EAAI8D,UAAW5G,IAAI,QACrD,sBAAK/F,UAAWE,EAAQwM,eAAxB,UACI,sBAAK1M,UAAU,iBAAf,UAAgC,sBAAMA,UAAU,iBAAhB,2BAAqD,+BAAO6I,EAAI+D,iBAChG,sBAAK5M,UAAU,iBAAf,UAAgC,sBAAMA,UAAU,iBAAhB,qBAA+C,iCAAO6I,EAAIsB,UAAYtB,EAAI+C,YAA3B,aAC/E,cAACrC,GAAD,CAAOV,IAAKA,IACZ,cAAC0B,GAAD,CAAqBlC,GAAIA,YAhB9B,cAACrG,EAAD,CAAmBvD,QAAS,uCC5B5B,SAASoO,GAAT,GAA2B,IAANhE,EAAK,EAALA,IAC1B3I,EAAUgC,mBAAQ,WACpB,MAAO,CACH4K,kBAAmB3M,IAAW,oBAAqB,cAAe,oBAClE4M,eAAiB5M,IAAW,oBAAqB,QACjD6M,eAAgB7M,IAAW,8BAEhC,IAEG0L,EAAgB3J,mBAAQ,WAC1B,OAAO/B,IAAW,SAAU,yBAC7B,IACH,OACI,sBAAKH,UAAWE,EAAQ4M,kBAAxB,UACI,qBAAK9M,UAAU,6BAAf,SACI,qBAAKA,UAAU,qBAAqB8F,IAAK+C,EAAI8D,UAAW5G,IAAI,UAEhE,sBAAK/F,UAAWE,EAAQ6M,eAAxB,UACI,sBAAK/M,UAAU,iCAAf,UACI,sBAAKA,UAAU,6BAAf,UACI,cAAC,IAAD,CAASA,UAAWE,EAAQ8M,eAAgBzI,GAAE,gBAAWsE,EAAIR,IAAOhE,IAAKC,IAAzE,SAAgFuE,EAAI1F,OACnF0F,EAAIwB,QAAU,qBAAKrK,UAAU,gCAAf,6BAEnB,qBAAKA,UAAU,2BAAf,SAA2C6I,EAAI+D,iBAEnD,qBAAK5M,UAAU,mCAAf,SACI,cAAC,IAAD,CAAMA,UAAW6L,EAAetH,GAAE,gBAAWsE,EAAIR,IAAMhE,IAAKC,IAA5D,wCCxBL,SAAS2I,GAAT,GAGX,IAH4C,IAAZC,EAAW,EAAXA,UAC1BC,EAAQ,GACR1C,EAAWD,aAAY,SAAAhO,GAAK,OAAIA,EAAMiO,YACpClM,EAAI,EAAGA,GAAK2O,EAAW3O,IACxBwN,KAAKqB,IAAI7O,EAAIkM,EAASvC,YAAa,IAClCiF,EAAMvP,KAAK,cAAC,IAAD,CACHoC,UAAWG,IAAW,mBAAoB,CAAC,2BAA6BsK,EAASvC,aAAe3J,IAChGgG,GAAE,qBAAgBhG,GAFf,SAKFA,GAFIA,IAOrB,OACI,sBAAKyB,UAAU,aAAf,UAEgC,IAAxByK,EAASvC,YAAoB,cAAC,IAAD,CACzBlI,UAAU,mBACVuE,GAAE,qBAAgBkG,EAASvC,WAAa,GACxC7D,IAAKC,IAHoB,kBAQhC6I,EAEG1C,EAASvC,aAAeuC,EAAS4C,YAAc,cAAC,IAAD,CAC3CrN,UAAU,mBACVuE,GAAE,qBAAgBkG,EAASvC,WAAa,GACxC7D,IAAKC,IAHsC,qBClCxD,I,SCAMgJ,GAAoB,CAC7BC,qBAAsB,CAClB,OAAW,oBAEfC,MAAO,CACHC,WAAY,UACZC,MAAO,QACP,SAAY,OACZ,OAAW,UACX,QAAY,eAEhBC,OAAQ,CACJF,WAAY,UACZC,MAAO,UCPR,SAASE,GAAkBhG,EAAUC,GACxC,IAAMgG,EAAiB,GAOvB,OANGjG,GACCiG,EAAejQ,KAAK,CAACuF,KAAM,iBAAkBkF,GFT9B,IEWhBR,GACCgG,EAAejQ,KAAK,CAACuF,KAAM,mBAAoBkF,GFX9B,IEadwF,EAGJ,SAASC,GAASC,EAAYF,EAAgBlG,EAAMG,EAAUkG,EAAkBC,GACnFF,EAAW/D,SAAU,EAGrBlC,EAASJ,GAAUC,EAFFkG,EAAeK,MAAK,SAAAC,GAAI,OFnBtB,IEmB0BA,EAAK9F,MAC/BwF,EAAeK,MAAK,SAAAC,GAAI,OFnBtB,IEmB0BA,EAAK9F,QAEpD4F,EAAoB,6BAAID,GAAL,IAAuBH,oBAGvC,SAASO,GAAeJ,EAAkBD,EAAYpG,EAAMG,EAAUmG,GACzE,OAAQ,cAAC,eAAD,CACJI,QAASL,EAAiBK,QAC1BR,eAAgBG,EAAiBH,eACjCC,SAAU,SAACD,GAAD,OAAoBC,GAASC,EAAYF,EAAgBlG,EAAMG,EAAUkG,EAAkBC,IACrGK,SAAU,SAACT,GAAD,OAAoBC,GAASC,EAAYF,EAAgBlG,EAAMG,EAAUkG,EAAkBC,IACrGM,aAAa,OACbC,MAAOlB,KCrBA,SAASmB,GAAT,GAAsB,IAAP9G,EAAM,EAANA,KACpBG,EAAW+B,cACXY,EAAWD,aAAY,SAAAhO,GAAK,OAAIA,EAAMiO,YACtC6B,EAAU9B,aAAY,SAAAhO,GAAK,OAAIA,EAAM+P,IAAIC,cAHf,EAIgBhD,mBAAS,CACrD6E,QAAS,CAAC,CAAClL,KAAM,iBAAkBkF,GHhBpB,GGgBmC,CAAClF,KAAM,mBAAoBkF,GHf5D,IGgBjBwF,eAAiB,KANW,oBAIzBG,EAJyB,KAIPC,EAJO,KAQ1BF,EAAapE,kBAAO,GACpB+E,EAAqBvO,IAAW,OAAQ,4BAA6B,oBAE3E4J,qBAAU,WACN,IAAM8D,EAAiBD,GAAkBnD,EAAS7C,SAAU6C,EAAS5C,YACrEoG,EAAoB,6BAAID,GAAL,IAAuBH,sBAC3C,CAAC/F,IAEJiC,qBAAU,WACNjC,EAASJ,GAAUC,EAAM8C,EAAS7C,SAAU6C,EAAS5C,eACtD,CAACC,EAAUH,IAEd,IAAMgH,EAAeP,GAAeJ,EAAkBD,EAAYpG,EAAMG,EAAUmG,GAElF,OAAG3B,EACQ,cAACrM,EAAD,IAER8N,EAAW/D,SACV+D,EAAW/D,SAAU,EACd,cAAC,IAAD,CAAUzF,GAAI,YAErBkG,EAASC,MAASD,EAASC,OAASD,EAASC,KAAKrM,OAE9C,sBAAK2B,UAAW0O,EAAhB,UACKC,EACD,qBAAK3O,UAAU,4BAAf,mFAIR,sBAAKA,UAAW0O,EAAhB,UACKC,EACAlE,EAASC,KAAK1M,KAAI,SAAA6K,GAAG,OAAI,cAACgE,GAAD,CAAYhE,IAAKA,GAAUA,EAAIR,OACzD,qBAAKrI,UAAU,mBAAf,SACI,cAACiN,GAAD,CAAYC,UAAWzC,EAAS4C,kBClDzC,IAAMuB,GAA0B,CACnC9B,kBAAmB3M,IAAW,oBAAqB,0BAA2B,oBAAqB,oBACnG6M,eAAgB7M,IAAW,oBAAoB,0BAA0B,SACzE0O,mBAAqB1O,IAAW,SAAU,4BAA6B,mCACvE2O,mBAAqB3O,IAAW,SAAU,4BAA6B,mCACvE0L,cAAgB1L,IAAW,SAAU,6BACrC4O,uBAAyB5O,IAAW,SAAU,4BAA6B,0CAC3E6O,qBAAuB7O,IAAW,SAAU,4BAA6B,kBAAmB,mCAC5F8O,aAAe9O,IAAW,mBAAoB,mBAAmB,4BACjE+O,uBAAyB/O,IAAW,mBAAoB,mBAAmB,2BAA4B,yCACvG4M,eAAiB5M,IAAW,0BAA0B,oBAAqB,QAC3EgP,oBAAsBhP,IAAW,6BAA8B,oCAC/DiP,mBAAqBjP,IAAW,iCAAkC,6BCZzDkP,GAAY,SAACvH,EAAUO,EAAIiH,GACpC,IACIxH,EdyDD,SAAyBO,GAC5B,8CAAO,WAAMP,GAAN,iBAAApI,EAAA,sEACiB/D,EAAYqP,iBAD7B,cACGC,EADH,gBAEoBlM,MAAM,GAAD,OAAIwG,GAAJ,YAAyB8C,GAAM,CACvDkH,OAAS,SACTC,QAAUvE,EAAa,CACnB,cAAgB,UAAhB,OAA2BA,IADb,KAJnB,YAEGzN,EAFH,QASSwB,GATT,iBAUC8I,EAAS,CAACE,KAAOb,GAAYc,QAAS,CAACI,QAVxC,oCAaWlL,MAbX,UAauBK,EAASiS,OAbhC,qFAAP,sDc1DaC,CAAgBrH,IACzBiH,EAAmB,CACf7Q,QAAS,+BACT8M,WAAW,IAGnB,MAAMoE,GACFL,EAAmB,CACf7Q,QAASkR,EAAElR,QACX8M,WAAW,MCXhB,SAAeqE,GAAtB,yC,8CAAO,WAAiCC,EAAalI,EAAMC,EAAUC,GAA9D,iBAAAnI,EAAA,sEACoBX,MAAM,GAAD,OAAIwG,GAAJ,iBAA8BoC,EAA9B,qBAA+CC,EAA/C,uBAAsEC,IAD/F,YACGrK,EADH,QAESwB,GAFT,gCAGoBxB,EAASyB,OAH7B,cAGOA,EAHP,yBAIQA,GAJR,gCAMI,MANJ,4C,sBCCQ,SAAS6Q,GAAT,GAA4D,IAA/BnI,EAA8B,EAA9BA,KAAMuF,EAAwB,EAAxBA,UAAW2C,EAAa,EAAbA,YACzD,OACI,qBAAK7P,UAAU,2BAAf,SACI,sBAAKA,UAAU,aAAf,UAEiB,IAAT2H,GAAc,wBACV3H,UAAU,mBACVqF,QAAS,kBAAMuK,GAAkBC,EAAalI,EAAO,GAAG,GAAM,GAAM,IAF1D,kBAQdA,IAASuF,GAAa,wBAClBlN,UAAU,mBACVqF,QAAS,kBAAMuK,GAAkBC,EAAalI,EAAO,GAAG,GAAM,GAAM,IAFlD,uBCbnC,IAAMoI,GAAU,uCAAG,WAAOlH,EAAKmH,EAASV,EAAoBW,EAAUJ,GAAnD,eAAAnQ,EAAA,yDAClBmJ,EAAIwB,QAAWxB,EAAIQ,SADD,qBAEd2G,EAAQ3H,GAFM,gCAGM1M,EAAYqP,iBAHlB,cAGRC,EAHQ,gBAISlM,MAAMwG,GAAmB,CAC5CgK,OAAQ,QACRC,QAAUvE,EAAa,CACnB,OAAU,MACV,cAAgB,UAAhB,OAA2BA,IAFb,GAIlBiF,KAAM9E,KAAK+E,UAAU,CACjB7E,MAAQzC,EAAIR,GACZ+H,cAAgBJ,EAAQ3H,OAZlB,cAgBDrJ,GACTsQ,EAAmB,CACf/D,WAAW,EACX9M,QAAS,wCAGb6Q,EAAmB,CACf/D,WAAW,EACX9M,QAAS,4BAxBH,+BA8BlB6Q,EAAmB,CACf/D,WAAW,EACX9M,QAAS,iBAhCK,QAoCtBoR,EAAY,6BACLI,GADI,IAEPI,SAAW,KACXC,QAAS,KAvCS,4CAAH,8DCGR,SAASC,GAAT,GAAwD,IAAjCC,EAAgC,EAAhCA,WAAYlB,EAAoB,EAApBA,mBAAoB,EAClC9F,mBAAS,CACrC8G,QAAS,EACT3I,KAAO,EACPuF,UAAY,EACZmD,SAAW,KACX3F,KAAO,KANuD,oBAC3DuF,EAD2D,KACjDJ,EADiD,KAQ5D3P,EAAUgC,mBAAQ,WACpB,MAAO,CACHuO,qBAAuBtQ,IAAW,SAAU,4BAA6B,kCAAmC,uBAAwB,oBACpIuQ,uBAAyBvQ,IAAW,wBAAyB,oBAC7DwQ,qBAAuBxQ,IAAW,kCAAmC,gCACrE0L,cAAgB1L,IAAW,SAAU,4BAA6B,+BAEvE,IAEH4J,qBAAU,WACN6F,GAAkBC,EAAaI,EAAStI,MAAM,GAAM,GAAMiJ,MAAK,SAAC3R,GACzDA,GACC4Q,EAAY,CACRnF,KAAOzL,EAAKyL,KACZ/C,KAAOsI,EAAStI,KAChBuF,UAAYjO,EAAK4R,WACjBP,OAASL,EAASK,cAI/B,IAEH,IAAMQ,EAAkBb,GAAYA,EAASvF,KACzCuF,EAASvF,KAAK1M,KAAI,SAAA6K,GAAG,OAAIA,EAAIR,KAAOmI,EAAWnI,KAAOQ,EAAIwB,SAAWxB,EAAIQ,UACrE,yBAEIhE,QAAS,kBAAMwK,EAAY,6BAAII,GAAL,IAAeI,SAAUxH,EAAKyH,QAAQ,MAChEtQ,UAAU,qBAHd,UAGoC6I,EAAI1F,KAHxC,SAGoD0F,EAAIR,GAHxD,MACSQ,EAAIR,OAIjB,qBAAKrI,UAAU,qBAAf,sBAEE+Q,EAAgBd,GAAYA,EAASI,SAArB,UAAmCJ,EAASI,SAASlN,KAArD,iBAAkE8M,EAASI,SAAShI,GAApF,KAA4F,iBAElH,OACI,sBAAKrI,UAAU,qBAAf,UACI,sBAAKA,UAAWE,EAAQyQ,qBAAxB,UACI,wBACI3Q,UAAWE,EAAQuQ,qBACnBpL,QAAS,kBAAMwK,EAAY,6BAAII,GAAL,IAAeK,QAASL,EAASK,WAF/D,SAIKS,IAEJd,EAASK,QACN,sBAAKtQ,UAAWE,EAAQwQ,uBAAxB,UACKI,EACD,cAAChB,GAAD,CAAoBnI,KAAMsI,EAAStI,KAAMuF,UAAW+C,EAAS/C,UAAW2C,YAAaA,UAIjG,wBACI7P,UAAWE,EAAQ2L,cACnBxG,QAAS,kBAAM0K,GAAWS,EAAYP,EAASI,SAAUf,EAAoBW,EAAUJ,IAF3F,oBCrDG,SAASmB,GAAT,GAAsE,IAA5CnI,EAA2C,EAA3CA,IAAKoI,EAAsC,EAAtCA,WAAY3B,EAA0B,EAA1BA,mBAAoB3H,EAAM,EAANA,KACpEG,EAAW+B,cACXqH,EAAmBnG,uBAAY,SAAClC,EAAKyG,GACvC,GAAIzG,EAAIwB,QAAWxB,EAAIQ,SAcnBiG,EAAmB,CACf7Q,QAAS,iCACT8M,WAAW,QAhBa,CAC5B,IAAM4F,GAAqB,IAAIpI,MAC1BC,QAAQxD,IACRyD,QAELkI,EAAmB7H,QAAQsH,MAAK,WAC5BO,EAAmBxF,OxBdL,WwBc4B,SAAU9C,EAAIR,IACxDiH,EAAmB,CACf7Q,QAAS,4BACT8M,WAAW,UAUxB,IAEG6F,EAAoBrG,uBAAY,SAAC1C,EAAIP,EAAUH,GACjD0H,GAAUvH,EAAUO,EAAIiH,GACxBxH,EAASJ,GAAUC,GAAM,GAAM,MAChC,CAAC2H,IAEJ,OACI,sBAAKtP,UAAW4O,GAAuB9B,kBAAvC,UACI,qBAAK9M,UAAU,mCAAf,SACI,qBAAKA,UAAU,qBAAqB8F,IAAK+C,EAAI8D,UAAW5G,IAAI,UAEhE,sBAAK/F,UAAW4O,GAAuB7B,eAAvC,UACI,sBAAK/M,UAAU,iCAAf,UACI,sBAAKA,UAAW4O,GAAuBO,oBAAvC,UACI,eAAC,IAAD,CAASnP,UAAW4O,GAAuB5B,eAAgBzI,GAAE,gBAAWsE,EAAIR,IAAOhE,IAAKC,IAAxF,UAA+FuE,EAAI1F,KAAnG,QAA8G0F,EAAIR,GAAlH,OACCQ,EAAIwB,QAAU,qBAAKrK,UAAU,gCAAf,6BAEnB,qBAAKA,UAAW4O,GAAuBQ,mBAAvC,SAA4DvG,EAAI+D,iBAEpE,sBAAK5M,UAAU,qCAAf,UACI,wBAAQA,UAAW4O,GAAuBC,mBAAoB5C,UAAWgF,EAAY5L,QAAS,kBAAM6L,EAAiBrI,EAAKyG,IAA1H,uBACA,wBAAQtP,UAAW4O,GAAuBI,qBAAsB3J,QAAS,kBAAM+L,EAAkBvI,EAAIR,GAAIP,EAAUH,IAAnH,wBACA,cAAC4I,GAAD,CAAcC,WAAY3H,EAAKyG,mBAAoBA,IACnD,qBAAKtP,UAAU,kCAAf,SACI,cAAC,IAAD,CAAMA,UAAW4O,GAAuB/C,cAAetH,GAAE,gBAAWsE,EAAIR,IAAMhE,IAAKC,IAAnF,2CCtDT,SAAS+M,GAAT,GAA+C,IAArB9F,EAAoB,EAApBA,UAAW9M,EAAS,EAATA,QAC1CyB,EAAUgC,mBAAQ,WACpB,OAAO/B,IAAW,eAAgB,CAAC,uBAAyBoL,MAC7D,CAACA,IAEJ,OAAG9M,EAEK,mBAAGuB,UAAWE,EAAd,SAAwBzB,IAIrB,GCCA,SAAS6S,GAAT,GAA4B,IAAP3J,EAAM,EAANA,KAC1BG,EAAW+B,cACXY,EAAWD,aAAY,SAAAhO,GAAK,OAAIA,EAAMiO,YACtC6B,EAAU9B,aAAY,SAAAhO,GAAK,OAAIA,EAAM+P,IAAIC,cAHT,EAIDhD,mBAAS,CAC1C/K,QAAS,GACT8M,WAAW,IANuB,oBAI/BgG,EAJ+B,KAIdC,EAJc,OAQUhI,mBAAS,CACrD6E,QAAS,CAAC,CAAClL,KAAM,iBAAkBkF,GZxBpB,GYwBmC,CAAClF,KAAM,mBAAoBkF,GZvB5D,IYwBjBwF,eAAiB,KAViB,oBAQ/BG,EAR+B,KAQbC,EARa,KAYhCF,EAAapE,kBAAO,GACpB+E,EAAqBvO,IAAW,OAAQ,kCAAmC,oBAEjF4J,qBAAU,WACN,IAAM8D,EAAiBD,GAAkBnD,EAAS7C,SAAU6C,EAAS5C,YACrEoG,EAAoB,6BAAID,GAAL,IAAuBH,sBAC3C,CAAC/F,IAEJiC,qBAAU,WACNjC,EAASJ,GAAUC,EAAM8C,EAAS7C,SAAU6C,EAAS5C,eACvD,CAACC,EAAUH,IAtByB,MAwBC6B,mBAAS,MAxBV,oBAwB/BV,EAxB+B,KAwBhBgC,EAxBgB,KA0BtCf,qBAAU,WACN,IAAMkH,GAAa,IAAIlI,MAClBC,QAAQxD,IACRyD,QAELgI,EAAW3H,QAAQsH,MAAK,WACpB9F,EAAcmG,QAEnB,IAEH,IAAMtC,EAAcP,GAAeJ,EAAkBD,EAAYpG,EAAMG,EAAUmG,GAEjF,OAAG3B,EACQ,cAACrM,EAAD,IAEPwK,EAASC,KAGVqD,EAAW/D,SACV+D,EAAW/D,SAAU,EACd,cAAC,IAAD,CAAUzF,GAAI,WAErBkG,EAASC,KAAKrM,OAWd,sBAAK2B,UAAW0O,EAAhB,UACKC,EACD,cAAC0C,GAAD,CAAiB9F,UAAWgG,EAAgBhG,UAAW9M,QAAS8S,EAAgB9S,UAC/EgM,EAASC,KAAK1M,KAAI,SAAA6K,GAAG,OAAI,cAACmI,GAAD,CAAiBnI,IAAKA,EAAkBoI,WAAYnI,EAAewG,mBAAoBkC,EAAW7J,KAAMA,GAAxEkB,EAAIR,OAC9D,qBAAKrI,UAAU,mBAAf,SACI,cAACiN,GAAD,CAAYC,UAAWzC,EAAS4C,kBAf5B,IAAT1F,EACQ,cAAC,IAAD,CAAUpD,GAAE,gBAAWoD,EAAO,KAGrC,sBAAK3H,UAAW0O,EAAhB,UACKC,EACD,qBAAK3O,UAAU,4BAAf,mFAbD,cAACgC,EAAD,CAAmBvD,QAAS,UCjD5B,SAASgT,GAASrR,GAAO,IAIhCuH,EAJ+B,EACL6B,mBAAS,MADJ,oBAC9BkI,EAD8B,KACvBC,EADuB,KAE7BtJ,EAAKjI,EAAMwR,MAAMC,OAAOxJ,GACxByJ,EAAa1R,EAAMM,SAASC,OAAOiR,MAAM,eAE5CE,GAAcA,EAAW,KACxBnK,GAAQmK,EAAW,IAGvB,IAAMC,EAAmBhH,sBAAW,uCAAC,WAAM4G,GAAN,eAAAjS,EAAA,sEACX/D,EAAYqJ,QAAQtJ,GADT,OAC3BgJ,EAD2B,OAEjCiN,EAAejN,GAFkB,2CAAD,sDAGjC,IAWH,GATAqF,qBAAU,WACN,IAAMiI,EAAcrW,EAAY4H,WAAU,kBAAMwO,EAAiBJ,MAGjE,OAFAI,EAAiBJ,GAEV,WACHhW,EAAY8H,YAAYuO,MAE7B,CAACD,IAED1J,EACC,OAAO,cAACgE,GAAD,CAAKhE,GAAIA,IAEpB,GAAa,OAAVqJ,EACC,OAAO,cAACzR,EAAD,IAEX,GAAIyR,EAQA,CACA,GAAG/J,IAASsK,MAAMtK,GACd,OAAO,cAAC2J,GAAD,CAAY3J,KAAMA,IAExB,IAAIA,EACL,OAAO,cAAC2J,GAAD,CAAY3J,KAAM,QAbvB,CACN,GAAGA,IAASsK,MAAMtK,GACd,OAAO,cAAC8G,GAAD,CAAM9G,KAAMA,IAElB,IAAIU,IAAOV,EACZ,OAAO,cAAC8G,GAAD,CAAM9G,KAAM,KCxChB,SAASuK,GAAT,GAA8B,IAATC,EAAQ,EAARA,OAChC,OAAGA,GAAUA,EAAO9T,OAAS,EAClB8T,EAAOnU,KAAI,SAAClB,EAAOuL,GAAR,OAAe,mBAAGrI,UAAU,mBAAb,SAA0ClD,GAALuL,MAG/D,G,aCHA,SAAS+J,GAAT,GAAgF,IAAtDC,EAAqD,EAArDA,UAAWrK,EAA0C,EAA1CA,KAAMsK,EAAoC,EAApCA,kBAAmB9V,EAAiB,EAAjBA,MAAOqE,EAAU,EAAVA,SAC1EX,EAAUgC,mBAAQ,WACpB,MAAO,CACHqQ,YAAcpS,IAAW,gBAAiB,aAC1C8O,aAAe9O,IAAW,mBAAoB,mBAAoB,CAAC,0BAAoD,IAAxB3D,EAAM2V,OAAO9T,YAEjH,CAAC7B,IAEEgW,EAAmBzH,uBAAY,SAAC0H,GAClC,IAD4C,EACtCN,EAAS,GAD6B,eAG5BG,KAH4B,IAG5C,IAAI,EAAJ,qBAAoC,CAAC,IAC3BpR,GAASwR,EADiB,SACZD,EAAME,OAAOC,OAC9B1R,GACCiR,EAAOvU,KAAKsD,IANwB,8BAU5CL,EAAS,CACL+R,MAAQH,EAAME,OAAOC,MACrBT,OAAQA,MAEb,CAACG,EAAmBzR,IAEvB,OACI,sBAAKb,UAAWE,EAAQqS,YAAxB,UACI,uBAAOvS,UAAU,mBAAjB,SAAqCqS,IACrC,cAACH,GAAD,CAAYC,OAAQ3V,EAAM2V,SAC1B,uBAAOnS,UAAWE,EAAQ+O,aACnB2D,MAAOpW,EAAMoW,MACbC,SAAU,SAACJ,GAAD,OAAW5R,EAAS,CAAC+R,MAAOH,EAAME,OAAOC,MAAOT,OAAQ,MAClEW,OAAQN,EACRxK,KAAMA,EACN+K,UAAU,OCnCtB,IAAMC,GAA+B,WACxC,IACMC,EAAY,GAOlB,OANAA,EAAUrV,MAAK,SAACgV,GACZ,GAAGA,EAAMvU,QAHgB,GAIrB,MAAM,4CAAN,OAJqB,OAQtB4U,GAGEC,GAAwB,WACjC,IAAMD,EAAY,GAQlB,OANAA,EAAUrV,MAAK,SAACgV,GACZ,IAAIA,EACA,MAAO,0BAIRK,GAGEE,GAA4B,WACrC,IAAMF,EAAY,GAOlB,OANAA,EAAUrV,MAAK,SAACgV,GACZ,GAAGX,OAAOW,IAAUA,EAAQ,EACxB,MAAO,oBAIRK,GAGEG,GAA4B,WACrC,IAAMH,EAAY,GAiBlB,OAhBAA,EAAUrV,MAAK,SAACgV,GACZ,GAAGX,OAAOW,GACN,MAAO,uBAGfK,EAAUrV,MAAK,SAACgV,GACZ,IAAIA,EAAQ,GACR,MAAO,2BAGfK,EAAUrV,MAAK,SAACgV,GACZ,IAAIA,E9BhCkB,M8BiClB,MAAO,0BAIRK,GCrDI,SAAeI,GAA9B,uC,8CAAe,WAAyBpI,EAAOqI,EAAUC,GAA1C,SAAA7T,EAAA,sEACYX,MAAMwG,GAAkB,CAC3CgK,OAAQ,OACRC,QAAUvE,EAAa,CACnB,OAAU,MACV,cAAgB,UAAhB,OAA2BA,IAFb,GAIlBiF,KAAMoD,IAPC,cASCtU,GACRuU,EAAgB,CACZhI,WAAW,EACX9M,QAAS,gCAGb8U,EAAgB,CACZhI,WAAW,EACX9M,QAAS,oDAjBN,4C,sBCAR,IAAMyB,GAAU,CACnBsT,YAAcrT,IAAW,OAAQ,YAAa,mBAAoB,WAClEwE,aAAexE,IAAW,QAAS,iBACnC0L,cAAgB1L,IAAW,SAAU,qBACrCwQ,qBAAuBxQ,IAAW,gBAAiB,YAAa,+BCJ7D,IAAMsT,GAAsB,SAAChB,EAAOiB,EAASC,ICFrC,SAAwBC,EAAMjW,GACzC,IAAIkW,EAAS,IAAIC,WACjBD,EAAOE,cAAcH,GACrBC,EAAOG,OAAS,SAAUrE,GACtB,IAAIsE,EAAQ,IAAIC,MAChBD,EAAMnO,IAAM6J,EAAEgD,OAAOzR,OACrB+S,EAAMD,OAAS,WACXrW,EAAS1B,KAAKkY,QAAUlY,KAAKmY,SDJrCC,CAAe5B,EAAME,OAAO2B,MAAM,IAAI,SAACpT,GAChCA,GACCwS,EAAQjB,EAAME,OAAO2B,MAAM,IAC3BX,EAAc,KAGdA,EAAc,CAAC,+BETdY,GAA0B,SAACC,GAAY,IAAD,iBAC9BA,GAD8B,IAC/C,IAAI,EAAJ,qBAAwB,CAAC,IAAjBC,EAAgB,QACpB,GAAIA,EAAMpW,QAAWoW,EAAMtC,QAAUsC,EAAMtC,OAAO9T,OAC9C,OAAO,GAHgC,8BAM/C,OAAO,GCUI,SAASqW,KAAS,IAAD,EACJlL,mBAAS,CAC7BrG,KAAM,KAFkB,oBACrByQ,EADqB,KACfF,EADe,OAIYlK,mBAAS,CAC7C/K,QAAS,GACT8M,WAAW,IANa,oBAIrBoJ,EAJqB,KAIPpB,EAJO,OAQE/J,mBAAS,CACnCoJ,MAAO,GACPT,OAAQ,KAVgB,oBAQrByC,EARqB,KAQZC,EARY,OAYarL,mBAAS,CAC9CoJ,MAAO,GACPT,OAAQ,KAdgB,oBAYrB2C,EAZqB,KAYLC,EAZK,OAgBOvL,mBAAS,CACxCoJ,MAAO,EACPT,OAAQ,KAlBgB,oBAgBrB6C,EAhBqB,KAgBRC,EAhBQ,OAoBOzL,mBAAS,CACxCoJ,MAAO,EACPT,OAAQ,KAtBgB,oBAoBrB+C,EApBqB,KAoBRC,EApBQ,OAwBQ3L,mBAAS,IAxBjB,oBAwBrB4L,EAxBqB,KAwBTzB,EAxBS,KA0BtB0B,EAAqBtK,sBAAW,uCAAC,WAAO6J,EAASE,EAAgBE,EAAaE,GAA7C,iBAAAxV,EAAA,sEACf/D,EAAYqP,iBADG,cAC7BC,EAD6B,OAE7BqI,EAAW,IAAIgC,SAElB1B,EAAKzQ,MACJmQ,EAASiC,OAAO,QAAS3B,EAAMA,EAAKzQ,MAExCmQ,EAASiC,OAAO,OAAQX,GACxBtB,EAASiC,OAAO,cAAeT,GAC/BxB,EAASiC,OAAO,WAAYP,GAC5B1B,EAASiC,OAAO,WAAYL,GAVO,mBAazB7B,GAAUpI,EAAOqI,EAAUC,GAbF,0DAgB/BA,EAAgB,CACZhI,WAAW,EACX9M,QAAS,8CAlBkB,yBAsB/BoW,EAAW,CAACjC,MAAQ,GAAIT,OAAQ,KAChC4C,EAAe,CAACnC,MAAQ,GAAIT,OAAQ,KACpC8C,EAAY,CAACrC,MAAQ,EAAGT,OAAQ,KAChCgD,EAAY,CAACvC,MAAQ,EAAGT,OAAQ,KAzBD,6EAAD,4DA2BnC,CAACyB,IAOJ,OACI,sBAAK5T,UAAWE,GAAQsT,YAAxB,UACI,oBAAIxT,UAAWE,GAAQyE,aAAvB,8BACA,cAAC0M,GAAD,CAAiB9F,UAAWoJ,EAAapJ,UAAW9M,QAASkW,EAAalW,UAC1E,uBAAMuB,UAAU,gBAAgBwV,SATd,SAAC/C,GACvBA,EAAMgD,iBACNJ,EAAmBT,EAAQhC,MAAOkC,EAAelC,MAAOoC,EAAYpC,MAAOsC,EAAYtC,QAOnF,UACI,cAACR,GAAD,CAAiBC,UAAW,QAASrK,KAAM,OAAQsK,kBAAmBY,GAAuB1W,MAAOoY,EAAS/T,SAAUgU,IACvH,cAACzC,GAAD,CAAiBC,UAAW,eAAgBrK,KAAM,OAAQsK,kBAAmBU,GAA8BxW,MAAOsY,EAAgBjU,SAAUkU,IAC5I,cAAC3C,GAAD,CAAiBC,UAAW,qBAAsBrK,KAAM,SAAUsK,kBAAmBa,GAA2B3W,MAAOwY,EAAanU,SAAUoU,IAC9I,cAAC7C,GAAD,CAAiBC,UAAW,iBAAkBrK,KAAM,SAAUsK,kBAAmBc,GAA2B5W,MAAO0Y,EAAarU,SAAUsU,IAC1I,sBAAKnV,UAAWE,GAAQyQ,qBAAxB,UACI,qBAAK3Q,UAAW,2BAAhB,SACI,cAACkS,GAAD,CAAYC,OAAQiD,MAExB,uBAAOpV,UAAWE,GAAQ2L,cAAe6J,QAAQ,oBAAjD,SAAsE9B,EAAKzQ,MAAQ,mBACnF,uBAAOnD,UAAU,yBAAyBgI,KAAK,OAAO6K,SAAU,SAACJ,GAAD,OAAWgB,GAAoBhB,EAAOiB,EAASC,IAAgBtL,GAAG,yBAEtI,qBAAKrI,UAAWE,GAAQyQ,qBAAxB,SACI,wBAAQ1E,SAAUsI,GAAwB,CAACK,EAASE,EAAgBE,EAAaE,EAAaE,IACtFpN,KAAK,SACLhI,UAAWE,GAAQ2L,cAF3B,4BCtFL,SAAS8J,KAAa,IAAD,EACRnM,mBAAS,MADD,oBAC3BkI,EAD2B,KACpBkE,EADoB,KAG1BC,EAAkB9K,sBAAW,uCAAC,WAAM6K,GAAN,eAAAlW,EAAA,sEACV/D,EAAYqJ,QAAQtJ,GADV,OAC1BgJ,EAD0B,OAEhCkR,EAASlR,GAFuB,2CAAD,sDAGhC,IAWH,OATAqF,qBAAU,WACN,IAAMiI,EAAcrW,EAAY4H,WAAU,kBAAMsS,EAAgBD,MAGhE,OAFAC,EAAgBD,GAET,WACHja,EAAY8H,YAAYuO,MAE7B,CAAC6D,IAEDnE,EAEK,8BACI,cAACgD,GAAD,OAIC,IAAVhD,EACQ,cAAC1P,EAAD,CAAmBvD,QAAS,4CAG5B,cAACwB,EAAD,IC1BA,SAAS6V,KAAU,IAAD,EACCtM,mBAAS,IADV,oBACtBuM,EADsB,KACbC,EADa,KAEvBlO,EAAW+B,cACXyC,EAAU9B,aAAY,SAAAhO,GAAK,OAAIA,EAAM+P,IAAI0J,kBAEzCC,EAAanL,sBAAW,sBAAC,8BAAArL,EAAA,6DAC3BoI,EjC8EG,CACHE,KAAMV,KiChFqB,SAEJvI,MtCfM,esCaF,cAErBvB,EAFqB,gBAGRA,EAASyB,OAHD,OAGrBA,EAHqB,OAI3B6I,EjCiFG,CACHE,KAAMT,KiCjFNyO,EAAW/W,GALgB,2CAM5B,CAAC6I,IAEJiC,qBAAU,WACNmM,MACD,IAEH,IAAMhW,EAAUgC,mBAAQ,WACpB,MAAO,CACHsR,YAAcrT,IAAW,OAAQ,mBAAoB,iBACrDgW,aAAehW,IAAW,YAE/B,IAEH,OAAGmM,EACQ,cAACrM,EAAD,IAEP8V,EAAQ1X,OAKR,qBAAK2B,UAAWE,EAAQsT,YAAxB,SACI,wBAAOxT,UAAWE,EAAQiW,aAA1B,UACI,uBAAOnW,UAAU,gBAAjB,SACI,+BACI,oBAAIA,UAAU,qBAAd,oBACA,oBAAIA,UAAU,qBAAd,sBACA,oBAAIA,UAAU,qBAAd,yBACA,oBAAIA,UAAU,qBAAd,6BAGR,uBAAOA,UAAU,cAAjB,SACC+V,EAAQ/X,KAAI,SAAAoY,GAAW,IAAD,EACnB,OACI,+BACI,oBAAIpW,UAAU,cAAd,SAA6BoW,EAAO/N,KACpC,oBAAIrI,UAAU,cAAd,SAA6BoW,EAAOxB,UACpC,oBAAI5U,UAAU,cAAd,mBAEQ,cAAC,IAAD,CAASA,UAAWE,EAAQ8M,eAAgBzI,GAAE,iBAAY6R,EAAOC,QAAWhS,IAAKC,IAAjF,SACK8R,EAAOE,mBAHpB,QAIsB,MAGtB,qBAAItW,UAAU,cAAd,UAA6BoW,EAAOjM,SAApC,YAVKiM,EAAO/N,cAjBzB,cAACrG,EAAD,CAAmBvD,QAAS,0CC7B5B,SAAS8X,GAASnW,GAC7B,IAAMiW,EAASjW,EAAMwR,MAAMC,OAAOxJ,GADC,EAEXmB,mBAAS,MAFE,oBAE5BrN,EAF4B,KAEtB0O,EAFsB,OAGTrB,mBAAS,MAHA,oBAG5B1M,EAH4B,KAGrB0Z,EAHqB,KAI7B1O,EAAW+B,cACXyC,EAAU9B,aAAY,SAAAhO,GAAK,OAAIA,EAAM+P,IAAIkK,eAEzCC,EAAY3L,sBAAW,uCAAC,WAAOsL,GAAP,iBAAA3W,EAAA,6DAC1BoI,ElCyFG,CACHE,KAAMV,KkC3FoB,SAEHvI,MAAM,GAAD,OvCfF,YuCeE,YAA0BsX,IAF5B,YAEpB7Y,EAFoB,QAGdwB,GAHc,iCAIHxB,EAASyB,OAJN,OAIhBA,EAJgB,OAKtB4L,EAAQ5L,GALc,wBAQtBuX,EAAS,gBARa,QAU1B1O,ElCsFG,CACHE,KAAMT,KkCjGoB,4CAAD,sDAW1B,CAACO,IAEJiC,qBAAU,WACN2M,EAAUL,KACX,CAACA,IAEJ,IAAMnW,EAAUgC,mBAAQ,WACpB,MAAO,CACHsR,YAAcrT,IAAW,OAAQ,mBAAoB,aACrDgW,aAAehW,IAAW,QAAS,uBAExC,IAEH,OAAGmM,EACQ,cAACrM,EAAD,IAEHnD,EACG,cAACkF,EAAD,CAAmBvD,QAAS3B,IAE/BX,EAEA,sBAAK6D,UAAWE,EAAQsT,YAAxB,UACI,sBAAKxT,UAAU,kBAAf,UAAiC,sBAAMA,UAAU,uBAAhB,yBAAjC,IAA4F7D,EAAKwa,aACjG,sBAAK3W,UAAU,kBAAf,UAAiC,sBAAMA,UAAU,uBAAhB,wBAAjC,IAA2F7D,EAAKya,YAChG,sBAAK5W,UAAU,kBAAf,UAAiC,sBAAMA,UAAU,uBAAhB,iBAAjC,IAAoF7D,EAAKkM,MACzF,sBAAKrI,UAAU,kBAAf,UAAiC,sBAAMA,UAAU,uBAAhB,oBAAjC,IAAuF7D,EAAK0a,SAC5F,gCACI,sBAAM7W,UAAU,uBAAhB,wBACA,wBAAOA,UAAWE,EAAQiW,aAA1B,UACI,uBAAOnW,UAAU,gBAAjB,SACA,+BACI,oBAAIA,UAAU,qBAAd,sBACA,oBAAIA,UAAU,qBAAd,6BAGJ,uBAAOA,UAAU,cAAjB,SACC7D,EAAK2a,YAAY9Y,KAAI,SAAA6K,GAClB,OACI,+BACI,oBAAI7I,UAAU,cAAd,SAA6B6I,EAAI+L,UACjC,qBAAI5U,UAAU,cAAd,UAA6B6I,EAAIsB,SAAjC,YAFKtB,EAAIR,kBAalC,K,IC/DU0O,G,uKAIb,IAAMC,EAAmB7W,IAAW,SAAU,gBAC9C,OACI,qBAAKH,UAAWgX,EAAhB,SACI,eAAChR,GAAD,CAAQhG,UAAU,YAAlB,UACI,cAAC,IAAD,CAAOiX,OAAK,EAAClU,KAAK,IAAI4D,UAAW8K,KACjC,cAAC,IAAD,CAAOwF,OAAK,EAAClU,KAAK,aAAa4D,UAAW4P,KAC1C,cAAC,IAAD,CAAOxT,KAAK,aAAa4D,UAAW8K,KACpC,cAAC,IAAD,CAAO1O,KAAK,WAAW4D,UAAWmP,KAClC,cAAC,GAAD,CAAgB/S,KAAK,WAAW4D,UAAWgP,KAC3C,cAAC,IAAD,CAAO5S,KAAMnI,EAAiBG,uBAAwB4L,UAAW7D,a,GAbpDf,aAAZgV,GACVzR,YAAcyR,GAAI5T,KCb7B,IAAM+T,GAAe,CACjBxM,KAAO,GACPxC,WAAa,EACbmF,WAAa,EACbzF,UAAW,EACXC,YAAa,GCAXqP,GAAe,CACjB1K,YAAY,EACZyJ,gBAAgB,EAChBQ,aAAc,GCNLU,GAAcC,YAAgB,CACvC3M,SFKuB,WAAmC,IAAlCjO,EAAiC,uDAAzB0a,GAAc7W,EAAW,uCACzD,OAAQA,EAAO2H,MACX,KAAKnB,GACD,OAAO,6BACArK,GADP,IAEIkO,KAAMrK,EAAO4H,QAAQyC,KACrB2C,WAAYhN,EAAO4H,QAAQ4I,WAC3B3I,WAAY7H,EAAO4H,QAAQC,WAC3BN,SAAUvH,EAAO4H,QAAQL,SACzBC,WAAYxH,EAAO4H,QAAQJ,aAEnC,KAAKf,GACD,OAAO,6BAAItK,GAAX,IAAkBkO,KAAOlO,EAAMkO,KAAK2M,OAAOhX,EAAO4H,WACtD,KAAKlB,GACD,OAAO,6BAAIvK,GAAX,IAAkBkO,KAAOlO,EAAMkO,KAAK1M,KAAI,SAAA6K,GACpC,OAAGA,EAAIR,KAAOhI,EAAO4H,QAAQI,GAClBhI,EAAO4H,QAEXY,OAEf,KAAK7B,GACD,OAAO,6BAAIxK,GAAX,IAAkBkO,KAAMlO,EAAMkO,KAAK1M,KAAI,SAAA6K,GACnC,OAAGA,EAAIR,KAAOhI,EAAO4H,QAAQI,GAClB,6BAAIQ,GAAX,IAAgBsB,SAAU9J,EAAO4H,QAAQK,QAEtCO,OAEf,KAAK5B,GACD,OAAO,6BAAIzK,GAAX,IAAkBkO,KAAMlO,EAAMkO,KAAK1M,KAAI,SAAA6K,GAC/B,OAAGA,EAAIR,KAAOhI,EAAO4H,QAAQI,GAClB,6BAAIQ,GAAX,IAAgBQ,SAAUhJ,EAAO4H,QAAQoB,WAEtCR,OAEnB,KAAK3B,GACD,OAAO,6BAAI1K,GAAX,IAAkBkO,KAAMlO,EAAMkO,KAAK1M,KAAI,SAAA6K,GAC/B,OAAGA,EAAIR,KAAOhI,EAAO4H,QAAQI,GAClB,6BAAIQ,GAAX,IAAgBQ,UAAU,EAAOgB,QAAQ,IAEtCxB,OAEnB,KAAK1B,GACD,OAAO,6BAAI3K,GAAX,IAAkBkO,KAAMlO,EAAMkO,KAAKtM,QAAO,SAAAyK,GAAG,OAAIA,EAAIR,KAAOhI,EAAO4H,QAAQI,QAC/E,QACI,OAAO7L,IEhDf+P,IDOsB,WAAmC,IAAlC/P,EAAiC,uDAAzB0a,GAAc7W,EAAW,uCACxD,OAAQA,EAAO2H,MACX,KAAKZ,GACD,OAAO,6BAAI5K,GAAX,IAAkBgQ,YAAY,IAClC,KAAKnF,GACD,OAAO,6BAAI7K,GAAX,IAAkBgQ,YAAY,IAClC,KAAKlF,GACD,OAAO,6BAAI9K,GAAX,IAAkByZ,gBAAgB,IACtC,KAAK1O,GACD,OAAO,6BAAI/K,GAAX,IAAkByZ,gBAAgB,IACtC,KAAKzO,GACD,OAAO,6BAAIhL,GAAX,IAAkBia,aAAa,IACnC,KAAKhP,GACD,OAAO,6BAAIjL,GAAX,IAAkBia,aAAa,IACnC,QACI,OAAOja,MEjBb8a,GAAUhR,SAASiR,qBAAqB,QAAQ,GAAGC,aAAa,QAChEC,GAAcnR,SAASoR,eAAe,QACtCC,GAAQC,YAAYT,GAAaU,YACnCC,YACIC,OAKRC,IAAShV,OACL,cAAC,IAAD,CAAU2U,MAAOA,GAAjB,SACI,cAAC,IAAD,CAAeM,SAAUX,GAAzB,SACI,cAAC,GAAD,QAGVG,M","file":"static/js/main.7edd391c.chunk.js","sourcesContent":["export const ApplicationName = 'OnlineAuction';\r\n\r\nexport const QueryParameterNames = {\r\n  ReturnUrl: 'returnUrl',\r\n  Message: 'message'\r\n};\r\n\r\nexport const LogoutActions = {\r\n  LogoutCallback: 'logout-callback',\r\n  Logout: 'logout',\r\n  LoggedOut: 'logged-out'\r\n};\r\n\r\nexport const LoginActions = {\r\n  Login: 'login',\r\n  LoginCallback: 'login-callback',\r\n  LoginFailed: 'login-failed',\r\n  Profile: 'profile',\r\n  Register: 'register'\r\n};\r\n\r\nconst prefix = '/authentication';\r\n\r\nexport const ApplicationPaths = {\r\n  DefaultLoginRedirectPath: '/',\r\n  ApiAuthorizationClientConfigurationUrl: `/_configuration/${ApplicationName}`,\r\n  ApiAuthorizationPrefix: prefix,\r\n  Login: `${prefix}/${LoginActions.Login}`,\r\n  LoginFailed: `${prefix}/${LoginActions.LoginFailed}`,\r\n  LoginCallback: `${prefix}/${LoginActions.LoginCallback}`,\r\n  Register: `${prefix}/${LoginActions.Register}`,\r\n  Profile: `${prefix}/${LoginActions.Profile}`,\r\n  LogOut: `${prefix}/${LogoutActions.Logout}`,\r\n  LoggedOut: `${prefix}/${LogoutActions.LoggedOut}`,\r\n  LogOutCallback: `${prefix}/${LogoutActions.LogoutCallback}`,\r\n  IdentityRegisterPath: '/Identity/Account/Register',\r\n  IdentityManagePath: '/Identity/Account/Manage'\r\n};\r\n\r\nexport const UserRoles = {\r\n  Administrator: 'admin',\r\n  User: 'user'\r\n};\r\n","import { UserManager, WebStorageStateStore } from 'oidc-client';\r\nimport {ApplicationPaths, ApplicationName} from './ApiAuthorizationConstants';\r\n\r\nexport class AuthorizeService {\r\n    _callbacks = [];\r\n    _nextSubscriptionId = 0;\r\n    _user = null;\r\n    _isAuthenticated = false;\r\n\r\n    // By default pop ups are disabled because they don't work properly on Edge.\r\n    // If you want to enable pop up authentication simply set this flag to false.\r\n    _popUpDisabled = true;\r\n\r\n    async isAuthenticated() {\r\n        const user = await this.getUser();\r\n        return !!user;\r\n    }\r\n\r\n    async getUser() {\r\n        if (this._user && this._user.profile) {\r\n            return this._user.profile;\r\n        }\r\n\r\n        await this.ensureUserManagerInitialized();\r\n        const user = await this.userManager.getUser();\r\n        return user && user.profile;\r\n    }\r\n\r\n    async getAccessToken() {\r\n        await this.ensureUserManagerInitialized();\r\n        const user = await this.userManager.getUser();\r\n        return user && user.access_token;\r\n    }\r\n\r\n    async signIn(state) {\r\n        await this.ensureUserManagerInitialized();\r\n        try {\r\n            await this.userManager.signinRedirect(this.createArguments(state));\r\n            return this.redirect();\r\n        } catch (redirectError) {\r\n            console.log(\"Redirect authentication error: \", redirectError);\r\n            return this.error(redirectError);\r\n        }\r\n    }\r\n\r\n    async completeSignIn(url) {\r\n        try {\r\n            await this.ensureUserManagerInitialized();\r\n            const user = await this.userManager.signinCallback(url);\r\n            this.updateState(user);\r\n            return this.success(user && user.state);\r\n        } catch (error) {\r\n            console.log('There was an error signing in: ', error);\r\n            return this.error('There was an error signing in.');\r\n        }\r\n    }\r\n\r\n    // We try to sign out the user in two different ways:\r\n    // 1) We try to do a sign-out using a PopUp Window. This might fail if there is a\r\n    //    Pop-Up blocker or the user has disabled PopUps.\r\n    // 2) If the method above fails, we redirect the browser to the IdP to perform a traditional\r\n    //    post logout redirect flow.\r\n    async signOut(state) {\r\n        await this.ensureUserManagerInitialized();\r\n        try {\r\n            if (this._popUpDisabled) {\r\n                throw new Error('Popup disabled. Change \\'AuthorizeService.js:AuthorizeService._popupDisabled\\' to false to enable it.')\r\n            }\r\n\r\n            await this.userManager.signoutPopup(this.createArguments());\r\n            this.updateState(undefined);\r\n            return this.success(state);\r\n        } catch (popupSignOutError) {\r\n            console.log(\"Popup signout error: \", popupSignOutError);\r\n            try {\r\n                await this.userManager.signoutRedirect(this.createArguments(state));\r\n                return this.redirect();\r\n            } catch (redirectSignOutError) {\r\n                console.log(\"Redirect signout error: \", redirectSignOutError);\r\n                return this.error(redirectSignOutError);\r\n            }\r\n        }\r\n    }\r\n\r\n    async completeSignOut(url) {\r\n        await this.ensureUserManagerInitialized();\r\n        try {\r\n            const response = await this.userManager.signoutCallback(url);\r\n            this.updateState(null);\r\n            return this.success(response && response.data);\r\n        } catch (error) {\r\n            console.log(`There was an error trying to log out '${error}'.`);\r\n            return this.error(error);\r\n        }\r\n    }\r\n\r\n    updateState(user) {\r\n        this._user = user;\r\n        this._isAuthenticated = !!this._user;\r\n        this.notifySubscribers();\r\n    }\r\n\r\n    subscribe(callback) {\r\n        this._callbacks.push({ callback, subscription: this._nextSubscriptionId++ });\r\n        return this._nextSubscriptionId - 1;\r\n    }\r\n\r\n    unsubscribe(subscriptionId) {\r\n        const subscriptionIndex = this._callbacks\r\n            .map((element, index) => element.subscription === subscriptionId ? { found: true, index } : { found: false })\r\n            .filter(element => element.found === true);\r\n        if (subscriptionIndex.length !== 1) {\r\n            throw new Error(`Found an invalid number of subscriptions ${subscriptionIndex.length}`);\r\n        }\r\n\r\n        this._callbacks.splice(subscriptionIndex[0].index, 1);\r\n    }\r\n\r\n    notifySubscribers() {\r\n        for (let i = 0; i < this._callbacks.length; i++) {\r\n            const callback = this._callbacks[i].callback;\r\n            callback();\r\n        }\r\n    }\r\n\r\n    createArguments(state) {\r\n        return { useReplaceToNavigate: true, data: state };\r\n    }\r\n\r\n    error(message) {\r\n        return { status: AuthenticationResultStatus.Fail, message };\r\n    }\r\n\r\n    success(state) {\r\n        return { status: AuthenticationResultStatus.Success, state };\r\n    }\r\n\r\n    redirect() {\r\n        return { status: AuthenticationResultStatus.Redirect };\r\n    }\r\n\r\n    async ensureUserManagerInitialized() {\r\n        if (this.userManager !== undefined) {\r\n            return;\r\n        }\r\n\r\n        let response = await fetch(ApplicationPaths.ApiAuthorizationClientConfigurationUrl);\r\n        if (!response.ok) {\r\n            throw new Error(`Could not load settings for '${ApplicationName}'`);\r\n        }\r\n\r\n        let settings = await response.json();\r\n        settings.automaticSilentRenew = true;\r\n        settings.includeIdTokenInSilentRenew = true;\r\n        settings.userStore = new WebStorageStateStore({\r\n            prefix: ApplicationName\r\n        });\r\n\r\n        this.userManager = new UserManager(settings);\r\n\r\n        this.userManager.events.addUserSignedOut(async () => {\r\n            await this.userManager.removeUser();\r\n            this.updateState(undefined);\r\n        });\r\n    }\r\n\r\n    async hasRole(role) {\r\n        const user = await this.getUser();\r\n\r\n        if (user) {\r\n            if (user.role instanceof Array) // if it has many roles role is an array\r\n                return user.role.includes(role); // beware that UserRoles apears as undefined when debugging, though it works fine\r\n            else // otherwise it is a string\r\n                return user.role === role;\r\n        }\r\n        else\r\n            return false;\r\n    }\r\n\r\n    static get instance() { return authService }\r\n}\r\n\r\nconst authService = new AuthorizeService();\r\n\r\nexport default authService;\r\n\r\nexport const AuthenticationResultStatus = {\r\n    Redirect: 'redirect',\r\n    Success: 'success',\r\n    Fail: 'fail'\r\n};\r\n","import React from 'react'\r\n\r\nexport default function Loader(){\r\n    return (<div className=\"loader\"/>)\r\n}","import React from 'react'\r\nimport Loader from \"../Loader/Loader\";\r\nimport classNames from \"classnames\";\r\n\r\nexport default function LoadingPage(){\r\n    const classes = classNames(\"main\", \"main__loading-page\", \"loading-page\", \"container-border\");\r\n    return(\r\n        <div className={classes}>\r\n            <Loader/>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { Component } from 'react';\r\nimport authService from './AuthorizeService';\r\nimport { AuthenticationResultStatus } from './AuthorizeService';\r\nimport { LoginActions, QueryParameterNames, ApplicationPaths } from './ApiAuthorizationConstants';\r\nimport LoadingPage from \"../LoadingPage/LoadingPage\";\r\n\r\n// The main responsibility of this component is to handle the user's login process.\r\n// This is the starting point for the login process. Any component that needs to authenticate\r\n// a user can simply perform a redirect to this component with a returnUrl query parameter and\r\n// let the component perform the login and return back to the return url.\r\nexport class Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            message: undefined\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const action = this.props.action;\r\n        switch (action) {\r\n            case LoginActions.Login:\r\n                // this.login(this.getReturnUrl());\r\n                this.login(\"/\");\r\n                break;\r\n            case LoginActions.LoginCallback:\r\n                this.processLoginCallback();\r\n                break;\r\n            case LoginActions.LoginFailed:\r\n                const params = new URLSearchParams(window.location.search);\r\n                const error = params.get(QueryParameterNames.Message);\r\n                this.setState({ message: error });\r\n                break;\r\n            case LoginActions.Profile:\r\n                this.redirectToProfile();\r\n                break;\r\n            case LoginActions.Register:\r\n                this.redirectToRegister();\r\n                break;\r\n            default:\r\n                throw new Error(`Invalid action '${action}'`);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const action = this.props.action;\r\n        const { message } = this.state;\r\n\r\n        if (!!message) {\r\n            return <div>{message}</div>\r\n        } else {\r\n            switch (action) {\r\n                case LoginActions.Login:\r\n                    return (<LoadingPage/>);\r\n                case LoginActions.LoginCallback:\r\n                    return (<LoadingPage/>);\r\n                case LoginActions.Profile:\r\n                case LoginActions.Register:\r\n                    return (<LoadingPage/>);\r\n                default:\r\n                    throw new Error(`Invalid action '${action}'`);\r\n            }\r\n        }\r\n    }\r\n\r\n    async login(returnUrl) {\r\n        const state = { returnUrl };\r\n        const result = await authService.signIn(state);\r\n        switch (result.status) {\r\n            case AuthenticationResultStatus.Redirect:\r\n                break;\r\n            case AuthenticationResultStatus.Success:\r\n                await this.navigateToReturnUrl(returnUrl);\r\n                break;\r\n            case AuthenticationResultStatus.Fail:\r\n                this.setState({ message: result.message });\r\n                break;\r\n            default:\r\n                throw new Error(`Invalid status result ${result.status}.`);\r\n        }\r\n    }\r\n\r\n    async processLoginCallback() {\r\n        const url = window.location.href;\r\n        const result = await authService.completeSignIn(url);\r\n        switch (result.status) {\r\n            case AuthenticationResultStatus.Redirect:\r\n                // There should not be any redirects as the only time completeSignIn finishes\r\n                // is when we are doing a redirect sign in flow.\r\n                throw new Error('Should not redirect.');\r\n            case AuthenticationResultStatus.Success:\r\n                await this.navigateToReturnUrl(this.getReturnUrl(result.state));\r\n                break;\r\n            case AuthenticationResultStatus.Fail:\r\n                this.setState({ message: result.message });\r\n                break;\r\n            default:\r\n                throw new Error(`Invalid authentication result status '${result.status}'.`);\r\n        }\r\n    }\r\n\r\n    getReturnUrl(state) {\r\n        const params = new URLSearchParams(window.location.search);\r\n        const fromQuery = params.get(QueryParameterNames.ReturnUrl);\r\n        if (fromQuery && !fromQuery.startsWith(`${window.location.origin}/`)) {\r\n            // This is an extra check to prevent open redirects.\r\n            throw new Error(\"Invalid return url. The return url needs to have the same origin as the current page.\")\r\n        }\r\n        return (state && state.returnUrl) || fromQuery || `${window.location.origin}/`;\r\n    }\r\n\r\n    redirectToRegister() {\r\n        this.redirectToApiAuthorizationPath(`${ApplicationPaths.IdentityRegisterPath}?${QueryParameterNames.ReturnUrl}=${encodeURI(ApplicationPaths.Login)}`);\r\n    }\r\n\r\n    redirectToProfile() {\r\n        this.redirectToApiAuthorizationPath(ApplicationPaths.IdentityManagePath);\r\n    }\r\n\r\n    redirectToApiAuthorizationPath(apiAuthorizationPath) {\r\n        const redirectUrl = `${window.location.origin}${apiAuthorizationPath}`;\r\n        // It's important that we do a replace here so that when the user hits the back arrow on the\r\n        // browser he gets sent back to where it was on the app instead of to an endpoint on this\r\n        // component.\r\n        window.location.replace(redirectUrl);\r\n    }\r\n\r\n    navigateToReturnUrl(returnUrl) {\r\n        // It's important that we do a replace here so that we remove the callback uri with the\r\n        // fragment containing the tokens from the browser history.\r\n        window.location.replace(returnUrl);\r\n    }\r\n}\r\n","import React, {useMemo} from \"react\"\r\nimport classNames from \"classnames\"\r\n\r\nexport default function CustomMessagePage({message}){\r\n    const pageClasses = useMemo(() => {\r\n        return classNames(\"main\", \"main__custom-message-page\",\"container-border\");\r\n    }, [])\r\n\r\n    return(\r\n        <div className={pageClasses}>\r\n            {message}\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { Component } from 'react';\r\nimport authService from './AuthorizeService';\r\nimport { AuthenticationResultStatus } from './AuthorizeService';\r\nimport { QueryParameterNames, LogoutActions, ApplicationPaths } from './ApiAuthorizationConstants';\r\nimport LoadingPage from \"../LoadingPage/LoadingPage\";\r\nimport CustomMessagePage from \"../CustomMessagePage/CustomMessagePage\";\r\n\r\n// The main responsibility of this component is to handle the user's logout process.\r\n// This is the starting point for the logout process, which is usually initiated when a\r\n// user clicks on the logout button on the LoginMenu component.\r\nexport class Logout extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            message: undefined,\r\n            isReady: false,\r\n            authenticated: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const action = this.props.action;\r\n        switch (action) {\r\n            case LogoutActions.Logout:\r\n                if (!!window.history.state.state.local) {\r\n                    this.logout(this.getReturnUrl());\r\n                } else {\r\n                    // This prevents regular links to <app>/authentication/logout from triggering a logout\r\n                    this.setState({ isReady: true, message: \"The logout was not initiated from within the page.\" });\r\n                }\r\n                break;\r\n            case LogoutActions.LogoutCallback:\r\n                this.processLogoutCallback();\r\n                break;\r\n            case LogoutActions.LoggedOut:\r\n                this.setState({ isReady: true, message: \"You successfully logged out!\" });\r\n                break;\r\n            default:\r\n                throw new Error(`Invalid action '${action}'`);\r\n        }\r\n\r\n        this.populateAuthenticationState();\r\n    }\r\n\r\n    render() {\r\n        const { isReady, message } = this.state;\r\n        if (!isReady) {\r\n            return <div></div>\r\n        }\r\n        if (!!message) {\r\n            return (<CustomMessagePage message={message}/>)\r\n        } else {\r\n            const action = this.props.action;\r\n            switch (action) {\r\n                case LogoutActions.Logout:\r\n                    return (<LoadingPage/>);\r\n                case LogoutActions.LogoutCallback:\r\n                    return (<LoadingPage/>);\r\n                case LogoutActions.LoggedOut:\r\n                    return (<div>{message}</div>);\r\n                default:\r\n                    throw new Error(`Invalid action '${action}'`);\r\n            }\r\n        }\r\n    }\r\n\r\n    async logout(returnUrl) {\r\n        const state = { returnUrl };\r\n        const isauthenticated = await authService.isAuthenticated();\r\n        if (isauthenticated) {\r\n            const result = await authService.signOut(state);\r\n            switch (result.status) {\r\n                case AuthenticationResultStatus.Redirect:\r\n                    break;\r\n                case AuthenticationResultStatus.Success:\r\n                    await this.navigateToReturnUrl(returnUrl);\r\n                    break;\r\n                case AuthenticationResultStatus.Fail:\r\n                    this.setState({ message: result.message });\r\n                    break;\r\n                default:\r\n                    throw new Error(\"Invalid authentication result status.\");\r\n            }\r\n        } else {\r\n            this.setState({ message: \"You successfully logged out!\" });\r\n        }\r\n    }\r\n\r\n    async processLogoutCallback() {\r\n        const url = window.location.href;\r\n        const result = await authService.completeSignOut(url);\r\n        switch (result.status) {\r\n            case AuthenticationResultStatus.Redirect:\r\n                // There should not be any redirects as the only time completeAuthentication finishes\r\n                // is when we are doing a redirect sign in flow.\r\n                throw new Error('Should not redirect.');\r\n            case AuthenticationResultStatus.Success:\r\n                await this.navigateToReturnUrl(this.getReturnUrl(result.state));\r\n                break;\r\n            case AuthenticationResultStatus.Fail:\r\n                this.setState({ message: result.message });\r\n                break;\r\n            default:\r\n                throw new Error(\"Invalid authentication result status.\");\r\n        }\r\n    }\r\n\r\n    async populateAuthenticationState() {\r\n        const authenticated = await authService.isAuthenticated();\r\n        this.setState({ isReady: true, authenticated });\r\n    }\r\n\r\n    getReturnUrl(state) {\r\n        const params = new URLSearchParams(window.location.search);\r\n        const fromQuery = params.get(QueryParameterNames.ReturnUrl);\r\n        if (fromQuery && !fromQuery.startsWith(`${window.location.origin}/`)) {\r\n            // This is an extra check to prevent open redirects.\r\n            throw new Error(\"Invalid return url. The return url needs to have the same origin as the current page.\")\r\n        }\r\n        return (state && state.returnUrl) ||\r\n            fromQuery ||\r\n            `${window.location.origin}${ApplicationPaths.LoggedOut}`;\r\n    }\r\n\r\n    navigateToReturnUrl(returnUrl) {\r\n        return window.location.replace(returnUrl);\r\n    }\r\n}\r\n","import React, { Component, Fragment } from 'react';\r\nimport { Route } from 'react-router';\r\nimport { Login } from './Login'\r\nimport { Logout } from './Logout'\r\nimport { ApplicationPaths, LoginActions, LogoutActions } from './ApiAuthorizationConstants';\r\n\r\nexport default class ApiAuthorizationRoutes extends Component {\r\n\r\n  render () {\r\n    return(\r\n      <Fragment>\r\n          <Route path={ApplicationPaths.Login} render={() => loginAction(LoginActions.Login)} />\r\n          <Route path={ApplicationPaths.LoginFailed} render={() => loginAction(LoginActions.LoginFailed)} />\r\n          <Route path={ApplicationPaths.LoginCallback} render={() => loginAction(LoginActions.LoginCallback)} />\r\n          <Route path={ApplicationPaths.Profile} render={() => loginAction(LoginActions.Profile)} />\r\n          <Route path={ApplicationPaths.Register} render={() => loginAction(LoginActions.Register)} />\r\n          <Route path={ApplicationPaths.LogOut} render={() => logoutAction(LogoutActions.Logout)} />\r\n          <Route path={ApplicationPaths.LogOutCallback} render={() => logoutAction(LogoutActions.LogoutCallback)} />\r\n          <Route path={ApplicationPaths.LoggedOut} render={() => logoutAction(LogoutActions.LoggedOut)} />\r\n      </Fragment>);\r\n  }\r\n}\r\n\r\nfunction loginAction(name){\r\n    return (<Login action={name}></Login>);\r\n}\r\n\r\nfunction logoutAction(name) {\r\n    return (<Logout action={name}></Logout>);\r\n}\r\n","import React, { Component, Fragment } from 'react';\r\nimport { NavItem, NavLink } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport authService from './AuthorizeService';\r\nimport { ApplicationPaths } from './ApiAuthorizationConstants';\r\n\r\nexport class LoginMenu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isAuthenticated: false,\r\n            userName: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._subscription = authService.subscribe(() => this.populateState());\r\n        this.populateState();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        authService.unsubscribe(this._subscription);\r\n    }\r\n\r\n    async populateState() {\r\n        const [isAuthenticated, user] = await Promise.all([authService.isAuthenticated(), authService.getUser()])\r\n        this.setState({\r\n            isAuthenticated,\r\n            userName: user && user.name\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { isAuthenticated, userName } = this.state;\r\n        if (!isAuthenticated) {\r\n            const registerPath = `${ApplicationPaths.Register}`;\r\n            const loginPath = `${ApplicationPaths.Login}`;\r\n            return this.anonymousView(registerPath, loginPath);\r\n        } else {\r\n            const profilePath = `${ApplicationPaths.Profile}`;\r\n            const logoutPath = { pathname: `${ApplicationPaths.LogOut}`, state: { local: true } };\r\n            return this.authenticatedView(userName, profilePath, logoutPath);\r\n        }\r\n    }\r\n\r\n    authenticatedView(userName, profilePath, logoutPath) {\r\n        return (<Fragment>\r\n            <NavItem>\r\n                <NavLink className='header__button' tag={Link} to={profilePath}>Profile</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n                <NavLink className='header__button' tag={Link} to={logoutPath}>Logout</NavLink>\r\n            </NavItem>\r\n        </Fragment>);\r\n\r\n    }\r\n\r\n    anonymousView(registerPath, loginPath) {\r\n        return (<Fragment>\r\n            <NavItem>\r\n                <NavLink tag={Link} className='header__button' to={registerPath}>Register</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n                <NavLink tag={Link} className='header__button' to={loginPath}>Login</NavLink>\r\n            </NavItem>\r\n        </Fragment>);\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {Container, Navbar, NavbarBrand, NavItem, NavLink } from 'reactstrap';\r\nimport classNames from \"classnames\"\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { LoginMenu } from '../api-authorization/LoginMenu';\r\nimport './NavMenu.css';\r\nimport '../../styles.css';\r\nimport authService from \"../api-authorization/AuthorizeService\";\r\nimport {UserRoles} from \"../api-authorization/ApiAuthorizationConstants\";\r\n\r\nexport class NavMenu extends Component {\r\n    static displayName = NavMenu.name;\r\n\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            collapsed: true,\r\n            isAdmin : false,\r\n            role : \"none\"\r\n        };\r\n        this.titleClasses = classNames(\"title\", \"logo\");\r\n        this.headerClasses = classNames(\"casing__header\", \"header\", \"container-border\");\r\n        this.toggleNavbar = this.toggleNavbar.bind(this);\r\n    }\r\n\r\n    toggleNavbar () {\r\n        this.setState({\r\n            collapsed: !this.state.collapsed\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.subsctibeId = authService.subscribe(() => this.isAdmin());\r\n        this.isAdmin();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        authService.unsubscribe(this.subsctibeId);\r\n    }\r\n\r\n    async isAdmin(){\r\n        const isAdmin = await authService.hasRole(UserRoles.Administrator);\r\n        this.setState({\r\n            isAdmin\r\n        })\r\n    }\r\n\r\n    render () {\r\n        this.buttonsWrapperClasses = classNames(\"header__buttons-wrapper\", {\"header__buttons-wrapper--open\" : !this.state.collapsed});\r\n        return (\r\n            <header>\r\n                <Navbar>\r\n                    <Container className={this.headerClasses}>\r\n                        <div className='header__logo'>\r\n                            <h1 className='header__title'>\r\n                                <NavbarBrand className={this.titleClasses} tag={Link} to=\"/\">Online Auction</NavbarBrand>\r\n                            </h1>\r\n                            <div className=\"header__logo-description\">\r\n                                The biggest online auction platform in solar system!\r\n                            </div>\r\n                        </div>\r\n                        <a className=\"header__menu-button header__menu-button--hidden\" onClick={() => this.toggleNavbar()}>\r\n                            <div className=\"menu-icon-bar\"/>\r\n                            <div className=\"menu-icon-bar\"/>\r\n                            <div className=\"menu-icon-bar\"/>\r\n                        </a>\r\n                        <ul className={this.buttonsWrapperClasses}>\r\n                            <NavItem>\r\n                                <NavLink className='header__button' tag={Link} to=\"/\">Home</NavLink>\r\n                            </NavItem>\r\n                            {\r\n                                this.state.isAdmin &&\r\n                                    <NavItem>\r\n                                        <NavLink className='header__button' tag={Link} to=\"/new-lot\">New Lot</NavLink>\r\n                                    </NavItem>\r\n                            }\r\n                            <NavItem>\r\n                                <NavLink className='header__button' tag={Link} to=\"/winners\">Winners</NavLink>\r\n                            </NavItem>\r\n                            <LoginMenu>\r\n                            </LoginMenu>\r\n                        </ul>\r\n                    </Container>\r\n                </Navbar>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n","export const lotControllerPath = \"api/lots\";\r\nexport const winnersControllerPath = \"api/winners\";\r\nexport const userControllerPath = \"api/users\"\r\n\r\nexport const lotHubPath = \"/lot-hub\"\r\nexport const startLotMethod = \"StartLot\";\r\nexport const activateLotCommand = \"ActivateLot\";\r\nexport const activateLotMessage = \"active\";\r\n\r\nexport const decreaseTimeCommand = \"DecreaseTime\";\r\nexport const increasePriceHubPath = \"/increase-price\";\r\nexport const increasePriceMethod = \"IncreasePrice\";\r\nexport const priceUpdateCommand = \"PriceUpdate\";\r\n\r\nexport const stopCommand = \"Stop\";\r\n\r\nexport const iconsPath = \"https://localhost:44390/api/images/icons\";\r\n\r\nexport const maxDurationSec = 86400;","import React, {useMemo} from \"react\"\r\nimport classNames from \"classnames\"\r\nimport {iconsPath} from \"../LotConstants\";\r\n\r\nexport default function Footer(){\r\n    const classes = useMemo(() => {\r\n        return {\r\n            footerClasses : classNames(\"casing__footer\", \"footer\", \"container-border\"),\r\n            cardNameClasses : classNames(\"footer__card-name\", \"title\"),\r\n            snInfoClasses : classNames(\"footer__card-info\", \"footer__sn-info\")\r\n        }\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <footer className={classes.footerClasses}>\r\n            <div className=\"footer__card\">\r\n                <div className={classes.cardNameClasses}>copyrights</div>\r\n                <div className=\"footer__card-info\">@2020. Online Auction. All rights reserved</div>\r\n            </div>\r\n            <div className=\"footer__card\">\r\n                <div className={classes.cardNameClasses}>connect me</div>\r\n                <ul className=\"footer__sn-wrapper\">\r\n                    <li className=\"footer__sn\">\r\n                        <a className=\"footer__sn-link\" href=\"mailto:Mickita.Sharshun@itechart-group.com\">\r\n                            <img className=\"footer__sn-icon\" src={`${iconsPath}/outlook-icon.png`} alt=\"outlook\"/>\r\n                            <span className={classes.snInfoClasses}>Outlook</span>\r\n                        </a>\r\n                    </li>\r\n                    <li className=\"footer__sn\">\r\n                        <a className=\"footer__sn-link\" href=\"https://github.com/sharshoon\">\r\n                            <img className=\"footer__sn-icon\" src={`${iconsPath}/github-icon.png`} alt=\"github\"/>\r\n                            <span className={classes.snInfoClasses}>GitHub</span>\r\n                        </a>\r\n                    </li>\r\n                    <li className=\"footer__sn\">\r\n                        <a className=\"footer__sn-link\" href=\"https://join.skype.com/invite/b4dT1glZDPZ4\">\r\n                            <img className=\"footer__sn-icon\" src={`${iconsPath}/skype-icon.png`} alt=\"skype\"/>\r\n                            <span className={classes.snInfoClasses}>Skype</span>\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </footer>\r\n    );\r\n}","import React from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport { NavMenu } from './NavMenu/NavMenu';\r\nimport Footer from \"./Footer/Footer\";\r\n\r\nexport function Layout(props) {\r\n    return (\r\n        <div>\r\n            <NavMenu/>\r\n            <Container>\r\n              {props.children}\r\n            </Container>\r\n            <Footer/>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport { Component } from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { ApplicationPaths, QueryParameterNames } from './ApiAuthorizationConstants'\r\nimport authService from './AuthorizeService'\r\n\r\nexport default class AuthorizeRoute extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ready: false,\r\n            authenticated: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._subscription = authService.subscribe(() => this.authenticationChanged());\r\n        this.populateAuthenticationState();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        authService.unsubscribe(this._subscription);\r\n    }\r\n\r\n    render() {\r\n        const { ready, authenticated } = this.state;\r\n        var link = document.createElement(\"a\");\r\n        link.href = this.props.path;\r\n        const returnUrl = `${link.protocol}//${link.host}${link.pathname}${link.search}${link.hash}`;\r\n        const redirectUrl = `${ApplicationPaths.Login}?${QueryParameterNames.ReturnUrl}=${encodeURI(returnUrl)}`\r\n        if (!ready) {\r\n            return <div></div>;\r\n        } else {\r\n            const { component: Component, ...rest } = this.props;\r\n            return <Route {...rest}\r\n                render={(props) => {\r\n                    if (authenticated) {\r\n                        return <Component {...props} />\r\n                    } else {\r\n                        return <Redirect to={redirectUrl} />\r\n                    }\r\n                }} />\r\n        }\r\n    }\r\n\r\n    async populateAuthenticationState() {\r\n        const authenticated = await authService.isAuthenticated();\r\n        this.setState({ ready: true, authenticated });\r\n    }\r\n\r\n    async authenticationChanged() {\r\n        this.setState({ ready: false, authenticated: false });\r\n        await this.populateAuthenticationState();\r\n    }\r\n}\r\n","export const FETCH_LOTS = 'FETCH_LOTS';\r\nexport const FETCH_LOT = 'FETCH_LOT';\r\nexport const UPDATE_LOT = 'UPDATE_LOT';\r\nexport const UPDATE_LOT_PRICE = 'UPDATE_LOT_PRICE';\r\nexport const UPDATE_LOT_ACTIVITY = 'UPDATE_LOT_ACTIVITY';\r\nexport const CLOSE_LOT = 'CLOSE_LOT';\r\nexport const DELETE_LOT = 'DELETE_LOT';\r\nexport const SHOW_LOT_LOADER = 'LOT/SHOW_LOADER';\r\nexport const HIDE_LOT_LOADER = 'LOT/HIDE_LOADER';\r\nexport const SHOW_WINNERS_LOADER = 'WINNERS/SHOW_LOADER';\r\nexport const HIDE_WINNERS_LOADER = 'WINNERS/HIDE_LOADER';\r\nexport const SHOW_USER_LOADER = 'USER/SHOW_LOADER';\r\nexport const HIDE_USER_LOADER = 'USER/HIDE_LOADER';","import {\r\n    CLOSE_LOT,\r\n    DELETE_LOT,\r\n    FETCH_LOT,\r\n    FETCH_LOTS,\r\n    HIDE_LOT_LOADER, HIDE_WINNERS_LOADER,\r\n    SHOW_LOT_LOADER, SHOW_WINNERS_LOADER,\r\n    UPDATE_LOT,\r\n    UPDATE_LOT_ACTIVITY,\r\n    UPDATE_LOT_PRICE\r\n} from \"./types\";\r\nimport {lotControllerPath} from \"../components/LotConstants\";\r\nimport authService from \"../components/api-authorization/AuthorizeService\";\r\n\r\nexport function fetchLots(page, showSold, showUnsold){\r\n    return async dispatch => {\r\n        dispatch(showLoader());\r\n        const response = await fetch(`${lotControllerPath}?page=${page}&showSold=${showSold}&showUnsold=${showUnsold}`);\r\n        const json = await response.json();\r\n        dispatch({type : FETCH_LOTS, payload: {...json, activePage : page, showSold, showUnsold}})\r\n        dispatch(hideLoader());\r\n    }\r\n}\r\n\r\nexport function fetchLot(id){\r\n    return async dispatch => {\r\n        dispatch(showLoader());\r\n        const response = await fetch(`${lotControllerPath}/${id}`);\r\n        if(response.ok) {\r\n            const json = await response.json();\r\n            dispatch({type: FETCH_LOT, payload: json})\r\n        }\r\n        dispatch(hideLoader());\r\n    }\r\n}\r\n\r\nexport function updateLot(lot){\r\n    return dispatch => {\r\n        dispatch({type : UPDATE_LOT, payload: lot})\r\n    }\r\n}\r\n\r\n\r\nexport function updateLotPrice(id, price){\r\n    return dispatch => {\r\n        dispatch({type : UPDATE_LOT_PRICE, payload: {id, price}})\r\n    }\r\n}\r\n\r\nexport function updateLotActivity(id, isActive){\r\n    return dispatch => {\r\n        dispatch({type : UPDATE_LOT_ACTIVITY, payload: {id, isActive}})\r\n    }\r\n}\r\n\r\nexport function closeLot(id){\r\n    return dispatch => {\r\n        dispatch({type : CLOSE_LOT, payload: {id}})\r\n    }\r\n}\r\n\r\nexport function deleteLotAction(id){\r\n    return async dispatch => {\r\n        const token = await authService.getAccessToken();\r\n        const response = await fetch(`${lotControllerPath}/${id}`, {\r\n            method : \"DELETE\",\r\n            headers: !token ? {} : {\r\n                'Authorization': `Bearer ${token}`,\r\n            },\r\n        })\r\n\r\n        if(response.ok){\r\n            dispatch({type : DELETE_LOT, payload: {id}})\r\n        }\r\n        else{\r\n            throw new Error(await response.text());\r\n        }\r\n    }\r\n}\r\n\r\nexport function showLoader() {\r\n    return {\r\n        type: SHOW_LOT_LOADER\r\n    }\r\n}\r\n\r\nexport function hideLoader() {\r\n    return {\r\n        type: HIDE_LOT_LOADER\r\n    }\r\n}\r\n\r\nexport function showWinnersLoader() {\r\n    return {\r\n        type: SHOW_WINNERS_LOADER\r\n    }\r\n}\r\n\r\nexport function hideWinnersLoader() {\r\n    return {\r\n        type: HIDE_WINNERS_LOADER\r\n    }\r\n}\r\n\r\nexport function showUserLoader() {\r\n    return {\r\n        type: SHOW_WINNERS_LOADER\r\n    }\r\n}\r\n\r\nexport function hideUserLoader() {\r\n    return {\r\n        type: HIDE_WINNERS_LOADER\r\n    }\r\n}","export const minuteSeconds = 60;\r\nexport const hourSeconds = 3600;\r\n\r\nexport const renderTime = (dimension, time, timerItemClasses) => {\r\n    return (\r\n        <div className={timerItemClasses}>\r\n            <div className=\"timer__time\">{time}</div>\r\n            <div>{dimension}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const getTimeMinutes = time => ((time % hourSeconds) / minuteSeconds) | 0;\r\nexport const getTimeHours = time => (time / hourSeconds) | 0;","import * as signalR from \"@microsoft/signalr\";\r\nimport {activateLotCommand, activateLotMessage, lotHubPath} from \"../LotConstants\";\r\nimport {updateLot} from \"../../redux/actions\";\r\n\r\nexport const openHubConnection = function(dispatch, lot){\r\n    const hubConnection = new signalR.HubConnectionBuilder()\r\n        .withUrl(lotHubPath)\r\n        .build();\r\n\r\n    hubConnection.on(activateLotCommand, function (message, id) {\r\n        if(lot.id === parseInt(id)){\r\n            dispatch(updateLot({...lot, isActive: message === activateLotMessage}));\r\n        }\r\n    });\r\n    hubConnection.start();\r\n\r\n    return hubConnection;\r\n}","import React, {useEffect, useRef, useState} from \"react\";\r\nimport classNames from \"classnames\"\r\nimport {\r\n    decreaseTimeCommand,\r\n    stopCommand\r\n} from \"../LotConstants\";\r\nimport {closeLot, updateLotActivity, updateLotPrice} from \"../../redux/actions\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {getTimeHours, getTimeMinutes, minuteSeconds, renderTime} from \"./getTime\";\r\nimport {openHubConnection} from \"./openHubConnection\";\r\n\r\nexport default function Timer({lot}) {\r\n    const [remainSeconds, setSeconds] = useState(0);\r\n    const hubConnection = useRef(null);\r\n    const isMountedRef = useRef(null);\r\n    const isActive = useRef(false);\r\n    const dispatch = useDispatch();\r\n    const timerItemClasses = classNames(\"timer__item\", {\"timer__item--translucent\" : !lot.isActive});\r\n    const timerClasses = classNames(\"main__timer\",\"timer\");\r\n    let lotMessage;\r\n\r\n    useEffect(() => {\r\n        isMountedRef.current = true;\r\n        if(lot && !hubConnection.current) {\r\n            hubConnection.current = openHubConnection(dispatch, lot);\r\n\r\n            hubConnection.current.on(decreaseTimeCommand, function (seconds, price, id) {\r\n                if(isMountedRef.current && id === lot.id){\r\n                    if(!isActive.current){\r\n                        isActive.current = true;\r\n                        dispatch(updateLotActivity(lot.id, true));\r\n                    }\r\n                    setSeconds(seconds);\r\n\r\n                    if(lot.priceUsd !== price){\r\n                        dispatch(updateLotPrice(lot.id, price));\r\n                    }\r\n                }\r\n            });\r\n\r\n            hubConnection.current.on(stopCommand, function(id){\r\n                if(lot.id === id){\r\n                    dispatch(closeLot(lot.id));\r\n                }\r\n            });\r\n        }\r\n\r\n        return () => isMountedRef.current = false;\r\n    }, [lot, hubConnection]);\r\n\r\n    if(lot.isSold || !lot.isActive){\r\n        return null;\r\n        // lotMessage = <div className='timer__not-active'>This lot is sold!</div>\r\n        // lotMessage = <div className='timer__not-active'>This lot is not active!</div>\r\n    }\r\n    return (\r\n        <div className='main__timer-wrapper'>\r\n            {lotMessage}\r\n            <div className={timerClasses}>\r\n                {renderTime(\"hours\", getTimeHours(remainSeconds), timerItemClasses)}\r\n                {renderTime(\"minutes\", getTimeMinutes(remainSeconds), timerItemClasses)}\r\n                {renderTime(\"seconds\", remainSeconds % minuteSeconds | 0, timerItemClasses)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, {useCallback, useEffect, useMemo, useRef, useState} from \"react\";\r\nimport {\r\n    increasePriceHubPath,\r\n    increasePriceMethod,\r\n    priceUpdateCommand,\r\n} from \"../LotConstants\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {updateLotPrice} from \"../../redux/actions\";\r\nimport * as signalR from \"@microsoft/signalr\";\r\nimport classNames from \"classnames\"\r\nimport authService from \"../api-authorization/AuthorizeService\";\r\nimport {UserRoles} from \"../api-authorization/ApiAuthorizationConstants\";\r\n\r\nexport default function IncreaseRateButtons({id}){\r\n    const dispatch = useDispatch();\r\n    const lot = useSelector(state => state.lotsInfo.lots.find(lot => lot.id === parseInt(id)));\r\n    const hubConnection = useRef(null);\r\n    const [isUser, setUser] = useState(false);\r\n\r\n    const setConnection = useCallback(async (lot) => {\r\n        try{\r\n            const token = await authService.getAccessToken();\r\n            if(token !== null) {\r\n                hubConnection.current = new signalR.HubConnectionBuilder()\r\n                    .withUrl(increasePriceHubPath, {accessTokenFactory: () => token})\r\n                    .build();\r\n\r\n                hubConnection.current.on(priceUpdateCommand, function (info) {\r\n                    const json = JSON.parse(info);\r\n                    if (json.lotId === lot.id && json.successed) {\r\n                        dispatch(updateLotPrice(json.lotId, json.priceUsd));\r\n                    }\r\n                });\r\n                await hubConnection.current.start();\r\n                const isUser = await authService.hasRole(UserRoles.User);\r\n                setUser(isUser);\r\n            }\r\n        }\r\n        catch{\r\n            alert(\"error\");\r\n        }\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        setConnection(lot);\r\n    }, [setConnection])\r\n\r\n    const updatePrice = useCallback((percentage, lot) => {\r\n        if(hubConnection.current){\r\n            hubConnection.current.invoke(increasePriceMethod, lot.id, parseInt(lot.priceUsd) || parseInt(lot.minPriceUsd), percentage);\r\n        }\r\n    }, []);\r\n\r\n    const buttonClasses = useMemo(() => {\r\n        return classNames(\"button\", \"lot-info__button\")\r\n    }, []);\r\n\r\n    const getNewPrice = useCallback((price, percentage) => {\r\n        return Math.trunc(price + price * percentage / 100);\r\n    }, [])\r\n\r\n    if(lot.isSold || !lot.isActive){\r\n        return null;\r\n    }\r\n    return (\r\n        <div>\r\n            {\r\n                !isUser && <p className=\"lot-info__error\">You cannot place bets as you are not a user</p>\r\n            }\r\n            <div className='lot-info__buttons'>\r\n                <button className={buttonClasses} disabled={!lot.isActive || !isUser} onClick={() => updatePrice(5, lot)}>+5% [{getNewPrice(lot.priceUsd || lot.minPriceUsd,5)}]</button>\r\n                <button className={buttonClasses} disabled={!lot.isActive || !isUser} onClick={() => updatePrice(10, lot)}>+10% [{getNewPrice(lot.priceUsd || lot.minPriceUsd,10)}]</button>\r\n                <button className={buttonClasses} disabled={!lot.isActive || !isUser} onClick={() => updatePrice(20, lot)}>+20% [{getNewPrice(lot.priceUsd || lot.minPriceUsd,20)}]</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import classNames from \"classnames\"\r\n\r\nexport const lotClasses = {\r\n    soldLotClasses : classNames(\"main__lot-message\",\"main__lot-message--sold\"),\r\n    notActiveClasses : classNames(\"main__lot-message\",\"main__lot-message--not-active\"),\r\n}","import React, {useEffect, useMemo} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {fetchLot} from \"../../redux/actions\";\r\nimport classNames from 'classnames'\r\nimport Timer from \"../Timer/Timer\";\r\nimport IncreaseRateButtons from \"../IncreaseRateButtons/IncreaseRateButtons\";\r\nimport LoadingPage from \"../LoadingPage/LoadingPage\";\r\nimport CustomMessagePage from \"../CustomMessagePage/CustomMessagePage\";\r\nimport {lotClasses} from \"./classes\";\r\n\r\nexport default function Lot({id}){\r\n    const dispatch = useDispatch();\r\n    const lot = useSelector(state => state.lotsInfo.lots.find(lot => lot.id === parseInt(id)));\r\n    const loading = useSelector(state => state.app.lotLoading);\r\n\r\n    useEffect(() => {\r\n        if(!lot){\r\n            dispatch(fetchLot(id));\r\n        }\r\n    }, []);\r\n\r\n    const classes = useMemo(() => {\r\n        return {\r\n            titleClasses : classNames(\"main__title\",\"title\"),\r\n            lotInfoClasses : classNames(\"main__lot-info\", \"lot-info\", \"info\")\r\n        }\r\n    }, [])\r\n\r\n    if(loading){\r\n        return <LoadingPage/>\r\n    }\r\n    if(!lot){\r\n        return <CustomMessagePage message={\"There is no such lot on the server\"}/>\r\n    }\r\n\r\n    return (\r\n        <div className='main container-border'>\r\n            <div className='main__lot-info-wrapper'>\r\n                <div className={classes.titleClasses}>\r\n                    {lot.name}\r\n                    {lot.isSold && <div className={lotClasses.soldLotClasses}>Lot is sold!</div>}\r\n                    {!lot.isSold && !lot.isActive && <div className={lotClasses.notActiveClasses}>Lot is not active!</div>}\r\n                </div>\r\n                <img className='main__image' src={lot.imagePath} alt=\"lot\"/>\r\n                <div className={classes.lotInfoClasses}>\r\n                    <div className='lot-info__item'><span className=\"lot-info__name\">Description: </span><span>{lot.description}</span></div>\r\n                    <div className='lot-info__item'><span className=\"lot-info__name\">Price: </span><span>{lot.priceUsd || lot.minPriceUsd} USD</span></div>\r\n                    <Timer lot={lot}/>\r\n                    <IncreaseRateButtons id={id}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useMemo} from 'react'\r\nimport classNames from \"classnames\"\r\nimport {Link, NavLink} from \"react-router-dom\";\r\n\r\nexport default function LotPreview({lot}){\r\n    const classes = useMemo(() => {\r\n        return {\r\n            lotPreviewClasses: classNames(\"main__lot-preview\", \"lot-preview\", \"container-border\"),\r\n            lotPreviewInfo : classNames(\"lot-preview__info\", \"info\"),\r\n            lotNameClasses: classNames(\"lot-preview__name title\")\r\n        }\r\n    }, []);\r\n\r\n    const buttonClasses = useMemo(() => {\r\n        return classNames(\"button\", \"lot-preview__button\");\r\n    }, [])\r\n    return (\r\n        <div className={classes.lotPreviewClasses}>\r\n            <div className='lot-preview__image-wrapper'>\r\n                <img className='lot-preview__image' src={lot.imagePath} alt=\"lot\"/>\r\n            </div>\r\n            <div className={classes.lotPreviewInfo}>\r\n                <div className=\"lot-preview__info-text-wrapper\">\r\n                    <div className=\"lot-preview__title-wrapper\">\r\n                        <NavLink className={classes.lotNameClasses} to={`/lots/${lot.id}`}  tag={Link}>{lot.name}</NavLink>\r\n                        {lot.isSold && <div className=\"lot-preview__sold-lot-message\">Lot is sold!</div>}\r\n                    </div>\r\n                    <div className='lot-preview__description'>{lot.description}</div>\r\n                </div>\r\n                <div className=\"lot-preview__info-button-wrapper\">\r\n                    <Link className={buttonClasses} to={`/lots/${lot.id}`} tag={Link}>\r\n                            Go to the lot page\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\"\r\nimport {useSelector} from \"react-redux\";\r\nimport classNames from \"classnames\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default function Pagination({pageCount}){\r\n    const items = [];\r\n    const lotsInfo = useSelector(state => state.lotsInfo);\r\n    for(let i = 1; i <= pageCount; i++){\r\n        if(Math.abs(i - lotsInfo.activePage <=5)){\r\n            items.push(<NavLink\r\n                    className={classNames(\"pagination__link\", {\"pagination__link--active\" : lotsInfo.activePage === i})}\r\n                    to={`/lots?page=${i}`}\r\n                    key={i}\r\n                >\r\n                    {i}\r\n                </NavLink>\r\n            );\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"pagination\">\r\n            {\r\n                lotsInfo.activePage !== 1 && <NavLink\r\n                    className=\"pagination__link\"\r\n                    to={`/lots?page=${lotsInfo.activePage - 1}`}\r\n                    tag={Link}\r\n                >\r\n                    «\r\n                </NavLink>\r\n            }\r\n            {items}\r\n            {\r\n                lotsInfo.activePage !== lotsInfo.totalPages && <NavLink\r\n                    className=\"pagination__link\"\r\n                    to={`/lots?page=${lotsInfo.activePage + 1}`}\r\n                    tag={Link}\r\n                >\r\n                    »\r\n                </NavLink>\r\n            }\r\n        </div>\r\n    )\r\n}","export const soldLot = 1;\r\nexport const unsoldLot = 2;","export const multiselectStyles = {\r\n    multiselectContainer: {\r\n        \"margin\" : \"0 1rem 1rem 1rem\"\r\n    },\r\n    chips: {\r\n        background: \"#f2d400\",\r\n        color: \"black\",\r\n        \"fontSize\": \"1rem\",\r\n        \"margin\" : \"0 .3rem\",\r\n        \"padding\" : \".5rem .7rem\"\r\n    },\r\n    option: { // To change css for dropdown options\r\n        background: \"#f2d400\",\r\n        color: \"black\"\r\n    },\r\n}","import {soldLot, unsoldLot} from \"./lotTypes\";\r\nimport {fetchLots} from \"../../redux/actions\";\r\nimport {Multiselect} from \"multiselect-react-dropdown\";\r\nimport {multiselectStyles} from \"./multiselectStyles\";\r\nimport React from \"react\";\r\n\r\nexport function getSelectedValues(showSold, showUnsold){\r\n    const selectedValues = [];\r\n    if(showSold){\r\n        selectedValues.push({name: \"Show sold lots\", id : soldLot});\r\n    }\r\n    if(showUnsold){\r\n        selectedValues.push({name: \"Show unsold lots\", id : unsoldLot});\r\n    }\r\n    return selectedValues;\r\n}\r\n\r\nexport function onSelect(resetPages, selectedValues, page, dispatch, selectedLotTypes, setSelectedLotTypes){\r\n    resetPages.current = true;\r\n    const showSold = selectedValues.some(item => item.id === soldLot);\r\n    const showUnsold = selectedValues.some(item => item.id === unsoldLot);\r\n    dispatch(fetchLots(page, showSold, showUnsold));\r\n    setSelectedLotTypes({...selectedLotTypes, selectedValues});\r\n}\r\n\r\nexport function getMultiSelect(selectedLotTypes, resetPages, page, dispatch, setSelectedLotTypes){\r\n    return (<Multiselect\r\n        options={selectedLotTypes.options}\r\n        selectedValues={selectedLotTypes.selectedValues}\r\n        onSelect={(selectedValues) => onSelect(resetPages, selectedValues, page, dispatch, selectedLotTypes, setSelectedLotTypes)}\r\n        onRemove={(selectedValues) => onSelect(resetPages, selectedValues, page, dispatch, selectedLotTypes, setSelectedLotTypes)}\r\n        displayValue=\"name\"\r\n        style={multiselectStyles}\r\n    />);\r\n}","import React, {useEffect, useRef, useState} from 'react'\r\nimport LotPreview from \"../LotPreview/LotPreview\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {fetchLots} from \"../../redux/actions\";\r\nimport classNames from \"classnames\"\r\nimport LoadingPage from \"../LoadingPage/LoadingPage\";\r\nimport Pagination from \"../Pagination/Pagination\";\r\nimport {soldLot, unsoldLot} from \"./lotTypes\";\r\nimport {Redirect} from \"react-router\";\r\nimport {getMultiSelect, getSelectedValues} from \"./selectedValues\";\r\n\r\nexport default function Lots({page}){\r\n    const dispatch = useDispatch();\r\n    const lotsInfo = useSelector(state => state.lotsInfo);\r\n    const loading = useSelector(state => state.app.lotLoading);\r\n    const [selectedLotTypes, setSelectedLotTypes] = useState({\r\n        options: [{name: \"Show sold lots\", id : soldLot}, {name: \"Show unsold lots\", id : unsoldLot}],\r\n        selectedValues : []\r\n    });\r\n    const resetPages = useRef(false);\r\n    const lotsWrapperClasses = classNames(\"main\", \"main__lot-preview-wrapper\", \"container-border\");\r\n\r\n    useEffect(() => {\r\n        const selectedValues = getSelectedValues(lotsInfo.showSold, lotsInfo.showUnsold);\r\n        setSelectedLotTypes({...selectedLotTypes, selectedValues});\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchLots(page, lotsInfo.showSold, lotsInfo.showUnsold));\r\n    }, [dispatch, page])\r\n\r\n    const multiselect =  getMultiSelect(selectedLotTypes, resetPages, page, dispatch, setSelectedLotTypes);\r\n\r\n    if(loading){\r\n        return <LoadingPage/>\r\n    }\r\n    if(resetPages.current){\r\n        resetPages.current = false;\r\n        return <Redirect to={\"/lots\"}/>\r\n    }\r\n    if(!lotsInfo.lots || (lotsInfo.lots && !lotsInfo.lots.length)){\r\n        return (\r\n            <div className={lotsWrapperClasses}>\r\n                {multiselect}\r\n                <div className=\"main__custom-message-page\">There are no lots on the server that meet the filtering conditions</div>\r\n            </div>)\r\n    }\r\n    return (\r\n        <div className={lotsWrapperClasses}>\r\n            {multiselect}\r\n            {lotsInfo.lots.map(lot => <LotPreview lot={lot} key={lot.id}/>)}\r\n            <div className=\"main__pagination\">\r\n                <Pagination pageCount={lotsInfo.totalPages}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import classNames from \"classnames\";\r\n\r\nexport const adminLotPreviewClasses =  {\r\n    lotPreviewClasses: classNames(\"main__lot-preview\", \"main__admin-lot-preview\", \"admin-lot-preview\", \"container-border\"),\r\n    lotNameClasses: classNames(\"lot-preview__name\",\"admin-lot-preview__name\",\"title\"),\r\n    minorButtonClasses : classNames(\"button\", \"admin-lot-preview__button\", \"admin-lot-preview__minor-button\"),\r\n    majorButtonClasses : classNames(\"button\", \"admin-lot-preview__button\", \"admin-lot-preview__major-button\"),\r\n    buttonClasses : classNames(\"button\", \"admin-lot-preview__button\"),\r\n    buttonSetNexLotClasses : classNames(\"button\", \"admin-lot-preview__button\", \"admin-lot-preview__set-next-lot-button\"),\r\n    buttonWarningClasses : classNames(\"button\", \"admin-lot-preview__button\", \"button--warning\", \"admin-lot-preview__minor-button\"),\r\n    inputClasses : classNames(\"form-item__input\", \"container-border\",\"admin-lot-preview__input\"),\r\n    setNextLotInputClasses : classNames(\"form-item__input\", \"container-border\",\"admin-lot-preview__input\", \"admin-lot-preview__set-next-lot-input\"),\r\n    lotPreviewInfo : classNames(\"admin-lot-preview__info\",\"lot-preview__info\", \"info\"),\r\n    titleWrapperClasses : classNames(\"lot-preview__title-wrapper\", \"admin-lot-preview__title-wrapper\"),\r\n    descriptionClasses : classNames(\"admin-lot-preview__description\", \"lot-preview__description\")\r\n};","import {deleteLotAction} from \"../../redux/actions\";\r\n\r\nexport const deleteLot = (dispatch, id, setOperationResult) => {\r\n    try{\r\n        dispatch(deleteLotAction(id));\r\n        setOperationResult({\r\n            message: \"Lot was successfully deleted\",\r\n            successed: true\r\n        })\r\n    }\r\n    catch(e){\r\n        setOperationResult({\r\n            message: e.message,\r\n            successed: false\r\n        });\r\n    }\r\n}","import {lotControllerPath} from \"../LotConstants\";\r\n\r\nexport async function fetchDropDownLots(setDropDown, page, showSold, showUnsold) {\r\n    const response = await fetch(`${lotControllerPath}?page=${page}&showSold=${showSold}&showUnsold=${showUnsold}`);\r\n    if(response.ok){\r\n        const json = await response.json();\r\n        return json;\r\n    }\r\n    return null;\r\n}","import React from \"react\"\r\nimport {fetchDropDownLots} from \"../DropDownLots/fetchDropDrownLots\";\r\n\r\nexport default function DropDownPagination({page, pageCount, setDropDown}){\r\n    return (\r\n        <div className=\"main__dropDownPagination\">\r\n            <div className=\"pagination\">\r\n                {\r\n                    page !== 1 && <button\r\n                        className=\"pagination__link\"\r\n                        onClick={() => fetchDropDownLots(setDropDown, page - 1, true, true, true)}\r\n                    >\r\n                        «\r\n                    </button>\r\n                }\r\n                {\r\n                    page !== pageCount && <button\r\n                        className=\"pagination__link\"\r\n                        onClick={() => fetchDropDownLots(setDropDown, page + 1, true, true, true)}\r\n                    >\r\n                        »\r\n                    </button>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import authService from \"../api-authorization/AuthorizeService\";\r\nimport {lotControllerPath} from \"../LotConstants\";\r\n\r\nexport const startAfter = async (lot, prevLot, setOperationResult, dropDown, setDropDown) => {\r\n    if(!lot.isSold && !lot.isActive) {\r\n        if (prevLot.id) {\r\n            const token = await authService.getAccessToken();\r\n            const response = await fetch(lotControllerPath, {\r\n                method: 'PATCH',\r\n                headers: !token ? {} : {\r\n                    'Accept': '*/*',\r\n                    'Authorization': `Bearer ${token}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    lotId : lot.id,\r\n                    previousLotId : prevLot.id\r\n                })\r\n            });\r\n\r\n            if (response.ok) {\r\n                setOperationResult({\r\n                    successed: true,\r\n                    message: \"Next Lot Id was successfully added!\",\r\n                });\r\n            } else {\r\n                setOperationResult({\r\n                    successed: false,\r\n                    message: \"Id wasn't added, error!\",\r\n                });\r\n            }\r\n        }\r\n    }\r\n    else{\r\n        setOperationResult({\r\n            successed: false,\r\n            message: \"Lot is sold!\",\r\n        });\r\n    }\r\n\r\n    setDropDown({\r\n        ...dropDown,\r\n        selected : null,\r\n        isOpen : false\r\n    });\r\n}","import React, {useEffect, useMemo, useState} from \"react\"\r\nimport {fetchDropDownLots} from \"./fetchDropDrownLots\";\r\nimport classNames from \"classnames\";\r\nimport DropDownPagination from \"../DropDownPagination/DropDownPagination\";\r\nimport {startAfter} from \"../AdminLotPreview/startAfter\";\r\n\r\nexport default function DropDownLots({currentLot, setOperationResult}){\r\n    const [dropDown, setDropDown] = useState({\r\n        isOpen : false,\r\n        page : 1,\r\n        pageCount : 0,\r\n        selected : null,\r\n        lots : [],\r\n    });\r\n    const classes = useMemo(() => {\r\n        return {\r\n            buttonNextLotClasses : classNames(\"button\", \"admin-lot-preview__button\", \"admin-lot-preview__major-button\", \"dropDownLots__button\", \"container-border\"),\r\n            dropDownContentClasses : classNames(\"dropDownLots__content\", \"container-border\"),\r\n            buttonWrapperClasses : classNames(\"admin-lot-preview__major-button\", \"dropDownLots__button-wrapper\"),\r\n            buttonClasses : classNames(\"button\", \"admin-lot-preview__button\", \"dropDownLots__set-button\")\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        fetchDropDownLots(setDropDown, dropDown.page, true, true).then((json) => {\r\n            if(json){\r\n                setDropDown({\r\n                    lots : json.lots,\r\n                    page : dropDown.page,\r\n                    pageCount : json.pagesCount,\r\n                    isOpen : dropDown.isOpen\r\n                })\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    const dropDownContent = dropDown && dropDown.lots ?\r\n        dropDown.lots.map(lot => lot.id !== currentLot.id && !lot.isSold && !lot.isActive &&\r\n            <button\r\n                key={lot.id}\r\n                onClick={() => setDropDown({...dropDown, selected: lot, isOpen: false})}\r\n                className=\"dropDownLots__item\">{lot.name} [ID: {lot.id}]\r\n            </button>) :\r\n        <div className=\"dropDownLots__item\">No lots!</div>;\r\n\r\n    const dropDownTitle = dropDown && dropDown.selected ? `${dropDown.selected.name} [ID: ${dropDown.selected.id}]` : \"Start After...\";\r\n\r\n    return(\r\n        <div className=\"main__dropDownLots\">\r\n            <div className={classes.buttonWrapperClasses}>\r\n                <button\r\n                    className={classes.buttonNextLotClasses}\r\n                    onClick={() => setDropDown({...dropDown, isOpen: !dropDown.isOpen})}\r\n                >\r\n                    {dropDownTitle}\r\n                </button>\r\n                {dropDown.isOpen &&\r\n                    <div className={classes.dropDownContentClasses}>\r\n                        {dropDownContent}\r\n                        <DropDownPagination page={dropDown.page} pageCount={dropDown.pageCount} setDropDown={setDropDown}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n            <button\r\n                className={classes.buttonClasses}\r\n                onClick={() => startAfter(currentLot, dropDown.selected, setOperationResult, dropDown, setDropDown)}\r\n            >\r\n                Set\r\n            </button>\r\n        </div>\r\n    )\r\n}","import React, {useCallback} from 'react'\r\nimport {Link, NavLink} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {adminLotPreviewClasses} from \"./classes\";\r\nimport {deleteLot} from \"./deleteLot\";\r\nimport {lotHubPath, startLotMethod} from \"../LotConstants\";\r\nimport * as signalR from \"@microsoft/signalr\";\r\nimport DropDownLots from \"../DropDownLots/DropDownLots\";\r\nimport {fetchLots} from \"../../redux/actions\";\r\n\r\nexport default function AdminLotPreview({lot, connection, setOperationResult, page}){\r\n    const dispatch = useDispatch();\r\n    const startLotCallback = useCallback((lot, setOperationResult) => {\r\n        if(!lot.isSold && !lot.isActive){\r\n            const startLotConnection = new signalR.HubConnectionBuilder()\r\n                .withUrl(lotHubPath)\r\n                .build();\r\n\r\n            startLotConnection.start().then(() => {\r\n                startLotConnection.invoke(startLotMethod, \"active\", lot.id);\r\n                setOperationResult({\r\n                    message: \"Lot started successfully!\",\r\n                    successed: true\r\n                });\r\n            });\r\n        }\r\n        else {\r\n            setOperationResult({\r\n                message: \"The lot has already been sold!\",\r\n                successed: false\r\n            })\r\n        }\r\n    }, []);\r\n\r\n    const deleteLotCallback = useCallback((id, dispatch, page) => {\r\n        deleteLot(dispatch, id, setOperationResult);\r\n        dispatch(fetchLots(page, true, true));\r\n    }, [setOperationResult])\r\n\r\n    return (\r\n        <div className={adminLotPreviewClasses.lotPreviewClasses}>\r\n            <div className='admin-lot-preview__image-wrapper'>\r\n                <img className='lot-preview__image' src={lot.imagePath} alt=\"lot\"/>\r\n            </div>\r\n            <div className={adminLotPreviewClasses.lotPreviewInfo}>\r\n                <div className=\"lot-preview__info-text-wrapper\">\r\n                    <div className={adminLotPreviewClasses.titleWrapperClasses}>\r\n                        <NavLink className={adminLotPreviewClasses.lotNameClasses} to={`/lots/${lot.id}`}  tag={Link}>{lot.name} [ID:{lot.id}]</NavLink>\r\n                        {lot.isSold && <div className=\"lot-preview__sold-lot-message\">Lot is sold!</div>}\r\n                    </div>\r\n                    <div className={adminLotPreviewClasses.descriptionClasses}>{lot.description}</div>\r\n                </div>\r\n                <div className=\"admin-lot-preview__buttons-wrapper\">\r\n                    <button className={adminLotPreviewClasses.minorButtonClasses} disabled={!connection} onClick={() => startLotCallback(lot, setOperationResult)}>Start Lot</button>\r\n                    <button className={adminLotPreviewClasses.buttonWarningClasses} onClick={() => deleteLotCallback(lot.id, dispatch, page)}>Delete lot</button>\r\n                    <DropDownLots currentLot={lot} setOperationResult={setOperationResult}/>\r\n                    <div className=\"admin-lot-preview__major-button\">\r\n                        <Link className={adminLotPreviewClasses.buttonClasses} to={`/lots/${lot.id}`} tag={Link}>\r\n                            Go to the lot page\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useMemo} from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nexport default function ResultTextBlock({successed, message}){\r\n    const classes = useMemo(() => {\r\n        return classNames(\"result-block\", {\"result-block--error\" : !successed})\r\n    }, [successed]);\r\n\r\n    if(message) {\r\n        return (\r\n            <p className={classes}>{message}</p>\r\n        )\r\n    }\r\n    else{\r\n        return '';\r\n    }\r\n}","import React, {useEffect, useRef, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport classNames from \"classnames\";\r\nimport {fetchLots} from \"../../redux/actions\";\r\nimport LoadingPage from \"../LoadingPage/LoadingPage\";\r\nimport AdminLotPreview from \"../AdminLotPreview/AdminLotPreview\";\r\nimport {lotHubPath} from \"../LotConstants\";\r\nimport * as signalR from \"@microsoft/signalr\";\r\nimport ResultTextBlock from \"../ResultTextBlock/ResultTextBlock\";\r\nimport CustomMessagePage from \"../CustomMessagePage/CustomMessagePage\";\r\nimport Pagination from \"../Pagination/Pagination\";\r\nimport {Redirect} from \"react-router\";\r\nimport {getMultiSelect, getSelectedValues} from \"./selectedValues\";\r\nimport {soldLot, unsoldLot} from \"./lotTypes\";\r\n\r\nexport default function AdminPanel({page}){\r\n    const dispatch = useDispatch();\r\n    const lotsInfo = useSelector(state => state.lotsInfo);\r\n    const loading = useSelector(state => state.app.lotLoading);\r\n    const [operationResult, setResult] = useState({\r\n        message: \"\",\r\n        successed: true\r\n    });\r\n    const [selectedLotTypes, setSelectedLotTypes] = useState({\r\n        options: [{name: \"Show sold lots\", id : soldLot}, {name: \"Show unsold lots\", id : unsoldLot}],\r\n        selectedValues : []\r\n    });\r\n    const resetPages = useRef(false);\r\n    const lotsWrapperClasses = classNames(\"main\", \"main__admin-lot-preview-wrapper\", \"container-border\");\r\n\r\n    useEffect(() => {\r\n        const selectedValues = getSelectedValues(lotsInfo.showSold, lotsInfo.showUnsold);\r\n        setSelectedLotTypes({...selectedLotTypes, selectedValues});\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchLots(page, lotsInfo.showSold, lotsInfo.showUnsold));\r\n    },[dispatch, page]);\r\n\r\n    const [hubConnection, setConnection] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const connection = new signalR.HubConnectionBuilder()\r\n            .withUrl(lotHubPath)\r\n            .build();\r\n\r\n        connection.start().then(() => {\r\n            setConnection(connection);\r\n        });\r\n    }, [])\r\n\r\n    const multiselect = getMultiSelect(selectedLotTypes, resetPages, page, dispatch, setSelectedLotTypes);\r\n\r\n    if(loading){\r\n        return <LoadingPage/>\r\n    }\r\n    if(!lotsInfo.lots){\r\n        return <CustomMessagePage message={\"Error\"}/>\r\n    }\r\n    if(resetPages.current){\r\n        resetPages.current = false;\r\n        return <Redirect to={\"/lots\"}/>\r\n    }\r\n    if(!lotsInfo.lots.length){\r\n        if(page !== 1){\r\n            return <Redirect to={`/lots?${page - 1}`}/>\r\n        }\r\n        return (\r\n            <div className={lotsWrapperClasses}>\r\n                {multiselect}\r\n                <div className=\"main__custom-message-page\">There are no lots on the server that meet the filtering conditions</div>\r\n            </div>)\r\n    }\r\n    return (\r\n        <div className={lotsWrapperClasses}>\r\n            {multiselect}\r\n            <ResultTextBlock successed={operationResult.successed} message={operationResult.message}/>\r\n            {lotsInfo.lots.map(lot => <AdminLotPreview lot={lot} key={lot.id} connection={hubConnection} setOperationResult={setResult} page={page}/>)}\r\n            <div className=\"main__pagination\">\r\n                <Pagination pageCount={lotsInfo.totalPages}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport Lot from \"../Lot/Lot\";\r\nimport Lots from \"../Lots/Lots\";\r\nimport authService from \"../api-authorization/AuthorizeService\";\r\nimport {UserRoles} from \"../api-authorization/ApiAuthorizationConstants\";\r\nimport AdminPanel from \"../Lots/AdminPanel\";\r\nimport LoadingPage from \"../LoadingPage/LoadingPage\";\r\n\r\nexport default function LotsPlug(props){\r\n    let [admin, setAdminRights] = useState(null);\r\n    const id = props.match.params.id;\r\n    const pageParams = props.location.search.match(/\\?page=(\\d)/);\r\n    let page;\r\n    if(pageParams && pageParams[1]){\r\n        page = +pageParams[1];\r\n    }\r\n\r\n    const CheckAdminRights = useCallback(async(setAdminRights) => {\r\n        const isAdmin = await authService.hasRole(UserRoles.Administrator);\r\n        setAdminRights(isAdmin)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const subscribeId = authService.subscribe(() => CheckAdminRights(setAdminRights));\r\n        CheckAdminRights(setAdminRights);\r\n\r\n        return(() => {\r\n            authService.unsubscribe(subscribeId);\r\n        })\r\n    }, [CheckAdminRights])\r\n\r\n    if(id){\r\n        return <Lot id={id}/>\r\n    }\r\n    if(admin === null){\r\n        return <LoadingPage/>\r\n    }\r\n    if(!admin){\r\n        if(page && !isNaN(page)){\r\n            return <Lots page={page}/>\r\n        }\r\n        else if(!id && !page){\r\n            return <Lots page={1}/>\r\n        }\r\n    }\r\n    else{\r\n        if(page && !isNaN(page)){\r\n            return <AdminPanel page={page}/>\r\n        }\r\n        else if(!page){\r\n            return <AdminPanel page={1}/>\r\n        }\r\n    }\r\n}","import React from 'react'\r\n\r\nexport default function FormErrors({errors}){\r\n    if(errors && errors.length > 0){\r\n        return errors.map((error, id) => <p className=\"form-item__error\" key={id}>{error}</p>);\r\n    }\r\n    else{\r\n        return '';\r\n    }\r\n}\r\n\r\n","import FormErrors from \"../FormErrors/FormErrors\";\r\nimport React, {useCallback, useMemo} from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nexport default function AddLotTextInput({labelText, type, checkingFunctions, state, setState}){\r\n    const classes = useMemo(() => {\r\n        return {\r\n            formClasses : classNames(\"add-lot__item\", \"form-item\"),\r\n            inputClasses : classNames(\"form-item__input\", \"container-border\", {\"form-item__input--error\" : state.errors.length !== 0})\r\n        }\r\n    }, [state]);\r\n\r\n    const handleChangeText = useCallback((event) => {\r\n        const errors = [];\r\n\r\n        for(let func of checkingFunctions()){\r\n            const result = func(event.target.value);\r\n            if(result){\r\n                errors.push(result);\r\n            }\r\n        }\r\n\r\n        setState({\r\n            value : event.target.value,\r\n            errors: errors\r\n        });\r\n    }, [checkingFunctions, setState])\r\n\r\n    return(\r\n        <div className={classes.formClasses}>\r\n            <label className=\"form-item__label\">{labelText}</label>\r\n            <FormErrors errors={state.errors}/>\r\n            <input className={classes.inputClasses}\r\n                   value={state.value}\r\n                   onChange={(event) => setState({value: event.target.value, errors: []})}\r\n                   onBlur={handleChangeText}\r\n                   type={type}\r\n                   required={true}/>\r\n        </div>\r\n    )\r\n}","import {maxDurationSec} from \"../LotConstants\";\r\n\r\nexport const descriptionCheckingFunctions = () => {\r\n    const descriptionMinLength = 20;\r\n    const functions = [];\r\n    functions.push((value) => {\r\n        if(value.length <= descriptionMinLength){\r\n            return `Description length can't be shorter then ${descriptionMinLength}`;\r\n        }\r\n    });\r\n\r\n    return functions;\r\n}\r\n\r\nexport const nameCheckingFunctions = () => {\r\n    const functions = [];\r\n\r\n    functions.push((value) => {\r\n        if(!value){\r\n            return \"Name can't be empty!\";\r\n        }\r\n    });\r\n\r\n    return functions;\r\n}\r\n\r\nexport const minPriceCheckingFunctions = () => {\r\n    const functions = [];\r\n    functions.push((value) => {\r\n        if(isNaN(+value) || value < 0){\r\n            return \"Invalid price!\";\r\n        }\r\n    });\r\n\r\n    return functions;\r\n}\r\n\r\nexport const durationCheckingFunctions = () => {\r\n    const functions = [];\r\n    functions.push((value) => {\r\n        if(isNaN(+value)){\r\n            return \"Invalid duration!\";\r\n        }\r\n    });\r\n    functions.push((value) => {\r\n        if(+value < 10){\r\n            return \"Duration is too small\"\r\n        }\r\n    });\r\n    functions.push((value) => {\r\n        if(+value > maxDurationSec){\r\n            return \"Duration is too big!\";\r\n        }\r\n    });\r\n\r\n    return functions;\r\n}","import {lotControllerPath} from \"../LotConstants\";\r\n\r\nexport default async function TryAddLot(token, formData, setAddingResult){\r\n    const response = await fetch(lotControllerPath,{\r\n        method: 'POST',\r\n        headers: !token ? {} : {\r\n            'Accept': '*/*',\r\n            'Authorization': `Bearer ${token}`,\r\n        },\r\n        body: formData\r\n    });\r\n    if(response.ok){\r\n        setAddingResult({\r\n            successed: true,\r\n            message: \"Lot was successfully added!\",\r\n        });\r\n    }else{\r\n        setAddingResult({\r\n            successed: false,\r\n            message: \"Lot wasn't added. Check your image for validity\",\r\n        });\r\n    }\r\n}","import classNames from \"classnames\";\r\n\r\nexport const classes = {\r\n    mainClasses : classNames(\"main\", \"container\", \"container-border\", \"add-lot\"),\r\n    titleClasses : classNames(\"title\", \"title--center\"),\r\n    buttonClasses : classNames(\"button\", \"form-item__button\"),\r\n    buttonWrapperClasses : classNames(\"add-lot__item\", \"form-item\", \"form-item__buttons-wrapper\")\r\n}","import checkImageSize from \"./checkImageSize\";\r\n\r\nexport const fileSelectedHandler = (event, setFile, setFileErrors) => {\r\n    checkImageSize(event.target.files[0], (result) => {\r\n        if(result){\r\n            setFile(event.target.files[0]);\r\n            setFileErrors([]);\r\n        }\r\n        else{\r\n            setFileErrors([\"Image size is invalid!\"]);\r\n        }\r\n    });\r\n}","export default function checkImageSize(file, callback){\r\n    let reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = function (e) {\r\n        let image = new Image();\r\n        image.src = e.target.result;\r\n        image.onload = function () {\r\n            callback(this.height <= this.width);\r\n        };\r\n    }\r\n}","export const checkParametersValidity = (fields) => {\r\n    for(let field of fields){\r\n        if (field.length || (field.errors && field.errors.length)){\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}","import React, {useCallback, useState} from \"react\";\r\nimport authService from \"../api-authorization/AuthorizeService\";\r\nimport FormErrors from \"../FormErrors/FormErrors\";\r\nimport AddLotTextInput from \"../AddLotTextInput/AddLotTextInput\";\r\nimport ResultTextBlock from \"../ResultTextBlock/ResultTextBlock\";\r\nimport {\r\n    descriptionCheckingFunctions,\r\n    durationCheckingFunctions,\r\n    minPriceCheckingFunctions,\r\n    nameCheckingFunctions\r\n} from \"./inputCheckingFunctions\";\r\nimport TryAddLot from \"./tryAddLot\";\r\nimport {classes} from \"./addLotClasses\";\r\nimport {fileSelectedHandler} from \"./fileSelectedHandler\";\r\nimport {checkParametersValidity} from \"./checkParametersValidity\";\r\n\r\nexport default function AddLot(){\r\n    const [file, setFile] = useState({\r\n        name: \"\"\r\n    });\r\n    const [addingResult, setAddingResult] = useState({\r\n        message: \"\",\r\n        successed: true\r\n    });\r\n    const [lotName, setLotName] = useState({\r\n        value: \"\",\r\n        errors: []\r\n    });\r\n    const [lotDescription, setDescription] = useState({\r\n        value: \"\",\r\n        errors: []\r\n    });\r\n    const [lotMinPrice, setMinPrice] = useState({\r\n        value: 0,\r\n        errors: []\r\n    });\r\n    const [lotDuration, setDuration] = useState({\r\n        value: 0,\r\n        errors: []\r\n    });\r\n    const [fileErrors, setFileErrors] = useState([]);\r\n\r\n    const uploadDataCallback = useCallback(async (lotName, lotDescription, lotMinPrice, lotDuration) => {\r\n        const token = await authService.getAccessToken();\r\n        const formData = new FormData();\r\n\r\n        if(file.name){\r\n            formData.append('image', file, file.name);\r\n        }\r\n        formData.append('name', lotName);\r\n        formData.append('description', lotDescription);\r\n        formData.append('minPrice', lotMinPrice);\r\n        formData.append('duration', lotDuration);\r\n\r\n        try{\r\n            await TryAddLot(token, formData, setAddingResult);\r\n        }\r\n        catch (error){\r\n            setAddingResult({\r\n                successed: false,\r\n                message: \"An error occurred while adding a new lot!\",\r\n            })\r\n        }\r\n        finally {\r\n            setLotName({value : \"\", errors: []});\r\n            setDescription({value : \"\", errors: []});\r\n            setMinPrice({value : 0, errors: []});\r\n            setDuration({value : 0, errors: []});\r\n        }\r\n    }, [file])\r\n\r\n    const fileUploadHandler = (event) => {\r\n        event.preventDefault();\r\n        uploadDataCallback(lotName.value, lotDescription.value, lotMinPrice.value, lotDuration.value);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.mainClasses}>\r\n            <h2 className={classes.titleClasses}>Adding a new lot</h2>\r\n            <ResultTextBlock successed={addingResult.successed} message={addingResult.message}/>\r\n            <form className=\"add-lot__form\" onSubmit={fileUploadHandler}>\r\n                <AddLotTextInput labelText={\"Name:\"} type={\"text\"} checkingFunctions={nameCheckingFunctions} state={lotName} setState={setLotName}/>\r\n                <AddLotTextInput labelText={\"Description:\"} type={\"text\"} checkingFunctions={descriptionCheckingFunctions} state={lotDescription} setState={setDescription}/>\r\n                <AddLotTextInput labelText={\"Minimum price USD:\"} type={\"number\"} checkingFunctions={minPriceCheckingFunctions} state={lotMinPrice} setState={setMinPrice}/>\r\n                <AddLotTextInput labelText={\"Duration, sec:\"} type={\"number\"} checkingFunctions={durationCheckingFunctions} state={lotDuration} setState={setDuration}/>\r\n                <div className={classes.buttonWrapperClasses}>\r\n                    <div className={\"form-item__error-wrapper\"}>\r\n                        <FormErrors errors={fileErrors}/>\r\n                    </div>\r\n                    <label className={classes.buttonClasses} htmlFor=\"choose-file-input\">{file.name || \"Choose File...\"}</label>\r\n                    <input className=\"form-item__file-choose\" type=\"file\" onChange={(event) => fileSelectedHandler(event, setFile, setFileErrors)} id=\"choose-file-input\"/>\r\n                </div>\r\n                <div className={classes.buttonWrapperClasses}>\r\n                    <button disabled={checkParametersValidity([lotName, lotDescription, lotMinPrice, lotDuration, fileErrors])}\r\n                            type=\"submit\"\r\n                            className={classes.buttonClasses}\r\n                    >\r\n                        Upload\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React, {useCallback, useEffect, useState} from 'react';\r\nimport authService from \"../api-authorization/AuthorizeService\";\r\nimport AddLot from \"../AddLot/AddLot\";\r\nimport {UserRoles} from \"../api-authorization/ApiAuthorizationConstants\";\r\nimport LoadingPage from \"../LoadingPage/LoadingPage\";\r\nimport CustomMessagePage from \"../CustomMessagePage/CustomMessagePage\";\r\n\r\nexport default function AddLotPage(){\r\n    let [admin, setAdmin] = useState(null);\r\n\r\n    const isAdminCallback = useCallback(async(setAdmin) => {\r\n        const isAdmin = await authService.hasRole(UserRoles.Administrator);\r\n        setAdmin(isAdmin)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const subscribeId = authService.subscribe(() => isAdminCallback(setAdmin));\r\n        isAdminCallback(setAdmin);\r\n\r\n        return(() => {\r\n            authService.unsubscribe(subscribeId);\r\n        })\r\n    }, [isAdminCallback])\r\n\r\n    if(admin){\r\n        return (\r\n            <div>\r\n                <AddLot/>\r\n            </div>\r\n        )\r\n    }\r\n    if(admin === false){\r\n        return <CustomMessagePage message={\"You dont have access to this component!\"}/>\r\n    }\r\n    else{\r\n        return <LoadingPage/>;\r\n    }\r\n}\r\n","import React, {useCallback, useEffect, useMemo, useState} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {winnersControllerPath} from \"../LotConstants\";\r\nimport LoadingPage from \"../LoadingPage/LoadingPage\";\r\nimport classNames from \"classnames\";\r\nimport {hideWinnersLoader, showWinnersLoader} from \"../../redux/actions\";\r\nimport CustomMessagePage from \"../CustomMessagePage/CustomMessagePage\";\r\nimport {Link, NavLink} from \"react-router-dom\";\r\n\r\nexport default function Winners(){\r\n    const [winners, setWinners] = useState([]);\r\n    const dispatch = useDispatch();\r\n    const loading = useSelector(state => state.app.winnersLoading);\r\n\r\n    const getWinners = useCallback(async () => {\r\n        dispatch(showWinnersLoader());\r\n        const response = await fetch(winnersControllerPath);\r\n        const json = await response.json();\r\n        dispatch(hideWinnersLoader());\r\n        setWinners(json);\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        getWinners();\r\n    }, [])\r\n\r\n    const classes = useMemo(() => {\r\n        return {\r\n            mainClasses : classNames(\"main\", \"container-border\", \"main__winners\"),\r\n            tableClasses : classNames(\"table\")\r\n        }\r\n    }, []);\r\n\r\n    if(loading){\r\n        return <LoadingPage/>\r\n    }\r\n    if(!winners.length){\r\n        return <CustomMessagePage message={\"No information about the lot winners!\"}/>\r\n    }\r\n\r\n    return (\r\n        <div className={classes.mainClasses}>\r\n            <table className={classes.tableClasses}>\r\n                <thead className=\"table__header\">\r\n                    <tr>\r\n                        <th className=\"table__header-item\">Lot ID</th>\r\n                        <th className=\"table__header-item\">Lot Name</th>\r\n                        <th className=\"table__header-item\">Winner Page</th>\r\n                        <th className=\"table__header-item\">Sold Price</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"table__body\">\r\n                {winners.map(winner => {\r\n                    return (\r\n                        <tr key={winner.id}>\r\n                            <th className=\"table__item\">{winner.id}</th>\r\n                            <th className=\"table__item\">{winner.lotName}</th>\r\n                            <th className=\"table__item\">\r\n                                {\r\n                                    <NavLink className={classes.lotNameClasses} to={`/users/${winner.userId}`}  tag={Link}>\r\n                                        {winner.ownerName}\r\n                                    </NavLink> ?? \"-\"\r\n                                }\r\n                            </th>\r\n                            <th className=\"table__item\">{winner.priceUsd} USD</th>\r\n                        </tr>\r\n                    )\r\n                })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}","import React, {useCallback, useEffect, useMemo, useState} from \"react\"\r\nimport {userControllerPath} from \"../LotConstants\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {hideUserLoader, showUserLoader} from \"../../redux/actions\";\r\nimport LoadingPage from \"../LoadingPage/LoadingPage\";\r\nimport CustomMessagePage from \"../CustomMessagePage/CustomMessagePage\";\r\nimport classNames from \"classnames\";\r\n\r\nexport default function UserPage(props){\r\n    const userId = props.match.params.id;\r\n    const [user, setUser] = useState(null);\r\n    const [error, setError] = useState(null);\r\n    const dispatch = useDispatch();\r\n    const loading = useSelector(state => state.app.userLoading);\r\n\r\n    const fetchUser = useCallback(async (userId) => {\r\n        dispatch(showUserLoader());\r\n        const response = await fetch(`${userControllerPath}/${userId}`);\r\n        if(response.ok){\r\n            const json = await response.json();\r\n            setUser(json);\r\n        }\r\n        else{\r\n            setError(\"Bad Request!\");\r\n        }\r\n        dispatch(hideUserLoader());\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        fetchUser(userId);\r\n    }, [userId])\r\n\r\n    const classes = useMemo(() => {\r\n        return {\r\n            mainClasses : classNames(\"main\", \"container-border\", \"user-page\"),\r\n            tableClasses : classNames(\"table\", \"user-page__table\")\r\n        }\r\n    }, [])\r\n\r\n    if(loading){\r\n        return <LoadingPage/>\r\n    }\r\n    else if(error){\r\n        return <CustomMessagePage message={error}/>\r\n    }\r\n    else if(user){\r\n        return(\r\n            <div className={classes.mainClasses}>\r\n                <div className=\"user-page__item\"><span className=\"user-page__item-name\">First Name:</span> {user.firstName}</div>\r\n                <div className=\"user-page__item\"><span className=\"user-page__item-name\">Last Name:</span> {user.lastName}</div>\r\n                <div className=\"user-page__item\"><span className=\"user-page__item-name\">ID:</span> {user.id}</div>\r\n                <div className=\"user-page__item\"><span className=\"user-page__item-name\">Email:</span> {user.email}</div>\r\n                <div>\r\n                    <span className=\"user-page__item-name\">Won Lots: </span>\r\n                    <table className={classes.tableClasses}>\r\n                        <thead className=\"table__header\">\r\n                        <tr>\r\n                            <th className=\"table__header-item\">Lot Name</th>\r\n                            <th className=\"table__header-item\">Sold Price</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody className=\"table__body\">\r\n                        {user.winningLots.map(lot => {\r\n                            return (\r\n                                <tr key={lot.id}>\r\n                                    <th className=\"table__item\">{lot.lotName}</th>\r\n                                    <th className=\"table__item\">{lot.priceUsd} USD</th>\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return null;\r\n}","import React, { Component } from 'react';\r\nimport { Route } from 'react-router';\r\n\r\nimport ApiAuthorizationRoutes from './components/api-authorization/ApiAuthorizationRoutes';\r\nimport { ApplicationPaths } from './components/api-authorization/ApiAuthorizationConstants';\r\nimport { Layout } from './components/Layout';\r\nimport './styles.css'\r\nimport AuthorizeRoute from \"./components/api-authorization/AuthorizeRoute\";\r\nimport classNames from 'classnames'\r\nimport LotsPlug from \"./components/LotsPlug/LotsPlug\";\r\nimport AddLotPage from \"./components/AddLotPage/AddLotPage\";\r\nimport Winners from \"./components/Winners/Winners\";\r\nimport UserPage from \"./components/UserPage/UserPage\";\r\n\r\nexport default class App extends Component {\r\n    static displayName = App.name;\r\n\r\n    render () {\r\n        const containerClasses = classNames(\"casing\", \"casing__body\");\r\n        return (\r\n            <div className={containerClasses}>\r\n                <Layout className='container'>\r\n                    <Route exact path='/' component={LotsPlug} />\r\n                    <Route exact path='/users/:id' component={UserPage} />\r\n                    <Route path='/lots/:id?' component={LotsPlug}/>\r\n                    <Route path='/winners' component={Winners}/>\r\n                    <AuthorizeRoute path='/new-lot' component={AddLotPage}/>\r\n                    <Route path={ApplicationPaths.ApiAuthorizationPrefix} component={ApiAuthorizationRoutes} />\r\n                </Layout>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import {UPDATE_LOT, FETCH_LOT, FETCH_LOTS, UPDATE_LOT_PRICE, DELETE_LOT, UPDATE_LOT_ACTIVITY, CLOSE_LOT} from \"./types\";\r\n\r\nconst initialState = {\r\n    lots : [],\r\n    activePage : 1,\r\n    totalPages : 0,\r\n    showSold : false,\r\n    showUnsold : true\r\n}\r\n\r\nexport const lotsReducer = (state = initialState, action) => {\r\n    switch (action.type){\r\n        case FETCH_LOTS:\r\n            return {\r\n                ...state,\r\n                lots: action.payload.lots,\r\n                totalPages: action.payload.pagesCount,\r\n                activePage: action.payload.activePage,\r\n                showSold: action.payload.showSold,\r\n                showUnsold: action.payload.showUnsold\r\n            };\r\n        case FETCH_LOT:\r\n            return {...state, lots : state.lots.concat(action.payload)};\r\n        case UPDATE_LOT:\r\n            return {...state, lots : state.lots.map(lot=> {\r\n                if(lot.id === action.payload.id){\r\n                    return action.payload;\r\n                }\r\n                return lot;\r\n            })};\r\n        case UPDATE_LOT_PRICE:\r\n            return {...state, lots: state.lots.map(lot => {\r\n                if(lot.id === action.payload.id){\r\n                    return {...lot, priceUsd: action.payload.price}\r\n                }\r\n                return lot;\r\n                })}\r\n        case UPDATE_LOT_ACTIVITY:\r\n            return {...state, lots: state.lots.map(lot => {\r\n                    if(lot.id === action.payload.id){\r\n                        return {...lot, isActive: action.payload.isActive}\r\n                    }\r\n                    return lot;\r\n                })}\r\n        case CLOSE_LOT:\r\n            return {...state, lots: state.lots.map(lot => {\r\n                    if(lot.id === action.payload.id){\r\n                        return {...lot, isActive: false, isSold: true}\r\n                    }\r\n                    return lot;\r\n                })}\r\n        case DELETE_LOT:\r\n            return {...state, lots: state.lots.filter(lot => lot.id !== action.payload.id)}\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    HIDE_LOT_LOADER, HIDE_USER_LOADER,\r\n    HIDE_WINNERS_LOADER,\r\n    SHOW_LOT_LOADER, SHOW_USER_LOADER,\r\n    SHOW_WINNERS_LOADER\r\n} from \"./types\";\r\n\r\nconst initialState = {\r\n    lotLoading: false,\r\n    winnersLoading: false,\r\n    userLoading : false,\r\n}\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SHOW_LOT_LOADER:\r\n            return {...state, lotLoading: true}\r\n        case HIDE_LOT_LOADER:\r\n            return {...state, lotLoading: false}\r\n        case SHOW_WINNERS_LOADER:\r\n            return {...state, winnersLoading: true}\r\n        case HIDE_WINNERS_LOADER:\r\n            return {...state, winnersLoading: false}\r\n        case SHOW_USER_LOADER:\r\n            return {...state, userLoading: true}\r\n        case HIDE_USER_LOADER:\r\n            return {...state, userLoading: false}\r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from \"redux\";\r\nimport {lotsReducer} from \"./lotsReducer\";\r\nimport {appReducer} from \"./appReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    lotsInfo : lotsReducer,\r\n    app: appReducer\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport {Provider} from \"react-redux\";\r\nimport {applyMiddleware, compose, createStore} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport App from './App';\r\nimport {rootReducer} from \"./redux/rootReducer\";\r\n//import registerServiceWorker from './registerServiceWorker';\r\n\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\r\nconst rootElement = document.getElementById('root');\r\nconst store = createStore(rootReducer, compose(\r\n    applyMiddleware(\r\n        thunk\r\n    ),\r\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n));\r\n\r\nReactDOM.render(\r\n    <Provider store={store }>\r\n        <BrowserRouter basename={baseUrl}>\r\n            <App/>\r\n        </BrowserRouter>\r\n    </Provider>,\r\n  rootElement);\r\n\r\n// Uncomment the line above that imports the registerServiceWorker function\r\n// and the line below to register the generated service worker.\r\n// By default create-react-app includes a service worker to improve the\r\n// performance of the application by caching static assets. This service\r\n// worker can interfere with the Identity UI, so it is\r\n// disabled by default when Identity is being used.\r\n//\r\n//registerServiceWorker();\r\n\r\n"],"sourceRoot":""}