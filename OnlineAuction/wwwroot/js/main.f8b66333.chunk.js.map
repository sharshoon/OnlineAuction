{"version":3,"sources":["components/api-authorization/ApiAuthorizationConstants.js","components/Loader/Loader.js","components/LoadingPage/LoadingPage.js","components/api-authorization/AuthorizeService.js","components/Login/LoginForm.js","components/api-authorization/Login.js","components/CustomMessagePage/CustomMessagePage.js","components/api-authorization/Logout.js","components/api-authorization/ApiAuthorizationRoutes.js","components/api-authorization/LoginMenu.js","components/NavMenu/NavMenu.js","components/LotConstants.js","components/Footer/Footer.js","components/Layout.js","components/LotPreview/LotPreview.js","redux/types.js","redux/actions.js","components/Pagination/Pagination.js","components/Switcher/Switcher.js","components/Lots/Lots.js","components/Home/Home.js","components/api-authorization/AuthorizeRoute.js","components/Timer/getTime.js","components/Timer/openHubConnection.js","components/Timer/Timer.js","components/IncreaseRateButtons/IncreaseRateButtons.js","components/Lot/classes.js","components/Lot/Lot.js","components/LotsPlug/LotsPlug.js","components/FormErrors/FormErrors.js","components/AddLotTextInput/AddLotTextInput.js","components/ResultTextBlock/ResultTextBlock.js","components/AddLot/inputCheckingFunctions.js","components/AddLot/tryAddLot.js","components/AddLot/addLotClasses.js","components/AddLot/fileSelectedHandler.js","components/AddLot/checkImageSize.js","components/AddLot/checkParametersValidity.js","components/AddLot/AddLot.js","components/AddLotPage/AddLotPage.js","components/AdminLotPreview/startAfter.js","components/AdminLotPreview/classes.js","components/AdminLotPreview/deleteLot.js","components/AdminLotPreview/AdminLotPreview.js","components/AdminLotPreview/handleStartAfter.js","components/AdminPanel/AdminPanel.js","components/AdminPanelPage/AdminPanelPage.js","components/Winners/Winners.js","App.js","redux/lotsReducer.js","redux/appReducer.js","redux/rootReducer.js","index.js"],"names":["ApplicationName","QueryParameterNames","LogoutActions","LoginActions","prefix","ApplicationPaths","DefaultLoginRedirectPath","ApiAuthorizationClientConfigurationUrl","ApiAuthorizationPrefix","Login","LoginFailed","LoginCallback","Register","Profile","LogOut","LoggedOut","LogOutCallback","IdentityRegisterPath","IdentityManagePath","UserRoles","Loader","className","LoadingPage","classes","classNames","authService","_callbacks","_nextSubscriptionId","_user","_isAuthenticated","_popUpDisabled","this","getUser","user","profile","ensureUserManagerInitialized","userManager","access_token","state","signinRedirect","createArguments","redirect","console","log","error","url","signinCallback","updateState","success","Error","signoutPopup","undefined","signoutRedirect","signoutCallback","response","data","notifySubscribers","callback","push","subscription","subscriptionId","subscriptionIndex","map","element","index","found","filter","length","splice","i","useReplaceToNavigate","message","status","AuthenticationResultStatus","Fail","Success","Redirect","fetch","ok","json","settings","automaticSilentRenew","includeIdTokenInSilentRenew","userStore","WebStorageStateStore","UserManager","events","addUserSignedOut","a","removeUser","role","Array","includes","LoginForm","props","action","login","processLoginCallback","URLSearchParams","window","location","search","get","setState","redirectToProfile","redirectToRegister","returnUrl","signIn","result","navigateToReturnUrl","href","completeSignIn","getReturnUrl","fromQuery","startsWith","origin","redirectToApiAuthorizationPath","encodeURI","apiAuthorizationPath","redirectUrl","replace","Component","CustomMessagePage","pageClasses","useMemo","Logout","isReady","authenticated","history","local","logout","processLogoutCallback","populateAuthenticationState","isAuthenticated","signOut","completeSignOut","ApiAuthorizationRoutes","path","render","loginAction","logoutAction","name","LoginMenu","userName","_subscription","subscribe","populateState","unsubscribe","Promise","all","profilePath","logoutPath","pathname","authenticatedView","registerPath","loginPath","anonymousView","NavItem","NavLink","tag","Link","to","NavMenu","collapsed","isAdmin","titleClasses","headerClasses","toggleNavbar","bind","hasRole","buttonsWrapperClasses","Navbar","Container","NavbarBrand","onClick","displayName","lotControllerPath","lotHubPath","iconsPath","Footer","footerClasses","cardNameClasses","snInfoClasses","src","alt","Layout","children","LotPreview","lot","lotPreviewClasses","lotPreviewInfo","lotNameClasses","buttonClasses","imagePath","id","isSold","description","FETCH_LOTS","FETCH_LOT","UPDATE_LOT","UPDATE_LOT_PRICE","UPDATE_LOT_ACTIVITY","CLOSE_LOT","DELETE_LOT","SHOW_LOT_LOADER","HIDE_LOT_LOADER","SHOW_WINNERS_LOADER","HIDE_WINNERS_LOADER","fetchLots","page","onlyUnsold","dispatch","showLoader","type","payload","activePage","hideLoader","updateLotPrice","price","Pagination","pageCount","items","useDispatch","lotsInfo","useSelector","totalPages","Switcher","checked","onChange","Lots","loading","app","lotLoading","lotsWrapperClasses","useEffect","lots","Home","AuthorizeRoute","ready","authenticationChanged","link","document","createElement","protocol","host","hash","component","rest","renderTime","dimension","time","timerItemClasses","getTimeMinutes","openHubConnection","hubConnection","signalR","withUrl","build","on","parseInt","updateLot","isActive","start","Timer","useState","remainSeconds","setSeconds","useRef","isMountedRef","timerClasses","current","seconds","updateLotActivity","priceUsd","closeLot","lotMessage","IncreaseRateButtons","find","isUser","setUser","setConnection","useCallback","getAccessToken","token","accessTokenFactory","info","JSON","parse","lotId","successed","alert","updatePrice","percentage","invoke","minPriceUsd","getNewPrice","Math","trunc","disabled","lotClasses","soldLotClasses","notActiveClasses","Lot","fetchLot","lotInfoClasses","LotsPlug","match","params","FormErrors","errors","AddLotTextInput","labelText","checkingFunctions","formClasses","inputClasses","handleChangeText","event","func","target","value","onBlur","required","ResultTextBlock","descriptionCheckingFunctions","functions","nameCheckingFunctions","minPriceCheckingFunctions","isNaN","durationCheckingFunctions","TryAddLot","formData","setAddingResult","method","headers","body","mainClasses","buttonWrapperClasses","fileSelectedHandler","setFile","setFileErrors","file","reader","FileReader","readAsDataURL","onload","e","image","Image","height","width","checkImageSize","files","checkParametersValidity","fields","field","AddLot","addingResult","lotName","setLotName","lotDescription","setDescription","lotMinPrice","setMinPrice","lotDuration","setDuration","fileErrors","uploadDataCallback","FormData","append","onSubmit","preventDefault","htmlFor","AddLotPage","admin","setAdmin","isAdminCallback","startAfter","nextLot","setOperationResult","setNextLot","toString","previousLotId","stringify","visible","adminLotPreviewClasses","buttonSetNexLotClasses","buttonWarningClasses","setNextLotInputClasses","deleteLot","text","deleteLotAction","AdminLotPreview","connection","inputWrapperClasses","buttonNextLotClasses","startLotCallback","startLotConnection","then","deleteLotCallback","handleStartAfter","nextLotId","AdminPanel","operationResult","setResult","AdminPanelPage","CheckAdminRights","Winners","winners","setWinners","winnersLoading","getWinners","tableClasses","winner","userId","ownerName","App","containerClasses","exact","initialState","rootReducer","combineReducers","pagesCount","concat","baseUrl","getElementsByTagName","getAttribute","rootElement","getElementById","store","createStore","compose","applyMiddleware","thunk","ReactDOM","basename"],"mappings":"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","file":"static/js/main.f8b66333.chunk.js","sourcesContent":["export const ApplicationName = 'OnlineAuction';\r\n\r\nexport const QueryParameterNames = {\r\n  ReturnUrl: 'returnUrl',\r\n  Message: 'message'\r\n};\r\n\r\nexport const LogoutActions = {\r\n  LogoutCallback: 'logout-callback',\r\n  Logout: 'logout',\r\n  LoggedOut: 'logged-out'\r\n};\r\n\r\nexport const LoginActions = {\r\n  Login: 'login',\r\n  LoginCallback: 'login-callback',\r\n  LoginFailed: 'login-failed',\r\n  Profile: 'profile',\r\n  Register: 'register'\r\n};\r\n\r\nconst prefix = '/authentication';\r\n\r\nexport const ApplicationPaths = {\r\n  DefaultLoginRedirectPath: '/',\r\n  ApiAuthorizationClientConfigurationUrl: `/_configuration/${ApplicationName}`,\r\n  ApiAuthorizationPrefix: prefix,\r\n  Login: `${prefix}/${LoginActions.Login}`,\r\n  LoginFailed: `${prefix}/${LoginActions.LoginFailed}`,\r\n  LoginCallback: `${prefix}/${LoginActions.LoginCallback}`,\r\n  Register: `${prefix}/${LoginActions.Register}`,\r\n  Profile: `${prefix}/${LoginActions.Profile}`,\r\n  LogOut: `${prefix}/${LogoutActions.Logout}`,\r\n  LoggedOut: `${prefix}/${LogoutActions.LoggedOut}`,\r\n  LogOutCallback: `${prefix}/${LogoutActions.LogoutCallback}`,\r\n  IdentityRegisterPath: '/Identity/Account/Register',\r\n  IdentityManagePath: '/Identity/Account/Manage'\r\n};\r\n\r\nexport const UserRoles = {\r\n  Administrator: 'admin',\r\n  User: 'user'\r\n};\r\n","import React from 'react'\r\n\r\nexport default function Loader(){\r\n    return (<div className=\"loader\"/>)\r\n}","import React from 'react'\r\nimport Loader from \"../Loader/Loader\";\r\nimport classNames from \"classnames\";\r\n\r\nexport default function LoadingPage(){\r\n    const classes = classNames(\"main\", \"main__loading-page\", \"loading-page\", \"container-border\");\r\n    return(\r\n        <div className={classes}>\r\n            <Loader/>\r\n        </div>\r\n    )\r\n}","import { UserManager, WebStorageStateStore } from 'oidc-client';\r\nimport {ApplicationPaths, ApplicationName} from './ApiAuthorizationConstants';\r\nimport LoadingPage from \"../LoadingPage/LoadingPage\";\r\nimport {Login} from \"./Login\";\r\nimport {Redirect} from \"react-router\";\r\nimport React from \"react\";\r\n\r\nexport class AuthorizeService {\r\n    _callbacks = [];\r\n    _nextSubscriptionId = 0;\r\n    _user = null;\r\n    _isAuthenticated = false;\r\n\r\n    // By default pop ups are disabled because they don't work properly on Edge.\r\n    // If you want to enable pop up authentication simply set this flag to false.\r\n    _popUpDisabled = true;\r\n\r\n    async isAuthenticated() {\r\n        const user = await this.getUser();\r\n        return !!user;\r\n    }\r\n\r\n    async getUser() {\r\n        if (this._user && this._user.profile) {\r\n            return this._user.profile;\r\n        }\r\n\r\n        await this.ensureUserManagerInitialized();\r\n        const user = await this.userManager.getUser();\r\n        return user && user.profile;\r\n    }\r\n\r\n    async getAccessToken() {\r\n        await this.ensureUserManagerInitialized();\r\n        const user = await this.userManager.getUser();\r\n        return user && user.access_token;\r\n    }\r\n\r\n    async signIn(state) {\r\n        await this.ensureUserManagerInitialized();\r\n        try {\r\n            await this.userManager.signinRedirect({...this.createArguments(state)});\r\n            return this.redirect();\r\n        } catch (redirectError) {\r\n            console.log(\"Redirect authentication error: \", redirectError);\r\n            return this.error(redirectError);\r\n        }\r\n    }\r\n\r\n    async completeSignIn(url) {\r\n        try {\r\n            await this.ensureUserManagerInitialized();\r\n            const user = await this.userManager.signinCallback(url);\r\n            this.updateState(user);\r\n            return this.success(user && user.state);\r\n        } catch (error) {\r\n            console.log('There was an error signing in: ', error);\r\n            return this.error('There was an error signing in.');\r\n        }\r\n    }\r\n\r\n    // We try to sign out the user in two different ways:\r\n    // 1) We try to do a sign-out using a PopUp Window. This might fail if there is a\r\n    //    Pop-Up blocker or the user has disabled PopUps.\r\n    // 2) If the method above fails, we redirect the browser to the IdP to perform a traditional\r\n    //    post logout redirect flow.\r\n    async signOut(state) {\r\n        await this.ensureUserManagerInitialized();\r\n        try {\r\n            if (this._popUpDisabled) {\r\n                throw new Error('Popup disabled. Change \\'AuthorizeService.js:AuthorizeService._popupDisabled\\' to false to enable it.')\r\n            }\r\n\r\n            await this.userManager.signoutPopup(this.createArguments());\r\n            this.updateState(undefined);\r\n            return this.success(state);\r\n        } catch (popupSignOutError) {\r\n            console.log(\"Popup signout error: \", popupSignOutError);\r\n            try {\r\n                await this.userManager.signoutRedirect(this.createArguments(state));\r\n                return this.redirect();\r\n            } catch (redirectSignOutError) {\r\n                console.log(\"Redirect signout error: \", redirectSignOutError);\r\n                return this.error(redirectSignOutError);\r\n            }\r\n        }\r\n    }\r\n\r\n    async completeSignOut(url) {\r\n        await this.ensureUserManagerInitialized();\r\n        try {\r\n            const response = await this.userManager.signoutCallback(url);\r\n            this.updateState(null);\r\n            return this.success(response && response.data);\r\n        } catch (error) {\r\n            console.log(`There was an error trying to log out '${error}'.`);\r\n            return this.error(error);\r\n        }\r\n    }\r\n\r\n    updateState(user) {\r\n        this._user = user;\r\n        this._isAuthenticated = !!this._user;\r\n        this.notifySubscribers();\r\n    }\r\n\r\n    subscribe(callback) {\r\n        this._callbacks.push({ callback, subscription: this._nextSubscriptionId++ });\r\n        return this._nextSubscriptionId - 1;\r\n    }\r\n\r\n    unsubscribe(subscriptionId) {\r\n        const subscriptionIndex = this._callbacks\r\n            .map((element, index) => element.subscription === subscriptionId ? { found: true, index } : { found: false })\r\n            .filter(element => element.found === true);\r\n        if (subscriptionIndex.length !== 1) {\r\n            throw new Error(`Found an invalid number of subscriptions ${subscriptionIndex.length}`);\r\n        }\r\n\r\n        this._callbacks.splice(subscriptionIndex[0].index, 1);\r\n    }\r\n\r\n    notifySubscribers() {\r\n        for (let i = 0; i < this._callbacks.length; i++) {\r\n            const callback = this._callbacks[i].callback;\r\n            callback();\r\n        }\r\n    }\r\n\r\n    createArguments(state) {\r\n        return { useReplaceToNavigate: true, data: state };\r\n    }\r\n\r\n    error(message) {\r\n        return { status: AuthenticationResultStatus.Fail, message };\r\n    }\r\n\r\n    success(state) {\r\n        return { status: AuthenticationResultStatus.Success, state };\r\n    }\r\n\r\n    redirect() {\r\n        return { status: AuthenticationResultStatus.Redirect };\r\n    }\r\n\r\n    async ensureUserManagerInitialized() {\r\n        if (this.userManager !== undefined) {\r\n            return;\r\n        }\r\n\r\n        let response = await fetch(ApplicationPaths.ApiAuthorizationClientConfigurationUrl);\r\n        if (!response.ok) {\r\n            throw new Error(`Could not load settings for '${ApplicationName}'`);\r\n        }\r\n\r\n        let settings = await response.json();\r\n        settings.automaticSilentRenew = true;\r\n        settings.includeIdTokenInSilentRenew = true;\r\n        settings.userStore = new WebStorageStateStore({\r\n            prefix: ApplicationName\r\n        });\r\n\r\n        this.userManager = new UserManager(settings);\r\n\r\n        this.userManager.events.addUserSignedOut(async () => {\r\n            await this.userManager.removeUser();\r\n            this.updateState(undefined);\r\n        });\r\n    }\r\n\r\n    async hasRole(role) {\r\n        const user = await this.getUser();\r\n\r\n        if (user) {\r\n            if (user.role instanceof Array) // if it has many roles role is an array\r\n                return user.role.includes(role); // beware that UserRoles apears as undefined when debugging, though it works fine\r\n            else // otherwise it is a string\r\n                return user.role === role;\r\n        }\r\n        else\r\n            return false;\r\n    }\r\n\r\n    static get instance() { return authService }\r\n}\r\n\r\nconst authService = new AuthorizeService();\r\n\r\nexport default authService;\r\n\r\nexport const AuthenticationResultStatus = {\r\n    Redirect: 'redirect',\r\n    Success: 'success',\r\n    Fail: 'fail'\r\n};\r\n","import React from \"react\"\r\n\r\nexport default function LoginForm(){\r\n    return (\"Login Page\")\r\n}","import React from 'react'\r\nimport { Component } from 'react';\r\nimport authService from './AuthorizeService';\r\nimport { AuthenticationResultStatus } from './AuthorizeService';\r\nimport { LoginActions, QueryParameterNames, ApplicationPaths } from './ApiAuthorizationConstants';\r\nimport LoadingPage from \"../LoadingPage/LoadingPage\";\r\nimport LoginForm from \"../Login/LoginForm\";\r\nimport {Redirect} from \"react-router\";\r\n\r\n// The main responsibility of this component is to handle the user's login process.\r\n// This is the starting point for the login process. Any component that needs to authenticate\r\n// a user can simply perform a redirect to this component with a returnUrl query parameter and\r\n// let the component perform the login and return back to the return url.\r\nexport class Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            message: undefined\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const action = this.props.action;\r\n        switch (action) {\r\n            case LoginActions.Login:\r\n                // this.login(this.getReturnUrl());\r\n                this.login(\"/\");\r\n                break;\r\n            case LoginActions.LoginCallback:\r\n                this.processLoginCallback();\r\n                break;\r\n            case LoginActions.LoginFailed:\r\n                const params = new URLSearchParams(window.location.search);\r\n                const error = params.get(QueryParameterNames.Message);\r\n                this.setState({ message: error });\r\n                break;\r\n            case LoginActions.Profile:\r\n                this.redirectToProfile();\r\n                break;\r\n            case LoginActions.Register:\r\n                this.redirectToRegister();\r\n                break;\r\n            default:\r\n                throw new Error(`Invalid action '${action}'`);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const action = this.props.action;\r\n        const { message } = this.state;\r\n\r\n        if (!!message) {\r\n            return <div>{message}</div>\r\n        } else {\r\n            switch (action) {\r\n                case LoginActions.Login:\r\n                    return (<LoadingPage/>);\r\n                case LoginActions.LoginCallback:\r\n                    return (<LoadingPage/>);\r\n                case LoginActions.Profile:\r\n                case LoginActions.Register:\r\n                    return (<LoadingPage/>);\r\n                default:\r\n                    throw new Error(`Invalid action '${action}'`);\r\n            }\r\n        }\r\n    }\r\n\r\n    async login(returnUrl) {\r\n        const state = { returnUrl };\r\n        const result = await authService.signIn(state);\r\n        switch (result.status) {\r\n            case AuthenticationResultStatus.Redirect:\r\n                break;\r\n            case AuthenticationResultStatus.Success:\r\n                await this.navigateToReturnUrl(returnUrl);\r\n                break;\r\n            case AuthenticationResultStatus.Fail:\r\n                this.setState({ message: result.message });\r\n                break;\r\n            default:\r\n                throw new Error(`Invalid status result ${result.status}.`);\r\n        }\r\n    }\r\n\r\n    async processLoginCallback() {\r\n        const url = window.location.href;\r\n        const result = await authService.completeSignIn(url);\r\n        switch (result.status) {\r\n            case AuthenticationResultStatus.Redirect:\r\n                // There should not be any redirects as the only time completeSignIn finishes\r\n                // is when we are doing a redirect sign in flow.\r\n                throw new Error('Should not redirect.');\r\n            case AuthenticationResultStatus.Success:\r\n                await this.navigateToReturnUrl(this.getReturnUrl(result.state));\r\n                break;\r\n            case AuthenticationResultStatus.Fail:\r\n                this.setState({ message: result.message });\r\n                break;\r\n            default:\r\n                throw new Error(`Invalid authentication result status '${result.status}'.`);\r\n        }\r\n    }\r\n\r\n    getReturnUrl(state) {\r\n        const params = new URLSearchParams(window.location.search);\r\n        const fromQuery = params.get(QueryParameterNames.ReturnUrl);\r\n        if (fromQuery && !fromQuery.startsWith(`${window.location.origin}/`)) {\r\n            // This is an extra check to prevent open redirects.\r\n            throw new Error(\"Invalid return url. The return url needs to have the same origin as the current page.\")\r\n        }\r\n        return (state && state.returnUrl) || fromQuery || `${window.location.origin}/`;\r\n    }\r\n\r\n    redirectToRegister() {\r\n        this.redirectToApiAuthorizationPath(`${ApplicationPaths.IdentityRegisterPath}?${QueryParameterNames.ReturnUrl}=${encodeURI(ApplicationPaths.Login)}`);\r\n    }\r\n\r\n    redirectToProfile() {\r\n        this.redirectToApiAuthorizationPath(ApplicationPaths.IdentityManagePath);\r\n    }\r\n\r\n    redirectToApiAuthorizationPath(apiAuthorizationPath) {\r\n        const redirectUrl = `${window.location.origin}${apiAuthorizationPath}`;\r\n        // It's important that we do a replace here so that when the user hits the back arrow on the\r\n        // browser he gets sent back to where it was on the app instead of to an endpoint on this\r\n        // component.\r\n        window.location.replace(redirectUrl);\r\n    }\r\n\r\n    navigateToReturnUrl(returnUrl) {\r\n        // It's important that we do a replace here so that we remove the callback uri with the\r\n        // fragment containing the tokens from the browser history.\r\n        window.location.replace(returnUrl);\r\n    }\r\n}\r\n","import React, {useMemo} from \"react\"\r\nimport classNames from \"classnames\"\r\n\r\nexport default function CustomMessagePage({message}){\r\n    const pageClasses = useMemo(() => {\r\n        return classNames(\"main\", \"main__custom-message-page\",\"container-border\");\r\n    }, [])\r\n\r\n    return(\r\n        <div className={pageClasses}>\r\n            {message}\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { Component } from 'react';\r\nimport authService from './AuthorizeService';\r\nimport { AuthenticationResultStatus } from './AuthorizeService';\r\nimport { QueryParameterNames, LogoutActions, ApplicationPaths } from './ApiAuthorizationConstants';\r\nimport LoadingPage from \"../LoadingPage/LoadingPage\";\r\nimport CustomMessagePage from \"../CustomMessagePage/CustomMessagePage\";\r\n\r\n// The main responsibility of this component is to handle the user's logout process.\r\n// This is the starting point for the logout process, which is usually initiated when a\r\n// user clicks on the logout button on the LoginMenu component.\r\nexport class Logout extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            message: undefined,\r\n            isReady: false,\r\n            authenticated: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const action = this.props.action;\r\n        switch (action) {\r\n            case LogoutActions.Logout:\r\n                if (!!window.history.state.state.local) {\r\n                    this.logout(this.getReturnUrl());\r\n                } else {\r\n                    // This prevents regular links to <app>/authentication/logout from triggering a logout\r\n                    this.setState({ isReady: true, message: \"The logout was not initiated from within the page.\" });\r\n                }\r\n                break;\r\n            case LogoutActions.LogoutCallback:\r\n                this.processLogoutCallback();\r\n                break;\r\n            case LogoutActions.LoggedOut:\r\n                this.setState({ isReady: true, message: \"You successfully logged out!\" });\r\n                break;\r\n            default:\r\n                throw new Error(`Invalid action '${action}'`);\r\n        }\r\n\r\n        this.populateAuthenticationState();\r\n    }\r\n\r\n    render() {\r\n        const { isReady, message } = this.state;\r\n        if (!isReady) {\r\n            return <div></div>\r\n        }\r\n        if (!!message) {\r\n            return (<CustomMessagePage message={message}/>)\r\n        } else {\r\n            const action = this.props.action;\r\n            switch (action) {\r\n                case LogoutActions.Logout:\r\n                    return (<LoadingPage/>);\r\n                case LogoutActions.LogoutCallback:\r\n                    return (<LoadingPage/>);\r\n                case LogoutActions.LoggedOut:\r\n                    return (<div>{message}</div>);\r\n                default:\r\n                    throw new Error(`Invalid action '${action}'`);\r\n            }\r\n        }\r\n    }\r\n\r\n    async logout(returnUrl) {\r\n        const state = { returnUrl };\r\n        const isauthenticated = await authService.isAuthenticated();\r\n        if (isauthenticated) {\r\n            const result = await authService.signOut(state);\r\n            switch (result.status) {\r\n                case AuthenticationResultStatus.Redirect:\r\n                    break;\r\n                case AuthenticationResultStatus.Success:\r\n                    await this.navigateToReturnUrl(returnUrl);\r\n                    break;\r\n                case AuthenticationResultStatus.Fail:\r\n                    this.setState({ message: result.message });\r\n                    break;\r\n                default:\r\n                    throw new Error(\"Invalid authentication result status.\");\r\n            }\r\n        } else {\r\n            this.setState({ message: \"You successfully logged out!\" });\r\n        }\r\n    }\r\n\r\n    async processLogoutCallback() {\r\n        const url = window.location.href;\r\n        const result = await authService.completeSignOut(url);\r\n        switch (result.status) {\r\n            case AuthenticationResultStatus.Redirect:\r\n                // There should not be any redirects as the only time completeAuthentication finishes\r\n                // is when we are doing a redirect sign in flow.\r\n                throw new Error('Should not redirect.');\r\n            case AuthenticationResultStatus.Success:\r\n                await this.navigateToReturnUrl(this.getReturnUrl(result.state));\r\n                break;\r\n            case AuthenticationResultStatus.Fail:\r\n                this.setState({ message: result.message });\r\n                break;\r\n            default:\r\n                throw new Error(\"Invalid authentication result status.\");\r\n        }\r\n    }\r\n\r\n    async populateAuthenticationState() {\r\n        const authenticated = await authService.isAuthenticated();\r\n        this.setState({ isReady: true, authenticated });\r\n    }\r\n\r\n    getReturnUrl(state) {\r\n        const params = new URLSearchParams(window.location.search);\r\n        const fromQuery = params.get(QueryParameterNames.ReturnUrl);\r\n        if (fromQuery && !fromQuery.startsWith(`${window.location.origin}/`)) {\r\n            // This is an extra check to prevent open redirects.\r\n            throw new Error(\"Invalid return url. The return url needs to have the same origin as the current page.\")\r\n        }\r\n        return (state && state.returnUrl) ||\r\n            fromQuery ||\r\n            `${window.location.origin}${ApplicationPaths.LoggedOut}`;\r\n    }\r\n\r\n    navigateToReturnUrl(returnUrl) {\r\n        return window.location.replace(returnUrl);\r\n    }\r\n}\r\n","import React, { Component, Fragment } from 'react';\r\nimport { Route } from 'react-router';\r\nimport { Login } from './Login'\r\nimport { Logout } from './Logout'\r\nimport { ApplicationPaths, LoginActions, LogoutActions } from './ApiAuthorizationConstants';\r\n\r\nexport default class ApiAuthorizationRoutes extends Component {\r\n\r\n  render () {\r\n    return(\r\n      <Fragment>\r\n          <Route path={ApplicationPaths.Login} render={() => loginAction(LoginActions.Login)} />\r\n          <Route path={ApplicationPaths.LoginFailed} render={() => loginAction(LoginActions.LoginFailed)} />\r\n          <Route path={ApplicationPaths.LoginCallback} render={() => loginAction(LoginActions.LoginCallback)} />\r\n          <Route path={ApplicationPaths.Profile} render={() => loginAction(LoginActions.Profile)} />\r\n          <Route path={ApplicationPaths.Register} render={() => loginAction(LoginActions.Register)} />\r\n          <Route path={ApplicationPaths.LogOut} render={() => logoutAction(LogoutActions.Logout)} />\r\n          <Route path={ApplicationPaths.LogOutCallback} render={() => logoutAction(LogoutActions.LogoutCallback)} />\r\n          <Route path={ApplicationPaths.LoggedOut} render={() => logoutAction(LogoutActions.LoggedOut)} />\r\n      </Fragment>);\r\n  }\r\n}\r\n\r\nfunction loginAction(name){\r\n    return (<Login action={name}></Login>);\r\n}\r\n\r\nfunction logoutAction(name) {\r\n    return (<Logout action={name}></Logout>);\r\n}\r\n","import React, { Component, Fragment } from 'react';\r\nimport { NavItem, NavLink } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport authService from './AuthorizeService';\r\nimport { ApplicationPaths } from './ApiAuthorizationConstants';\r\n\r\nexport class LoginMenu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isAuthenticated: false,\r\n            userName: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._subscription = authService.subscribe(() => this.populateState());\r\n        this.populateState();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        authService.unsubscribe(this._subscription);\r\n    }\r\n\r\n    async populateState() {\r\n        const [isAuthenticated, user] = await Promise.all([authService.isAuthenticated(), authService.getUser()])\r\n        this.setState({\r\n            isAuthenticated,\r\n            userName: user && user.name\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { isAuthenticated, userName } = this.state;\r\n        if (!isAuthenticated) {\r\n            const registerPath = `${ApplicationPaths.Register}`;\r\n            const loginPath = `${ApplicationPaths.Login}`;\r\n            return this.anonymousView(registerPath, loginPath);\r\n        } else {\r\n            const profilePath = `${ApplicationPaths.Profile}`;\r\n            const logoutPath = { pathname: `${ApplicationPaths.LogOut}`, state: { local: true } };\r\n            return this.authenticatedView(userName, profilePath, logoutPath);\r\n        }\r\n    }\r\n\r\n    authenticatedView(userName, profilePath, logoutPath) {\r\n        return (<Fragment>\r\n            <NavItem>\r\n                <NavLink className='header__button' tag={Link} to={profilePath}>Profile</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n                <NavLink className='header__button' tag={Link} to={logoutPath}>Logout</NavLink>\r\n            </NavItem>\r\n        </Fragment>);\r\n\r\n    }\r\n\r\n    anonymousView(registerPath, loginPath) {\r\n        return (<Fragment>\r\n            <NavItem>\r\n                <NavLink tag={Link} className='header__button' to={registerPath}>Register</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n                <NavLink tag={Link} className='header__button' to={loginPath}>Login</NavLink>\r\n            </NavItem>\r\n        </Fragment>);\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Collapse, Container, Navbar, NavbarBrand, NavItem, NavLink } from 'reactstrap';\r\nimport classNames from \"classnames\"\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { LoginMenu } from '../api-authorization/LoginMenu';\r\nimport './NavMenu.css';\r\nimport '../../styles.css';\r\nimport authService from \"../api-authorization/AuthorizeService\";\r\nimport {UserRoles} from \"../api-authorization/ApiAuthorizationConstants\";\r\n\r\nexport class NavMenu extends Component {\r\n    static displayName = NavMenu.name;\r\n\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            collapsed: true,\r\n            isAdmin : false,\r\n            role : \"none\"\r\n        };\r\n        this.titleClasses = classNames(\"title\", \"logo\");\r\n        this.headerClasses = classNames(\"casing__header\", \"header\", \"container-border\");\r\n        this.toggleNavbar = this.toggleNavbar.bind(this);\r\n    }\r\n\r\n    toggleNavbar () {\r\n        this.setState({\r\n            collapsed: !this.state.collapsed\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        authService.subscribe(() => this.isAdmin());\r\n        this.isAdmin();\r\n    }\r\n\r\n    async isAdmin(){\r\n        const isAdmin = await authService.hasRole(UserRoles.Administrator);\r\n        this.setState({\r\n            isAdmin\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render () {\r\n        this.buttonsWrapperClasses = classNames(\"header__buttons-wrapper\", {\"header__buttons-wrapper--open\" : !this.state.collapsed});\r\n        return (\r\n            <header>\r\n                <Navbar>\r\n                    <Container className={this.headerClasses}>\r\n                        <div className='header__logo'>\r\n                            <h1 className='header__title'>\r\n                                <NavbarBrand className={this.titleClasses} tag={Link} to=\"/\">Online Auction</NavbarBrand>\r\n                            </h1>\r\n                            <div className=\"header__logo-description\">\r\n                                The biggest online auction platform in solar system!\r\n                            </div>\r\n                        </div>\r\n                        <a className=\"header__menu-button header__menu-button--hidden\" onClick={() => this.toggleNavbar()}>\r\n                            <div className=\"menu-icon-bar\"/>\r\n                            <div className=\"menu-icon-bar\"/>\r\n                            <div className=\"menu-icon-bar\"/>\r\n                        </a>\r\n                        <ul className={this.buttonsWrapperClasses}>\r\n                            <NavItem>\r\n                                <NavLink className='header__button' tag={Link} to=\"/\">Home</NavLink>\r\n                            </NavItem>\r\n                            {\r\n                                this.state.isAdmin &&\r\n                                    <NavItem>\r\n                                        <NavLink className='header__button' tag={Link} to=\"/new-lot\">New Lot</NavLink>\r\n                                    </NavItem>\r\n                            }\r\n                            {\r\n                                this.state.isAdmin &&\r\n                                    <NavItem>\r\n                                        <NavLink className='header__button' tag={Link} to=\"/admin-panel\">Admin Panel</NavLink>\r\n                                    </NavItem>\r\n                            }\r\n                            <NavItem>\r\n                                <NavLink className='header__button' tag={Link} to=\"/winners\">Winners</NavLink>\r\n                            </NavItem>\r\n                            <LoginMenu>\r\n                            </LoginMenu>\r\n                        </ul>\r\n                    </Container>\r\n                </Navbar>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n","export const lotControllerPath = \"api/lots\";\r\n\r\nexport const lotHubPath = \"/lot-hub\"\r\nexport const startLotMethod = \"StartLot\";\r\nexport const activateLotCommand = \"ActivateLot\";\r\nexport const activateLotMessage = \"active\";\r\nexport const decreaseTimeCommand = \"DecreaseTime\";\r\n\r\nexport const increasePriceHubPath = \"/increase-price\";\r\nexport const increasePriceMethod = \"IncreasePrice\";\r\nexport const priceUpdateCommand = \"PriceUpdate\";\r\nexport const stopCommand = \"Stop\";\r\n\r\nexport const winnersControllerPath = \"api/winners\";\r\n\r\nexport const iconsPath = \"https://localhost:44390/api/images/icons\";\r\n\r\nexport const maxDurationSec = 86400;","import React, {useMemo} from \"react\"\r\nimport classNames from \"classnames\"\r\nimport {iconsPath} from \"../LotConstants\";\r\n\r\nexport default function Footer(){\r\n    const classes = useMemo(() => {\r\n        return {\r\n            footerClasses : classNames(\"casing__footer\", \"footer\", \"container-border\"),\r\n            cardNameClasses : classNames(\"footer__card-name\", \"title\"),\r\n            snInfoClasses : classNames(\"footer__card-info\", \"footer__sn-info\")\r\n        }\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <footer className={classes.footerClasses}>\r\n            <div className=\"footer__card\">\r\n                <div className={classes.cardNameClasses}>copyrights</div>\r\n                <div className=\"footer__card-info\">@2020. Online Auction. All rights reserved</div>\r\n            </div>\r\n            <div className=\"footer__card\">\r\n                <div className={classes.cardNameClasses}>connect me</div>\r\n                <ul className=\"footer__sn-wrapper\">\r\n                    <li className=\"footer__sn\">\r\n                        <a className=\"footer__sn-link\" href=\"mailto:Mickita.Sharshun@itechart-group.com\">\r\n                            <img className=\"footer__sn-icon\" src={`${iconsPath}/outlook-icon.png`} alt=\"outlook\"/>\r\n                            <span className={classes.snInfoClasses}>Outlook</span>\r\n                        </a>\r\n                    </li>\r\n                    <li className=\"footer__sn\">\r\n                        <a className=\"footer__sn-link\" href=\"https://github.com/sharshoon\">\r\n                            <img className=\"footer__sn-icon\" src={`${iconsPath}/github-icon.png`} alt=\"github\"/>\r\n                            <span className={classes.snInfoClasses}>GitHub</span>\r\n                        </a>\r\n                    </li>\r\n                    <li className=\"footer__sn\">\r\n                        <a className=\"footer__sn-link\" href=\"https://join.skype.com/invite/b4dT1glZDPZ4\">\r\n                            <img className=\"footer__sn-icon\" src={`${iconsPath}/skype-icon.png`} alt=\"skype\"/>\r\n                            <span className={classes.snInfoClasses}>Skype</span>\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </footer>\r\n    );\r\n}","import React from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport { NavMenu } from './NavMenu/NavMenu';\r\nimport Footer from \"./Footer/Footer\";\r\n\r\nexport function Layout(props) {\r\n    return (\r\n        <div>\r\n            <NavMenu/>\r\n            <Container>\r\n              {props.children}\r\n            </Container>\r\n            <Footer/>\r\n        </div>\r\n    );\r\n}\r\n","import React, {useMemo} from 'react'\r\nimport classNames from \"classnames\"\r\nimport {Link, NavLink} from \"react-router-dom\";\r\n\r\nexport default function LotPreview({lot}){\r\n    const classes = useMemo(() => {\r\n        return {\r\n            lotPreviewClasses: classNames(\"main__lot-preview\", \"lot-preview\", \"container-border\"),\r\n            lotPreviewInfo : classNames(\"lot-preview__info\", \"info\"),\r\n            lotNameClasses: classNames(\"lot-preview__name title\")\r\n        }\r\n    }, []);\r\n\r\n    const buttonClasses = useMemo(() => {\r\n        return classNames(\"button\", \"lot-preview__button\");\r\n    }, [])\r\n    return (\r\n        <div className={classes.lotPreviewClasses}>\r\n            <div className='lot-preview__image-wrapper'>\r\n                <img className='lot-preview__image' src={lot.imagePath} alt=\"lot\"/>\r\n            </div>\r\n            <div className={classes.lotPreviewInfo}>\r\n                <div className=\"lot-preview__info-text-wrapper\">\r\n                    <div className=\"lot-preview__title-wrapper\">\r\n                        <NavLink className={classes.lotNameClasses} to={`/lots/${lot.id}`}  tag={Link}>{lot.name}</NavLink>\r\n                        {lot.isSold && <div className=\"lot-preview__sold-lot-message\">Lot is sold!</div>}\r\n                    </div>\r\n                    <div className='lot-preview__description'>{lot.description}</div>\r\n                </div>\r\n                <div className=\"lot-preview__info-button-wrapper\">\r\n                    <Link className={buttonClasses} to={`/lots/${lot.id}`} tag={Link}>\r\n                            Go to the lot page\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","export const FETCH_LOTS = 'FETCH_LOTS';\r\nexport const FETCH_LOT = 'FETCH_LOT';\r\nexport const UPDATE_LOT = 'UPDATE_LOT';\r\nexport const UPDATE_LOT_PRICE = 'UPDATE_LOT_PRICE';\r\nexport const UPDATE_LOT_ACTIVITY = 'UPDATE_LOT_ACTIVITY';\r\nexport const CLOSE_LOT = 'CLOSE_LOT';\r\nexport const DELETE_LOT = 'DELETE_LOT';\r\nexport const SHOW_LOT_LOADER = 'LOT/SHOW_LOADER';\r\nexport const HIDE_LOT_LOADER = 'LOT/HIDE_LOADER';\r\nexport const SHOW_WINNERS_LOADER = 'WINNERS/SHOW_LOADER';\r\nexport const HIDE_WINNERS_LOADER = 'WINNERS/HIDE_LOADER';","import {\r\n    CLOSE_LOT,\r\n    DELETE_LOT,\r\n    FETCH_LOT,\r\n    FETCH_LOTS,\r\n    HIDE_LOT_LOADER, HIDE_WINNERS_LOADER,\r\n    SHOW_LOT_LOADER, SHOW_WINNERS_LOADER,\r\n    UPDATE_LOT,\r\n    UPDATE_LOT_ACTIVITY,\r\n    UPDATE_LOT_PRICE\r\n} from \"./types\";\r\nimport {lotControllerPath} from \"../components/LotConstants\";\r\nimport authService from \"../components/api-authorization/AuthorizeService\";\r\n\r\nexport function fetchLots(page, onlyUnsold){\r\n    return async dispatch => {\r\n        dispatch(showLoader());\r\n        const response = await fetch(`${lotControllerPath}?page=${page}&onlyUnsold=${onlyUnsold}`);\r\n        const json = await response.json();\r\n        dispatch({type : FETCH_LOTS, payload: {...json, activePage : page, onlyUnsold}})\r\n        dispatch(hideLoader());\r\n    }\r\n}\r\n\r\nexport function fetchLot(id){\r\n    return async dispatch => {\r\n        dispatch(showLoader());\r\n        const response = await fetch(`${lotControllerPath}/${id}`);\r\n        const json = await response.json();\r\n        dispatch({type : FETCH_LOT, payload: json})\r\n        dispatch(hideLoader());\r\n    }\r\n}\r\n\r\nexport function updateLot(lot){\r\n    return dispatch => {\r\n        dispatch({type : UPDATE_LOT, payload: lot})\r\n    }\r\n}\r\n\r\n\r\nexport function updateLotPrice(id, price){\r\n    return dispatch => {\r\n        dispatch({type : UPDATE_LOT_PRICE, payload: {id, price}})\r\n    }\r\n}\r\n\r\nexport function updateLotActivity(id, isActive){\r\n    return dispatch => {\r\n        dispatch({type : UPDATE_LOT_ACTIVITY, payload: {id, isActive}})\r\n    }\r\n}\r\n\r\nexport function closeLot(id){\r\n    return dispatch => {\r\n        dispatch({type : CLOSE_LOT, payload: {id}})\r\n    }\r\n}\r\n\r\nexport function deleteLotAction(id){\r\n    return async dispatch => {\r\n        const token = await authService.getAccessToken();\r\n        const response = await fetch(`${lotControllerPath}/${id}`, {\r\n            method : \"DELETE\",\r\n            headers: !token ? {} : {\r\n                'Authorization': `Bearer ${token}`,\r\n            },\r\n        })\r\n\r\n        if(response.ok){\r\n            dispatch({type : DELETE_LOT, payload: {id}})\r\n        }\r\n        else{\r\n            throw new Error(await response.text());\r\n        }\r\n    }\r\n}\r\n\r\nexport function showLoader() {\r\n    return {\r\n        type: SHOW_LOT_LOADER\r\n    }\r\n}\r\n\r\nexport function hideLoader() {\r\n    return {\r\n        type: HIDE_LOT_LOADER\r\n    }\r\n}\r\n\r\nexport function showWinnersLoader() {\r\n    return {\r\n        type: SHOW_WINNERS_LOADER\r\n    }\r\n}\r\n\r\nexport function hideWinnersLoader() {\r\n    return {\r\n        type: HIDE_WINNERS_LOADER\r\n    }\r\n}","import React from \"react\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {fetchLots} from \"../../redux/actions\";\r\nimport classNames from \"classnames\"\r\n\r\nexport default function Pagination({pageCount}){\r\n    const items = [];\r\n    const dispatch = useDispatch();\r\n    const lotsInfo = useSelector(state => state.lotsInfo);\r\n    for(let i = 1; i <= pageCount; i++){\r\n        items.push(<button\r\n            className={classNames(\"pagination__link\", {\"pagination__link--active\" : lotsInfo.activePage === i})}\r\n            onClick={() => dispatch(fetchLots(i, lotsInfo.onlyUnsold))}\r\n            key={i}\r\n            >\r\n                {i}\r\n            </button>\r\n        );\r\n    }\r\n    return (\r\n        <div className=\"pagination\">\r\n            {\r\n                lotsInfo.activePage !== 1 && <button\r\n                className=\"pagination__link\"\r\n                onClick={() => dispatch(fetchLots(lotsInfo.activePage - 1, lotsInfo.onlyUnsold))}\r\n                >\r\n                    «\r\n                </button>\r\n            }\r\n            {items}\r\n            {\r\n                lotsInfo.activePage !== lotsInfo.totalPages && <button\r\n                    className=\"pagination__link\"\r\n                    onClick={() => dispatch(fetchLots(lotsInfo.activePage + 1, lotsInfo.onlyUnsold))}\r\n                >\r\n                    »\r\n                </button>\r\n            }\r\n        </div>\r\n    )\r\n}","import React from \"react\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {fetchLots} from \"../../redux/actions\";\r\n\r\nexport default function Switcher(){\r\n    const dispatch = useDispatch();\r\n    const onlyUnsold = useSelector(state => state.lotsInfo.onlyUnsold);\r\n    return (\r\n        <div className=\"main__switcher-wrapper\">\r\n            <div className=\"switcher\">\r\n                <input type=\"checkbox\" checked={!onlyUnsold} onChange={() => dispatch(fetchLots(1, !onlyUnsold))} className=\"switcher__checkbox\"/>\r\n                <div className=\"switcher__knobs\"/>\r\n                <div className=\"switcher__layer\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useEffect} from 'react'\r\nimport LotPreview from \"../LotPreview/LotPreview\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {fetchLots} from \"../../redux/actions\";\r\nimport classNames from \"classnames\"\r\nimport LoadingPage from \"../LoadingPage/LoadingPage\";\r\nimport Pagination from \"../Pagination/Pagination\";\r\nimport Switcher from \"../Switcher/Switcher\";\r\n\r\nexport default function Lots(){\r\n    const dispatch = useDispatch();\r\n    const lotsInfo = useSelector(state => state.lotsInfo);\r\n    const loading = useSelector(state => state.app.lotLoading);\r\n    const lotsWrapperClasses = classNames(\"main\", \"main__lot-preview-wrapper\", \"container-border\");\r\n    useEffect(() => {\r\n        dispatch(fetchLots(1, lotsInfo.onlyUnsold));\r\n    },[dispatch]);\r\n\r\n    if(loading){\r\n        return <LoadingPage/>\r\n    }\r\n    if(!lotsInfo.lots){\r\n        return (\r\n            <div className={lotsWrapperClasses}>\r\n                <Switcher/>\r\n                <div className=\"main__custom-message-page\">Error</div>\r\n            </div>\r\n        )\r\n    }\r\n    if(lotsInfo.lots && !lotsInfo.lots.length){\r\n        return (\r\n            <div className={lotsWrapperClasses}>\r\n                <Switcher/>\r\n                <div className=\"main__custom-message-page\">There are no lots on the server</div>\r\n            </div>)\r\n    }\r\n    return (\r\n        <div className={lotsWrapperClasses}>\r\n            <Switcher/>\r\n            {lotsInfo.lots.map(lot => <LotPreview lot={lot} key={lot.id}/>)}\r\n            <div className=\"main__pagination\">\r\n                <Pagination pageCount={lotsInfo.totalPages}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport Lots from \"../Lots/Lots\";\r\n\r\nexport function Home(){\r\n  return (\r\n      <Lots/>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Component } from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { ApplicationPaths, QueryParameterNames } from './ApiAuthorizationConstants'\r\nimport authService from './AuthorizeService'\r\n\r\nexport default class AuthorizeRoute extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ready: false,\r\n            authenticated: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._subscription = authService.subscribe(() => this.authenticationChanged());\r\n        this.populateAuthenticationState();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        authService.unsubscribe(this._subscription);\r\n    }\r\n\r\n    render() {\r\n        const { ready, authenticated } = this.state;\r\n        var link = document.createElement(\"a\");\r\n        link.href = this.props.path;\r\n        const returnUrl = `${link.protocol}//${link.host}${link.pathname}${link.search}${link.hash}`;\r\n        const redirectUrl = `${ApplicationPaths.Login}?${QueryParameterNames.ReturnUrl}=${encodeURI(returnUrl)}`\r\n        if (!ready) {\r\n            return <div></div>;\r\n        } else {\r\n            const { component: Component, ...rest } = this.props;\r\n            return <Route {...rest}\r\n                render={(props) => {\r\n                    if (authenticated) {\r\n                        return <Component {...props} />\r\n                    } else {\r\n                        return <Redirect to={redirectUrl} />\r\n                    }\r\n                }} />\r\n        }\r\n    }\r\n\r\n    async populateAuthenticationState() {\r\n        const authenticated = await authService.isAuthenticated();\r\n        this.setState({ ready: true, authenticated });\r\n    }\r\n\r\n    async authenticationChanged() {\r\n        this.setState({ ready: false, authenticated: false });\r\n        await this.populateAuthenticationState();\r\n    }\r\n}\r\n","export const minuteSeconds = 60;\r\nexport const hourSeconds = 3600;\r\n\r\nexport const renderTime = (dimension, time, timerItemClasses) => {\r\n    return (\r\n        <div className={timerItemClasses}>\r\n            <div className=\"timer__time\">{time}</div>\r\n            <div>{dimension}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const getTimeMinutes = time => ((time % hourSeconds) / minuteSeconds) | 0;\r\nexport const getTimeHours = time => (time / hourSeconds) | 0;","import * as signalR from \"@microsoft/signalr\";\r\nimport {activateLotCommand, activateLotMessage, lotHubPath} from \"../LotConstants\";\r\nimport {updateLot} from \"../../redux/actions\";\r\n\r\nexport const openHubConnection = function(dispatch, lot){\r\n    const hubConnection = new signalR.HubConnectionBuilder()\r\n        .withUrl(lotHubPath)\r\n        .build();\r\n\r\n    hubConnection.on(activateLotCommand, function (message, id) {\r\n        if(lot.id === parseInt(id)){\r\n            dispatch(updateLot({...lot, isActive: message === activateLotMessage}));\r\n        }\r\n    });\r\n    hubConnection.start();\r\n\r\n    return hubConnection;\r\n}","import React, {useEffect, useRef, useState} from \"react\";\r\nimport classNames from \"classnames\"\r\nimport {\r\n    decreaseTimeCommand,\r\n    stopCommand\r\n} from \"../LotConstants\";\r\nimport {closeLot, updateLotActivity, updateLotPrice} from \"../../redux/actions\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {getTimeHours, getTimeMinutes, minuteSeconds, renderTime} from \"./getTime\";\r\nimport {openHubConnection} from \"./openHubConnection\";\r\n\r\nexport default function Timer({lot}) {\r\n    const [remainSeconds, setSeconds] = useState(0);\r\n    const hubConnection = useRef(null);\r\n    const isMountedRef = useRef(null);\r\n    const isActive = useRef(false);\r\n    const dispatch = useDispatch();\r\n    const timerItemClasses = classNames(\"timer__item\", {\"timer__item--translucent\" : !lot.isActive});\r\n    const timerClasses = classNames(\"main__timer\",\"timer\");\r\n    let lotMessage;\r\n\r\n    useEffect(() => {\r\n        isMountedRef.current = true;\r\n        if(lot && !hubConnection.current) {\r\n            hubConnection.current = openHubConnection(dispatch, lot);\r\n\r\n            hubConnection.current.on(decreaseTimeCommand, function (seconds, price, id) {\r\n                if(isMountedRef.current && id === lot.id){\r\n                    if(!isActive.current){\r\n                        isActive.current = true;\r\n                        dispatch(updateLotActivity(lot.id, true));\r\n                    }\r\n                    setSeconds(seconds);\r\n\r\n                    if(lot.priceUsd !== price){\r\n                        dispatch(updateLotPrice(lot.id, price));\r\n                    }\r\n                }\r\n            });\r\n\r\n            hubConnection.current.on(stopCommand, function(id){\r\n                if(lot.id === id){\r\n                    dispatch(closeLot(lot.id));\r\n                }\r\n            });\r\n        }\r\n\r\n        return () => isMountedRef.current = false;\r\n    }, [lot, hubConnection]);\r\n\r\n    if(lot.isSold || !lot.isActive){\r\n        return null;\r\n        // lotMessage = <div className='timer__not-active'>This lot is sold!</div>\r\n        // lotMessage = <div className='timer__not-active'>This lot is not active!</div>\r\n    }\r\n    return (\r\n        <div className='main__timer-wrapper'>\r\n            {lotMessage}\r\n            <div className={timerClasses}>\r\n                {renderTime(\"hours\", getTimeHours(remainSeconds), timerItemClasses)}\r\n                {renderTime(\"minutes\", getTimeMinutes(remainSeconds), timerItemClasses)}\r\n                {renderTime(\"seconds\", remainSeconds % minuteSeconds | 0, timerItemClasses)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, {useCallback, useEffect, useMemo, useRef, useState} from \"react\";\r\nimport {\r\n    increasePriceHubPath,\r\n    increasePriceMethod,\r\n    priceUpdateCommand,\r\n} from \"../LotConstants\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {updateLotPrice} from \"../../redux/actions\";\r\nimport * as signalR from \"@microsoft/signalr\";\r\nimport classNames from \"classnames\"\r\nimport authService from \"../api-authorization/AuthorizeService\";\r\nimport {UserRoles} from \"../api-authorization/ApiAuthorizationConstants\";\r\n\r\nexport default function IncreaseRateButtons({id}){\r\n    const dispatch = useDispatch();\r\n    const lot = useSelector(state => state.lotsInfo.lots.find(lot => lot.id === parseInt(id)));\r\n    const hubConnection = useRef(null);\r\n    const [isUser, setUser] = useState(false);\r\n\r\n    const setConnection = useCallback(async (lot) => {\r\n        try{\r\n            const token = await authService.getAccessToken();\r\n            if(token !== null) {\r\n                hubConnection.current = new signalR.HubConnectionBuilder()\r\n                    .withUrl(increasePriceHubPath, {accessTokenFactory: () => token})\r\n                    .build();\r\n\r\n                hubConnection.current.on(priceUpdateCommand, function (info) {\r\n                    const json = JSON.parse(info);\r\n                    if (json.lotId === lot.id && json.successed) {\r\n                        dispatch(updateLotPrice(json.lotId, json.priceUsd));\r\n                    }\r\n                });\r\n                await hubConnection.current.start();\r\n                const isUser = await authService.hasRole(UserRoles.User);\r\n                setUser(isUser);\r\n            }\r\n        }\r\n        catch{\r\n            alert(\"error\");\r\n        }\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        setConnection(lot);\r\n    }, [setConnection])\r\n\r\n    const updatePrice = useCallback((percentage, lot) => {\r\n        if(hubConnection.current){\r\n            hubConnection.current.invoke(increasePriceMethod, lot.id, parseInt(lot.priceUsd) || parseInt(lot.minPriceUsd), percentage);\r\n        }\r\n    }, []);\r\n\r\n    const buttonClasses = useMemo(() => {\r\n        return classNames(\"button\", \"lot-info__button\")\r\n    }, []);\r\n\r\n    const getNewPrice = useCallback((price, percentage) => {\r\n        return Math.trunc(price + price * percentage / 100);\r\n    }, [])\r\n\r\n    if(lot.isSold || !lot.isActive){\r\n        return null;\r\n    }\r\n    return (\r\n        <div>\r\n            {\r\n                !isUser && <p className=\"lot-info__error\">You cannot place bets as you are not a user</p>\r\n            }\r\n            <div className='lot-info__buttons'>\r\n                <button className={buttonClasses} disabled={!lot.isActive || !isUser} onClick={() => updatePrice(5, lot)}>+5% [{getNewPrice(lot.priceUsd || lot.minPriceUsd,5)}]</button>\r\n                <button className={buttonClasses} disabled={!lot.isActive || !isUser} onClick={() => updatePrice(10, lot)}>+10% [{getNewPrice(lot.priceUsd || lot.minPriceUsd,10)}]</button>\r\n                <button className={buttonClasses} disabled={!lot.isActive || !isUser} onClick={() => updatePrice(20, lot)}>+20% [{getNewPrice(lot.priceUsd || lot.minPriceUsd,20)}]</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import classNames from \"classnames\"\r\n\r\nexport const lotClasses = {\r\n    soldLotClasses : classNames(\"main__lot-message\",\"main__lot-message--sold\"),\r\n    notActiveClasses : classNames(\"main__lot-message\",\"main__lot-message--not-active\"),\r\n}","import React, {useEffect, useMemo} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {fetchLot} from \"../../redux/actions\";\r\nimport classNames from 'classnames'\r\nimport Timer from \"../Timer/Timer\";\r\nimport IncreaseRateButtons from \"../IncreaseRateButtons/IncreaseRateButtons\";\r\nimport LoadingPage from \"../LoadingPage/LoadingPage\";\r\nimport CustomMessagePage from \"../CustomMessagePage/CustomMessagePage\";\r\nimport {lotClasses} from \"./classes\";\r\n\r\nexport default function Lot({id}){\r\n    const dispatch = useDispatch();\r\n    const lot = useSelector(state => state.lotsInfo.lots.find(lot => lot.id === parseInt(id)));\r\n    const loading = useSelector(state => state.app.lotLoading);\r\n\r\n    useEffect(() => {\r\n        if(!lot){\r\n            dispatch(fetchLot(id));\r\n        }\r\n    }, []);\r\n\r\n    const classes = useMemo(() => {\r\n        return {\r\n            titleClasses : classNames(\"main__title\",\"title\"),\r\n            lotInfoClasses : classNames(\"main__lot-info\", \"lot-info\", \"info\")\r\n        }\r\n    }, [])\r\n\r\n    if(loading){\r\n        return <LoadingPage/>\r\n    }\r\n    if(!lot){\r\n        return <CustomMessagePage message={\"There is no such lot on the server\"}/>\r\n    }\r\n\r\n    return (\r\n        <div className='main container-border'>\r\n            <div className='main__lot-info-wrapper'>\r\n                <div className={classes.titleClasses}>\r\n                    {lot.name}\r\n                    {lot.isSold && <div className={lotClasses.soldLotClasses}>Lot is sold!</div>}\r\n                    {!lot.isSold && !lot.isActive && <div className={lotClasses.notActiveClasses}>Lot is not active!</div>}\r\n                </div>\r\n                <img className='main__image' src={lot.imagePath} alt=\"lot\"/>\r\n                <div className={classes.lotInfoClasses}>\r\n                    <div className='lot-info__item'><span className=\"lot-info__name\">Description: </span><span>{lot.description}</span></div>\r\n                    <div className='lot-info__item'><span className=\"lot-info__name\">Price: </span><span>{lot.priceUsd || lot.minPriceUsd} USD</span></div>\r\n                    <Timer lot={lot}/>\r\n                    <IncreaseRateButtons id={id}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport Lot from \"../Lot/Lot\";\r\nimport Lots from \"../Lots/Lots\";\r\n\r\nexport default function LotsPlug(props){\r\n    const id = props.match.params.id;\r\n    if(id){\r\n        return <Lot id={id}/>\r\n    }\r\n\r\n    return <Lots/>\r\n}","import React from 'react'\r\n\r\nexport default function FormErrors({errors}){\r\n    if(errors && errors.length > 0){\r\n        return errors.map((error, id) => <p className=\"form-item__error\" key={id}>{error}</p>);\r\n    }\r\n    else{\r\n        return '';\r\n    }\r\n}\r\n\r\n","import FormErrors from \"../FormErrors/FormErrors\";\r\nimport React, {useCallback, useMemo} from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nexport default function AddLotTextInput({labelText, type, checkingFunctions, state, setState}){\r\n    const classes = useMemo(() => {\r\n        return {\r\n            formClasses : classNames(\"add-lot__item\", \"form-item\"),\r\n            inputClasses : classNames(\"form-item__input\", \"container-border\", {\"form-item__input--error\" : state.errors.length !== 0})\r\n        }\r\n    }, [state]);\r\n\r\n    const handleChangeText = useCallback((event) => {\r\n        const errors = [];\r\n\r\n        for(let func of checkingFunctions()){\r\n            const result = func(event.target.value);\r\n            if(result){\r\n                errors.push(result);\r\n            }\r\n        }\r\n\r\n        setState({\r\n            value : event.target.value,\r\n            errors: errors\r\n        });\r\n    }, [checkingFunctions, setState])\r\n\r\n    return(\r\n        <div className={classes.formClasses}>\r\n            <label className=\"form-item__label\">{labelText}</label>\r\n            <FormErrors errors={state.errors}/>\r\n            <input className={classes.inputClasses}\r\n                   value={state.value}\r\n                   onChange={(event) => setState({value: event.target.value, errors: []})}\r\n                   onBlur={handleChangeText}\r\n                   type={type}\r\n                   required={true}/>\r\n        </div>\r\n    )\r\n}","import React, {useMemo} from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nexport default function ResultTextBlock({successed, message}){\r\n    const classes = useMemo(() => {\r\n        return classNames(\"result-block\", {\"result-block--error\" : !successed})\r\n    }, [successed]);\r\n\r\n    if(message) {\r\n        return (\r\n            <p className={classes}>{message}</p>\r\n        )\r\n    }\r\n    else{\r\n        return '';\r\n    }\r\n}","import {maxDurationSec} from \"../LotConstants\";\r\n\r\nexport const descriptionCheckingFunctions = () => {\r\n    const descriptionMinLength = 20;\r\n    const functions = [];\r\n    functions.push((value) => {\r\n        if(value.length <= descriptionMinLength){\r\n            return `Description length can't be shorter then ${descriptionMinLength}`;\r\n        }\r\n    });\r\n\r\n    return functions;\r\n}\r\n\r\nexport const nameCheckingFunctions = () => {\r\n    const functions = [];\r\n\r\n    functions.push((value) => {\r\n        if(!value){\r\n            return \"Name can't be empty!\";\r\n        }\r\n    });\r\n\r\n    return functions;\r\n}\r\n\r\nexport const minPriceCheckingFunctions = () => {\r\n    const functions = [];\r\n    functions.push((value) => {\r\n        if(isNaN(+value) || value < 0){\r\n            return \"Invalid price!\";\r\n        }\r\n    });\r\n\r\n    return functions;\r\n}\r\n\r\nexport const durationCheckingFunctions = () => {\r\n    const functions = [];\r\n    functions.push((value) => {\r\n        if(isNaN(+value)){\r\n            return \"Invalid duration!\";\r\n        }\r\n    });\r\n    functions.push((value) => {\r\n        if(+value < 10){\r\n            return \"Duration is too small\"\r\n        }\r\n    });\r\n    functions.push((value) => {\r\n        if(+value > maxDurationSec){\r\n            return \"Duration is too big!\";\r\n        }\r\n    });\r\n\r\n    return functions;\r\n}","import {lotControllerPath} from \"../LotConstants\";\r\n\r\nexport default async function TryAddLot(token, formData, setAddingResult){\r\n    const response = await fetch(lotControllerPath,{\r\n        method: 'POST',\r\n        headers: !token ? {} : {\r\n            'Accept': '*/*',\r\n            'Authorization': `Bearer ${token}`,\r\n        },\r\n        body: formData\r\n    });\r\n    if(response.ok){\r\n        setAddingResult({\r\n            successed: true,\r\n            message: \"Lot was successfully added!\",\r\n        });\r\n    }else{\r\n        setAddingResult({\r\n            successed: false,\r\n            message: \"Lot wasn't added. Check your image for validity\",\r\n        });\r\n    }\r\n}","import classNames from \"classnames\";\r\n\r\nexport const classes = {\r\n    mainClasses : classNames(\"main\", \"container\", \"container-border\", \"add-lot\"),\r\n    titleClasses : classNames(\"title\", \"title--center\"),\r\n    buttonClasses : classNames(\"button\", \"form-item__button\"),\r\n    buttonWrapperClasses : classNames(\"add-lot__item\", \"form-item\", \"form-item__buttons-wrapper\")\r\n}","import checkImageSize from \"./checkImageSize\";\r\n\r\nexport const fileSelectedHandler = (event, setFile, setFileErrors) => {\r\n    checkImageSize(event.target.files[0], (result) => {\r\n        if(result){\r\n            setFile(event.target.files[0]);\r\n            setFileErrors([]);\r\n        }\r\n        else{\r\n            setFileErrors([\"Image size is invalid!\"]);\r\n        }\r\n    });\r\n}","export default function checkImageSize(file, callback){\r\n    let reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = function (e) {\r\n        let image = new Image();\r\n        image.src = e.target.result;\r\n        image.onload = function () {\r\n            callback(this.height <= this.width);\r\n        };\r\n    }\r\n}","export const checkParametersValidity = (fields) => {\r\n    for(let field of fields){\r\n        if (field.length || (field.errors && field.errors.length)){\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}","import React, {useCallback, useState} from \"react\";\r\nimport authService from \"../api-authorization/AuthorizeService\";\r\nimport FormErrors from \"../FormErrors/FormErrors\";\r\nimport AddLotTextInput from \"../AddLotTextInput/AddLotTextInput\";\r\nimport ResultTextBlock from \"../ResultTextBlock/ResultTextBlock\";\r\nimport {\r\n    descriptionCheckingFunctions,\r\n    durationCheckingFunctions,\r\n    minPriceCheckingFunctions,\r\n    nameCheckingFunctions\r\n} from \"./inputCheckingFunctions\";\r\nimport TryAddLot from \"./tryAddLot\";\r\nimport {classes} from \"./addLotClasses\";\r\nimport {fileSelectedHandler} from \"./fileSelectedHandler\";\r\nimport {checkParametersValidity} from \"./checkParametersValidity\";\r\n\r\nexport default function AddLot(){\r\n    const [file, setFile] = useState({\r\n        name: \"\"\r\n    });\r\n    const [addingResult, setAddingResult] = useState({\r\n        message: \"\",\r\n        successed: true\r\n    });\r\n    const [lotName, setLotName] = useState({\r\n        value: \"\",\r\n        errors: []\r\n    });\r\n    const [lotDescription, setDescription] = useState({\r\n        value: \"\",\r\n        errors: []\r\n    });\r\n    const [lotMinPrice, setMinPrice] = useState({\r\n        value: 0,\r\n        errors: []\r\n    });\r\n    const [lotDuration, setDuration] = useState({\r\n        value: 0,\r\n        errors: []\r\n    });\r\n    const [fileErrors, setFileErrors] = useState([]);\r\n\r\n    const uploadDataCallback = useCallback(async (lotName, lotDescription, lotMinPrice, lotDuration) => {\r\n        const token = await authService.getAccessToken();\r\n        const formData = new FormData();\r\n\r\n        if(file.name){\r\n            formData.append('image', file, file.name);\r\n        }\r\n        formData.append('name', lotName);\r\n        formData.append('description', lotDescription);\r\n        formData.append('minPrice', lotMinPrice);\r\n        formData.append('duration', lotDuration);\r\n\r\n        try{\r\n            await TryAddLot(token, formData, setAddingResult);\r\n        }\r\n        catch (error){\r\n            setAddingResult({\r\n                successed: false,\r\n                message: \"An error occurred while adding a new lot!\",\r\n            })\r\n        }\r\n        finally {\r\n            setLotName({value : \"\", errors: []});\r\n            setDescription({value : \"\", errors: []});\r\n            setMinPrice({value : 0, errors: []});\r\n            setDuration({value : 0, errors: []});\r\n        }\r\n    }, [file])\r\n\r\n    const fileUploadHandler = (event) => {\r\n        event.preventDefault();\r\n        uploadDataCallback(lotName.value, lotDescription.value, lotMinPrice.value, lotDuration.value);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.mainClasses}>\r\n            <h2 className={classes.titleClasses}>Adding a new lot</h2>\r\n            <ResultTextBlock successed={addingResult.successed} message={addingResult.message}/>\r\n            <form className=\"add-lot__form\" onSubmit={fileUploadHandler}>\r\n                <AddLotTextInput labelText={\"Name:\"} type={\"text\"} checkingFunctions={nameCheckingFunctions} state={lotName} setState={setLotName}/>\r\n                <AddLotTextInput labelText={\"Description:\"} type={\"text\"} checkingFunctions={descriptionCheckingFunctions} state={lotDescription} setState={setDescription}/>\r\n                <AddLotTextInput labelText={\"Minimum price USD:\"} type={\"number\"} checkingFunctions={minPriceCheckingFunctions} state={lotMinPrice} setState={setMinPrice}/>\r\n                <AddLotTextInput labelText={\"Duration, sec:\"} type={\"number\"} checkingFunctions={durationCheckingFunctions} state={lotDuration} setState={setDuration}/>\r\n                <div className={classes.buttonWrapperClasses}>\r\n                    <div className={\"form-item__error-wrapper\"}>\r\n                        <FormErrors errors={fileErrors}/>\r\n                    </div>\r\n                    <label className={classes.buttonClasses} htmlFor=\"choose-file-input\">{file.name || \"Choose File...\"}</label>\r\n                    <input className=\"form-item__file-choose\" type=\"file\" onChange={(event) => fileSelectedHandler(event, setFile, setFileErrors)} id=\"choose-file-input\"/>\r\n                </div>\r\n                <div className={classes.buttonWrapperClasses}>\r\n                    <button disabled={checkParametersValidity([lotName, lotDescription, lotMinPrice, lotDuration, fileErrors])}\r\n                            type=\"submit\"\r\n                            className={classes.buttonClasses}\r\n                    >\r\n                        Upload\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React, {useCallback, useEffect, useState} from 'react';\r\nimport authService from \"../api-authorization/AuthorizeService\";\r\nimport AddLot from \"../AddLot/AddLot\";\r\nimport {UserRoles} from \"../api-authorization/ApiAuthorizationConstants\";\r\nimport LoadingPage from \"../LoadingPage/LoadingPage\";\r\nimport CustomMessagePage from \"../CustomMessagePage/CustomMessagePage\";\r\n\r\nexport default function AddLotPage(){\r\n    let [admin, setAdmin] = useState(null);\r\n\r\n    const isAdminCallback = useCallback(async() => {\r\n        const isAdmin = await authService.hasRole(UserRoles.Administrator);\r\n        setAdmin(isAdmin)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        authService.subscribe(() => isAdminCallback());\r\n        isAdminCallback();\r\n    }, [isAdminCallback])\r\n\r\n    if(admin){\r\n        return (\r\n            <div>\r\n                <AddLot/>\r\n            </div>\r\n        )\r\n    }\r\n    if(admin === false){\r\n        return <CustomMessagePage message={\"You dont have access to this component!\"}/>\r\n    }\r\n    else{\r\n        return <LoadingPage/>;\r\n    }\r\n}\r\n","import authService from \"../api-authorization/AuthorizeService\";\r\nimport {lotControllerPath} from \"../LotConstants\";\r\n\r\nexport const startAfter = async (lot, nextLot, setOperationResult, setNextLot) => {\r\n    if(nextLot.lotId.toString() === nextLot.previousLotId.toString() && nextLot.lotId !==\"\"){\r\n        setOperationResult({\r\n            successed: false,\r\n            message: \"Cannot start this lot after itself!\",\r\n        });\r\n        return;\r\n    }\r\n\r\n    if(!lot.isSold && !lot.isActive) {\r\n        if (nextLot.lotId) {\r\n            const token = await authService.getAccessToken();\r\n            const response = await fetch(lotControllerPath, {\r\n                method: 'PATCH',\r\n                headers: !token ? {} : {\r\n                    'Accept': '*/*',\r\n                    'Authorization': `Bearer ${token}`,\r\n                },\r\n                body: JSON.stringify(nextLot)\r\n            });\r\n\r\n            if (response.ok) {\r\n                setOperationResult({\r\n                    successed: true,\r\n                    message: \"Next Lot Id was successfully added!\",\r\n                });\r\n            } else {\r\n                setOperationResult({\r\n                    successed: false,\r\n                    message: \"Id wasn't added, error!\",\r\n                });\r\n            }\r\n        }\r\n        else{\r\n            setOperationResult({\r\n                successed: false,\r\n                message: \"Lot is sold!\",\r\n            });\r\n        }\r\n    }\r\n    setNextLot({\r\n        lotId : \"\",\r\n        previousLotId : \"\",\r\n        visible: false\r\n    });\r\n}","import classNames from \"classnames\";\r\n\r\nexport const adminLotPreviewClasses =  {\r\n    lotPreviewClasses: classNames(\"main__lot-preview\", \"main__admin-lot-preview\", \"admin-lot-preview\", \"container-border\"),\r\n    lotNameClasses: classNames(\"lot-preview__name title\"),\r\n    buttonClasses : classNames(\"button\", \"admin-lot-preview__button\"),\r\n    buttonSetNexLotClasses : classNames(\"button\", \"admin-lot-preview__button\", \"admin-lot-preview__set-next-lot-button\"),\r\n    buttonWarningClasses : classNames(\"button\", \"admin-lot-preview__button\", \"button--warning\"),\r\n    inputClasses : classNames(\"form-item__input\", \"container-border\",\"admin-lot-preview__input\"),\r\n    setNextLotInputClasses : classNames(\"form-item__input\", \"container-border\",\"admin-lot-preview__input\", \"admin-lot-preview__set-next-lot-input\")\r\n};","import {deleteLotAction} from \"../../redux/actions\";\r\n\r\nexport const deleteLot = (dispatch, id, setOperationResult) => {\r\n    try{\r\n        dispatch(deleteLotAction(id));\r\n        setOperationResult({\r\n            message: \"Lot was successfully deleted\",\r\n            successed: true\r\n        })\r\n    }\r\n    catch(e){\r\n        setOperationResult({\r\n            message: e.message,\r\n            successed: false\r\n        });\r\n    }\r\n}","import React, {useCallback, useState} from 'react'\r\nimport classNames from \"classnames\"\r\nimport {Link, NavLink} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {startAfter} from \"./startAfter\";\r\nimport {handleStartAfter} from \"./handleStartAfter\";\r\nimport {adminLotPreviewClasses} from \"./classes\";\r\nimport {deleteLot} from \"./deleteLot\";\r\nimport {lotHubPath, startLotMethod} from \"../LotConstants\";\r\nimport * as signalR from \"@microsoft/signalr\";\r\n\r\nexport default function AdminLotPreview({lot, connection, setOperationResult}){\r\n    const dispatch = useDispatch();\r\n    const [nextLot, setNextLot] = useState({\r\n        lotId: \"\",\r\n        previousLotId: \"\",\r\n        visible : false\r\n    });\r\n    const inputWrapperClasses = classNames(\"admin-lot-preview__input-wrapper\", {\"admin-lot-preview__input-wrapper--visible\" : nextLot.visible});\r\n    const buttonNextLotClasses = classNames(\"button\", \"admin-lot-preview__button\", {\"admin-lot-preview__button--hidden\" : nextLot.visible});\r\n    const startLotCallback = useCallback((lot, setOperationResult) => {\r\n        if(!lot.isSold && !lot.isActive){\r\n            const startLotConnection = new signalR.HubConnectionBuilder()\r\n                .withUrl(lotHubPath)\r\n                .build();\r\n\r\n            startLotConnection.start().then(() => {\r\n                startLotConnection.invoke(startLotMethod, \"active\", lot.id);\r\n                setOperationResult({\r\n                    message: \"Lot started successfully!\",\r\n                    successed: true\r\n                });\r\n            });\r\n        }\r\n        else {\r\n            setOperationResult({\r\n                message: \"The lot has already been sold!\",\r\n                successed: false\r\n            })\r\n        }\r\n    }, [connection, lot]);\r\n\r\n    const deleteLotCallback = useCallback((id, dispatch) => {\r\n        deleteLot(dispatch, id, setOperationResult);\r\n    }, [setOperationResult])\r\n\r\n    return (\r\n        <div className={adminLotPreviewClasses.lotPreviewClasses}>\r\n            <NavLink className={adminLotPreviewClasses.lotNameClasses} to={`/lots/${lot.id}`}  tag={Link}>{lot.name} [ID:{lot.id}]</NavLink>\r\n            <div className=\"admin-lot-preview__buttons-wrapper\">\r\n                <button className={adminLotPreviewClasses.buttonClasses} disabled={!connection} onClick={() => startLotCallback(lot, setOperationResult)}>Start Lot</button>\r\n                <button\r\n                    className={buttonNextLotClasses}\r\n                    disabled={!connection}\r\n                    onClick={() => handleStartAfter(setNextLot, nextLot)}\r\n                >\r\n                    Start After...\r\n                </button>\r\n                <div className={inputWrapperClasses}>\r\n                    <input className={adminLotPreviewClasses.setNextLotInputClasses}\r\n                           value={nextLot.nextLotId}\r\n                           onChange={(event) => setNextLot({\r\n                               lotId : lot.id,\r\n                               previousLotId: event.target.value,\r\n                               visible : true\r\n                           })}\r\n                           type=\"number\"\r\n                           required={true}/>\r\n                    <button className={adminLotPreviewClasses.buttonSetNexLotClasses} disabled={!connection} onClick={() => {\r\n                        startAfter(lot, nextLot, setOperationResult, setNextLot)\r\n                    }}>Set</button>\r\n                </div>\r\n                <button className={adminLotPreviewClasses.buttonWarningClasses} onClick={() => deleteLotCallback(lot.id, dispatch)}>Delete lot</button>\r\n                <div className=\"admin-lot-preview__link-wrapper\">\r\n                    <Link className={adminLotPreviewClasses.buttonClasses} to={`/lots/${lot.id}`} tag={Link}>\r\n                        Go to the lot page\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","export const handleStartAfter = (setNextLot, nextLot) => {\r\n    setNextLot({\r\n        lotId: \"\",\r\n        previousLotId: \"\",\r\n        visible: !nextLot.visible\r\n    })\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport classNames from \"classnames\";\r\nimport {fetchLots} from \"../../redux/actions\";\r\nimport LoadingPage from \"../LoadingPage/LoadingPage\";\r\nimport AdminLotPreview from \"../AdminLotPreview/AdminLotPreview\";\r\nimport {lotHubPath} from \"../LotConstants\";\r\nimport * as signalR from \"@microsoft/signalr\";\r\nimport ResultTextBlock from \"../ResultTextBlock/ResultTextBlock\";\r\nimport CustomMessagePage from \"../CustomMessagePage/CustomMessagePage\";\r\nimport Pagination from \"../Pagination/Pagination\";\r\n\r\nexport default function AdminPanel(){\r\n    const dispatch = useDispatch();\r\n    const lotsInfo = useSelector(state => state.lotsInfo);\r\n    const loading = useSelector(state => state.app.lotLoading);\r\n    const [operationResult, setResult] = useState({\r\n        message: \"\",\r\n        successed: true\r\n    });\r\n    const lotsWrapperClasses = classNames(\"main\", \"main__admin-lot-preview-wrapper\", \"container-border\");\r\n    useEffect(() => {\r\n        dispatch(fetchLots(1, false));\r\n    },[dispatch]);\r\n    const [hubConnection, setConnection] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const connection = new signalR.HubConnectionBuilder()\r\n            .withUrl(lotHubPath)\r\n            .build();\r\n\r\n        connection.start().then(() => {\r\n            setConnection(connection);\r\n        });\r\n    }, [])\r\n\r\n    if(loading){\r\n        return <LoadingPage/>\r\n    }\r\n    if(!lotsInfo.lots){\r\n        return <CustomMessagePage message={\"Error\"}/>\r\n    }\r\n    if(!lotsInfo.lots.length){\r\n        return <CustomMessagePage message={\"There are no lots on the server\"}/>\r\n    }\r\n    return (\r\n        <div className={lotsWrapperClasses}>\r\n            <ResultTextBlock successed={operationResult.successed} message={operationResult.message}/>\r\n            {lotsInfo.lots.map(lot => <AdminLotPreview lot={lot} key={lot.id} connection={hubConnection} setOperationResult={setResult}/>)}\r\n            <div className=\"main__pagination\">\r\n                <Pagination pageCount={lotsInfo.totalPages}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useCallback, useEffect, useState} from 'react';\r\nimport authService from \"../api-authorization/AuthorizeService\";\r\nimport LoadingPage from \"../LoadingPage/LoadingPage\";\r\nimport AdminPanel from \"../AdminPanel/AdminPanel\";\r\nimport {UserRoles} from \"../api-authorization/ApiAuthorizationConstants\";\r\nimport CustomMessagePage from \"../CustomMessagePage/CustomMessagePage\";\r\n\r\nexport default function AdminPanelPage(){\r\n    let [admin, setAdmin] = useState(null);\r\n\r\n    const CheckAdminRights = useCallback(async() => {\r\n        const isAdmin = await authService.hasRole(UserRoles.Administrator);\r\n        setAdmin(isAdmin)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        authService.subscribe(() => CheckAdminRights());\r\n        CheckAdminRights();\r\n    }, [CheckAdminRights])\r\n\r\n\r\n    if(admin){\r\n        return (\r\n            <div>\r\n                <AdminPanel/>\r\n            </div>\r\n        )\r\n    }\r\n    if(admin === false){\r\n        return <CustomMessagePage message={\"You dont have access to this component!\"}/>\r\n    }\r\n    else{\r\n        return <LoadingPage/>;\r\n    }\r\n}\r\n","import React, {useCallback, useEffect, useMemo, useState} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {winnersControllerPath} from \"../LotConstants\";\r\nimport LoadingPage from \"../LoadingPage/LoadingPage\";\r\nimport classNames from \"classnames\";\r\nimport {hideWinnersLoader, showWinnersLoader} from \"../../redux/actions\";\r\nimport CustomMessagePage from \"../CustomMessagePage/CustomMessagePage\";\r\n\r\nexport default function Winners(){\r\n    const [winners, setWinners] = useState([]);\r\n    const dispatch = useDispatch();\r\n    const loading = useSelector(state => state.app.winnersLoading);\r\n\r\n    const getWinners = useCallback(async () => {\r\n        dispatch(showWinnersLoader());\r\n        const response = await fetch(winnersControllerPath);\r\n        const json = await response.json();\r\n        dispatch(hideWinnersLoader());\r\n        setWinners(json);\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        getWinners();\r\n    }, [])\r\n\r\n    const classes = useMemo(() => {\r\n        return {\r\n            mainClasses : classNames(\"main\", \"container-border\", \"main__winners\"),\r\n            tableClasses : classNames(\"table\")\r\n        }\r\n    }, [])\r\n\r\n    if(loading){\r\n        return <LoadingPage/>\r\n    }\r\n    if(!winners.length){\r\n        return <CustomMessagePage message={\"No information about the lot winners!\"}/>\r\n    }\r\n\r\n    return (\r\n        <div className={classes.mainClasses}>\r\n            <table className={classes.tableClasses}>\r\n                <thead className=\"table__header\">\r\n                    <tr>\r\n                        <th className=\"table__header-item\">Lot ID</th>\r\n                        <th className=\"table__header-item\">Lot Name</th>\r\n                        <th className=\"table__header-item\">Winner ID</th>\r\n                        <th className=\"table__header-item\">Winner Name</th>\r\n                        <th className=\"table__header-item\">Sold Price</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"table__body\">\r\n                {winners.map(winner => {\r\n                    return (\r\n                        <tr key={winner.id}>\r\n                            <th className=\"table__item\">{winner.id}</th>\r\n                            <th className=\"table__item\">{winner.lotName}</th>\r\n                            <th className=\"table__item\">{winner.userId  ?? \"-\"}</th>\r\n                            <th className=\"table__item\">{winner.ownerName ?? \"-\"}</th>\r\n                            <th className=\"table__item\">{winner.priceUsd} USD</th>\r\n                        </tr>\r\n                    )\r\n                })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport { Route } from 'react-router';\r\n\r\nimport ApiAuthorizationRoutes from './components/api-authorization/ApiAuthorizationRoutes';\r\nimport { ApplicationPaths } from './components/api-authorization/ApiAuthorizationConstants';\r\nimport { Layout } from './components/Layout';\r\nimport { Home } from './components/Home/Home';\r\nimport './styles.css'\r\nimport AuthorizeRoute from \"./components/api-authorization/AuthorizeRoute\";\r\nimport classNames from 'classnames'\r\nimport Timer from \"./components/Timer/Timer\";\r\nimport LotsPlug from \"./components/LotsPlug/LotsPlug\";\r\nimport AddLotPage from \"./components/AddLotPage/AddLotPage\";\r\nimport AdminPanelPage from \"./components/AdminPanelPage/AdminPanelPage\";\r\nimport Winners from \"./components/Winners/Winners\";\r\nimport LoginForm from \"./components/Login/LoginForm\";\r\n\r\nexport default class App extends Component {\r\n    static displayName = App.name;\r\n\r\n    render () {\r\n        const containerClasses = classNames(\"casing\", \"casing__body\");\r\n        return (\r\n            <div className={containerClasses}>\r\n                <Layout className='container'>\r\n                    <Route exact path='/' component={Home} />\r\n                    <Route path='/Identity/Account/Login' component={LoginForm} />\r\n                    <Route exact path='/timer' component={Timer} />\r\n                    <Route path='/lots/:id?' component={LotsPlug}/>\r\n                    <Route path='/winners' component={Winners}/>\r\n                    <AuthorizeRoute path='/new-lot' component={AddLotPage}/>\r\n                    <AuthorizeRoute path='/admin-panel' component={AdminPanelPage}/>\r\n                    <Route path={ApplicationPaths.ApiAuthorizationPrefix} component={ApiAuthorizationRoutes} />\r\n                </Layout>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import {UPDATE_LOT, FETCH_LOT, FETCH_LOTS, UPDATE_LOT_PRICE, DELETE_LOT, UPDATE_LOT_ACTIVITY, CLOSE_LOT} from \"./types\";\r\n\r\nconst initialState = {\r\n    lots : [],\r\n    activePage : 1,\r\n    totalPages : 0,\r\n    onlyUnsold : true\r\n}\r\n\r\nexport const lotsReducer = (state = initialState, action) => {\r\n    switch (action.type){\r\n        case FETCH_LOTS:\r\n            return {\r\n                ...state,\r\n                lots: action.payload.lots,\r\n                totalPages: action.payload.pagesCount,\r\n                activePage: action.payload.activePage,\r\n                onlyUnsold: action.payload.onlyUnsold\r\n            };\r\n        case FETCH_LOT:\r\n            return {...state, lots : state.lots.concat(action.payload)};\r\n        case UPDATE_LOT:\r\n            return {...state, lots : state.lots.map(lot=> {\r\n                if(lot.id === action.payload.id){\r\n                    return action.payload;\r\n                }\r\n                return lot;\r\n            })};\r\n        case UPDATE_LOT_PRICE:\r\n            return {...state, lots: state.lots.map(lot => {\r\n                if(lot.id === action.payload.id){\r\n                    return {...lot, priceUsd: action.payload.price}\r\n                }\r\n                return lot;\r\n                })}\r\n        case UPDATE_LOT_ACTIVITY:\r\n            return {...state, lots: state.lots.map(lot => {\r\n                    if(lot.id === action.payload.id){\r\n                        return {...lot, isActive: action.payload.isActive}\r\n                    }\r\n                    return lot;\r\n                })}\r\n        case CLOSE_LOT:\r\n            return {...state, lots: state.lots.map(lot => {\r\n                    if(lot.id === action.payload.id){\r\n                        return {...lot, isActive: false, isSold: true}\r\n                    }\r\n                    return lot;\r\n                })}\r\n        case DELETE_LOT:\r\n            return {...state, lots: state.lots.filter(lot => lot.id !== action.payload.id)}\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    HIDE_LOT_LOADER,\r\n    HIDE_WINNERS_LOADER,\r\n    SHOW_LOT_LOADER,\r\n    SHOW_WINNERS_LOADER\r\n} from \"./types\";\r\n\r\nconst initialState = {\r\n    lotLoading: false,\r\n    winnersLoading: false,\r\n}\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SHOW_LOT_LOADER:\r\n            return {...state, lotLoading: true}\r\n        case HIDE_LOT_LOADER:\r\n            return {...state, lotLoading: false}\r\n        case SHOW_WINNERS_LOADER:\r\n            return {...state, winnersLoading: true}\r\n        case HIDE_WINNERS_LOADER:\r\n            return {...state, winnersLoading: false}\r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from \"redux\";\r\nimport {lotsReducer} from \"./lotsReducer\";\r\nimport {appReducer} from \"./appReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    lotsInfo : lotsReducer,\r\n    app: appReducer\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport {Provider} from \"react-redux\";\r\nimport {applyMiddleware, compose, createStore} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport App from './App';\r\nimport {rootReducer} from \"./redux/rootReducer\";\r\n//import registerServiceWorker from './registerServiceWorker';\r\n\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\r\nconst rootElement = document.getElementById('root');\r\nconst store = createStore(rootReducer, compose(\r\n    applyMiddleware(\r\n        thunk\r\n    ),\r\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n));\r\n\r\nReactDOM.render(\r\n    <Provider store={store }>\r\n        <BrowserRouter basename={baseUrl}>\r\n            <App/>\r\n        </BrowserRouter>\r\n    </Provider>,\r\n  rootElement);\r\n\r\n// Uncomment the line above that imports the registerServiceWorker function\r\n// and the line below to register the generated service worker.\r\n// By default create-react-app includes a service worker to improve the\r\n// performance of the application by caching static assets. This service\r\n// worker can interfere with the Identity UI, so it is\r\n// disabled by default when Identity is being used.\r\n//\r\n//registerServiceWorker();\r\n\r\n"],"sourceRoot":""}